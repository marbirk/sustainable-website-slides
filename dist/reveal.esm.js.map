{"version":3,"file":"reveal.esm.js","sources":["../js/utils/util.js","../js/utils/device.js","../node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/controllers/slidenumber.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/utils/constants.js","../js/controllers/autoanimate.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/print.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = (a, b) => {\n  for (let i in b) {\n    a[i] = b[i];\n  }\n\n  return a;\n};\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = (el, selector) => {\n  return Array.from(el.querySelectorAll(selector));\n};\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = (el, className, value) => {\n  if (value) {\n    el.classList.add(className);\n  } else {\n    el.classList.remove(className);\n  }\n};\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = (value) => {\n  if (typeof value === \"string\") {\n    if (value === \"null\") return null;\n    else if (value === \"true\") return true;\n    else if (value === \"false\") return false;\n    else if (value.match(/^-?[\\d\\.]+$/)) return parseFloat(value);\n  }\n\n  return value;\n};\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = (a, b) => {\n  let dx = a.x - b.x,\n    dy = a.y - b.y;\n\n  return Math.sqrt(dx * dx + dy * dy);\n};\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = (element, transform) => {\n  element.style.transform = transform;\n};\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = (target, selector) => {\n  let matchesMethod =\n    target.matches || target.matchesSelector || target.msMatchesSelector;\n\n  return !!(matchesMethod && matchesMethod.call(target, selector));\n};\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = (target, selector) => {\n  // Native Element.closest\n  if (typeof target.closest === \"function\") {\n    return target.closest(selector);\n  }\n\n  // Polyfill\n  while (target) {\n    if (matches(target, selector)) {\n      return target;\n    }\n\n    // Keep searching\n    target = target.parentNode;\n  }\n\n  return null;\n};\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = (element) => {\n  element = element || document.documentElement;\n\n  // Check which implementation is available\n  let requestMethod =\n    element.requestFullscreen ||\n    element.webkitRequestFullscreen ||\n    element.webkitRequestFullScreen ||\n    element.mozRequestFullScreen ||\n    element.msRequestFullscreen;\n\n  if (requestMethod) {\n    requestMethod.apply(element);\n  }\n};\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = (\n  container,\n  tagname,\n  classname,\n  innerHTML = \"\"\n) => {\n  // Find all nodes matching the description\n  let nodes = container.querySelectorAll(\".\" + classname);\n\n  // Check all matches to find one which is a direct child of\n  // the specified container\n  for (let i = 0; i < nodes.length; i++) {\n    let testNode = nodes[i];\n    if (testNode.parentNode === container) {\n      return testNode;\n    }\n  }\n\n  // If no node was found, create it now\n  let node = document.createElement(tagname);\n  node.className = classname;\n  node.innerHTML = innerHTML;\n  container.appendChild(node);\n\n  return node;\n};\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = (value) => {\n  let tag = document.createElement(\"style\");\n  tag.type = \"text/css\";\n\n  if (value && value.length > 0) {\n    if (tag.styleSheet) {\n      tag.styleSheet.cssText = value;\n    } else {\n      tag.appendChild(document.createTextNode(value));\n    }\n  }\n\n  document.head.appendChild(tag);\n\n  return tag;\n};\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n  let query = {};\n\n  location.search.replace(/[A-Z0-9]+?=([\\w\\.%-]*)/gi, (a) => {\n    query[a.split(\"=\").shift()] = a.split(\"=\").pop();\n  });\n\n  // Basic deserialization\n  for (let i in query) {\n    let value = query[i];\n\n    query[i] = deserialize(unescape(value));\n  }\n\n  // Do not accept new dependencies via query config to avoid\n  // the potential of malicious script injection\n  if (typeof query[\"dependencies\"] !== \"undefined\")\n    delete query[\"dependencies\"];\n\n  return query;\n};\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = (element, height = 0) => {\n  if (element) {\n    let newHeight,\n      oldHeight = element.style.height;\n\n    // Change the .stretch element height to 0 in order find the height of all\n    // the other elements\n    element.style.height = \"0px\";\n\n    // In Overview mode, the parent (.slide) height is set of 700px.\n    // Restore it temporarily to its natural height.\n    element.parentNode.style.height = \"auto\";\n\n    newHeight = height - element.parentNode.offsetHeight;\n\n    // Restore the old height, just in case\n    element.style.height = oldHeight + \"px\";\n\n    // Clear the parent (.slide) height. .removeProperty works in IE9+\n    element.parentNode.style.removeProperty(\"height\");\n\n    return newHeight;\n  }\n\n  return height;\n};\n\nconst fileExtensionToMimeMap = {\n  mp4: \"video/mp4\",\n  m4a: \"video/mp4\",\n  ogv: \"video/ogg\",\n  mpeg: \"video/mpeg\",\n  webm: \"video/webm\",\n};\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = (filename = \"\") => {\n  return fileExtensionToMimeMap[filename.split(\".\").pop()];\n};\n","const UA = navigator.userAgent;\n\nexport const isMobile =\n  /(iphone|ipod|ipad|android)/gi.test(UA) ||\n  (navigator.platform === \"MacIntel\" && navigator.maxTouchPoints > 1); // iPadOS\n\nexport const isChrome = /chrome/i.test(UA) && !/edge/i.test(UA);\n\nexport const isAndroid = /android/gi.test(UA);\n","/**\n * fitty v2.3.6 - Snugly resizes text to fit its parent container\n * Copyright (c) 2022 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n\nvar e=function(e){if(e){var t=function(e){return[].slice.call(e)},n=0,i=1,r=2,o=3,a=[],l=null,u=\"requestAnimationFrame\"in e?function(){e.cancelAnimationFrame(l),l=e.requestAnimationFrame((function(){return s(a.filter((function(e){return e.dirty&&e.active})))}))}:function(){},c=function(e){return function(){a.forEach((function(t){return t.dirty=e})),u()}},s=function(e){e.filter((function(e){return!e.styleComputed})).forEach((function(e){e.styleComputed=m(e)})),e.filter(y).forEach(v);var t=e.filter(p);t.forEach(d),t.forEach((function(e){v(e),f(e)})),t.forEach(S)},f=function(e){return e.dirty=n},d=function(e){e.availableWidth=e.element.parentNode.clientWidth,e.currentWidth=e.element.scrollWidth,e.previousFontSize=e.currentFontSize,e.currentFontSize=Math.min(Math.max(e.minSize,e.availableWidth/e.currentWidth*e.previousFontSize),e.maxSize),e.whiteSpace=e.multiLine&&e.currentFontSize===e.minSize?\"normal\":\"nowrap\"},p=function(e){return e.dirty!==r||e.dirty===r&&e.element.parentNode.clientWidth!==e.availableWidth},m=function(t){var n=e.getComputedStyle(t.element,null);return t.currentFontSize=parseFloat(n.getPropertyValue(\"font-size\")),t.display=n.getPropertyValue(\"display\"),t.whiteSpace=n.getPropertyValue(\"white-space\"),!0},y=function(e){var t=!1;return!e.preStyleTestCompleted&&(/inline-/.test(e.display)||(t=!0,e.display=\"inline-block\"),\"nowrap\"!==e.whiteSpace&&(t=!0,e.whiteSpace=\"nowrap\"),e.preStyleTestCompleted=!0,t)},v=function(e){e.element.style.whiteSpace=e.whiteSpace,e.element.style.display=e.display,e.element.style.fontSize=e.currentFontSize+\"px\"},S=function(e){e.element.dispatchEvent(new CustomEvent(\"fit\",{detail:{oldValue:e.previousFontSize,newValue:e.currentFontSize,scaleFactor:e.currentFontSize/e.previousFontSize}}))},h=function(e,t){return function(){e.dirty=t,e.active&&u()}},w=function(e){return function(){a=a.filter((function(t){return t.element!==e.element})),e.observeMutations&&e.observer.disconnect(),e.element.style.whiteSpace=e.originalStyle.whiteSpace,e.element.style.display=e.originalStyle.display,e.element.style.fontSize=e.originalStyle.fontSize}},b=function(e){return function(){e.active||(e.active=!0,u())}},z=function(e){return function(){return e.active=!1}},F=function(e){e.observeMutations&&(e.observer=new MutationObserver(h(e,i)),e.observer.observe(e.element,e.observeMutations))},g={minSize:16,maxSize:512,multiLine:!0,observeMutations:\"MutationObserver\"in e&&{subtree:!0,childList:!0,characterData:!0}},W=null,E=function(){e.clearTimeout(W),W=e.setTimeout(c(r),x.observeWindowDelay)},M=[\"resize\",\"orientationchange\"];return Object.defineProperty(x,\"observeWindow\",{set:function(t){var n=\"\".concat(t?\"add\":\"remove\",\"EventListener\");M.forEach((function(t){e[n](t,E)}))}}),x.observeWindow=!0,x.observeWindowDelay=100,x.fitAll=c(o),x}function C(e,t){var n=Object.assign({},g,t),i=e.map((function(e){var t=Object.assign({},n,{element:e,active:!0});return function(e){e.originalStyle={whiteSpace:e.element.style.whiteSpace,display:e.element.style.display,fontSize:e.element.style.fontSize},F(e),e.newbie=!0,e.dirty=!0,a.push(e)}(t),{element:e,fit:h(t,o),unfreeze:b(t),freeze:z(t),unsubscribe:w(t)}}));return u(),i}function x(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return\"string\"==typeof e?C(t(document.querySelectorAll(e)),n):C([e],n)[0]}}(\"undefined\"==typeof window?null:window);export default e;\n","import {\n  extend,\n  queryAll,\n  closest,\n  getMimeTypeFromFile,\n} from \"../utils/util.js\";\nimport { isMobile } from \"../utils/device.js\";\n\nimport fitty from \"fitty\";\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n\n    this.startEmbeddedIframe = this.startEmbeddedIframe.bind(this);\n  }\n\n  /**\n   * Should the given element be preloaded?\n   * Decides based on local element attributes and global config.\n   *\n   * @param {HTMLElement} element\n   */\n  shouldPreload(element) {\n    // Prefer an explicit global preload setting\n    let preload = this.Reveal.getConfig().preloadIframes;\n\n    // If no global setting is available, fall back on the element's\n    // own preload setting\n    if (typeof preload !== \"boolean\") {\n      preload = element.hasAttribute(\"data-preload\");\n    }\n\n    return preload;\n  }\n\n  /**\n   * Called when the given slide is within the configured view\n   * distance. Shows the slide element and loads any content\n   * that is set to load lazily (data-src).\n   *\n   * @param {HTMLElement} slide Slide to show\n   */\n  load(slide, options = {}) {\n    // Show the slide element\n    slide.style.display = this.Reveal.getConfig().display;\n\n    // Media elements with data-src attributes\n    queryAll(\n      slide,\n      \"img[data-src], video[data-src], audio[data-src], iframe[data-src]\"\n    ).forEach((element) => {\n      if (element.tagName !== \"IFRAME\" || this.shouldPreload(element)) {\n        element.setAttribute(\"src\", element.getAttribute(\"data-src\"));\n        element.setAttribute(\"data-lazy-loaded\", \"\");\n        element.removeAttribute(\"data-src\");\n      }\n    });\n\n    // Media elements with <source> children\n    queryAll(slide, \"video, audio\").forEach((media) => {\n      let sources = 0;\n\n      queryAll(media, \"source[data-src]\").forEach((source) => {\n        source.setAttribute(\"src\", source.getAttribute(\"data-src\"));\n        source.removeAttribute(\"data-src\");\n        source.setAttribute(\"data-lazy-loaded\", \"\");\n        sources += 1;\n      });\n\n      // Enable inline video playback in mobile Safari\n      if (isMobile && media.tagName === \"VIDEO\") {\n        media.setAttribute(\"playsinline\", \"\");\n      }\n\n      // If we rewrote sources for this video/audio element, we need\n      // to manually tell it to load from its new origin\n      if (sources > 0) {\n        media.load();\n      }\n    });\n\n    // Show the corresponding background element\n    let background = slide.slideBackgroundElement;\n    if (background) {\n      background.style.display = \"block\";\n\n      let backgroundContent = slide.slideBackgroundContentElement;\n      let backgroundIframe = slide.getAttribute(\"data-background-iframe\");\n\n      // If the background contains media, load it\n      if (background.hasAttribute(\"data-loaded\") === false) {\n        background.setAttribute(\"data-loaded\", \"true\");\n\n        let backgroundImage = slide.getAttribute(\"data-background-image\"),\n          backgroundVideo = slide.getAttribute(\"data-background-video\"),\n          backgroundVideoLoop = slide.hasAttribute(\n            \"data-background-video-loop\"\n          ),\n          backgroundVideoMuted = slide.hasAttribute(\n            \"data-background-video-muted\"\n          );\n\n        // Images\n        if (backgroundImage) {\n          // base64\n          if (/^data:/.test(backgroundImage.trim())) {\n            backgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n          }\n          // URL(s)\n          else {\n            backgroundContent.style.backgroundImage = backgroundImage\n              .split(\",\")\n              .map((background) => {\n                return `url(${encodeURI(background.trim())})`;\n              })\n              .join(\",\");\n          }\n        }\n        // Videos\n        else if (backgroundVideo && !this.Reveal.isSpeakerNotes()) {\n          let video = document.createElement(\"video\");\n\n          if (backgroundVideoLoop) {\n            video.setAttribute(\"loop\", \"\");\n          }\n\n          if (backgroundVideoMuted) {\n            video.muted = true;\n          }\n\n          // Enable inline playback in mobile Safari\n          //\n          // Mute is required for video to play when using\n          // swipe gestures to navigate since they don't\n          // count as direct user actions :'(\n          if (isMobile) {\n            video.muted = true;\n            video.setAttribute(\"playsinline\", \"\");\n          }\n\n          // Support comma separated lists of video sources\n          backgroundVideo.split(\",\").forEach((source) => {\n            let type = getMimeTypeFromFile(source);\n            if (type) {\n              video.innerHTML += `<source src=\"${source}\" type=\"${type}\">`;\n            } else {\n              video.innerHTML += `<source src=\"${source}\">`;\n            }\n          });\n\n          backgroundContent.appendChild(video);\n        }\n        // Iframes\n        else if (backgroundIframe && options.excludeIframes !== true) {\n          let iframe = document.createElement(\"iframe\");\n          iframe.setAttribute(\"allowfullscreen\", \"\");\n          iframe.setAttribute(\"mozallowfullscreen\", \"\");\n          iframe.setAttribute(\"webkitallowfullscreen\", \"\");\n          iframe.setAttribute(\"allow\", \"autoplay\");\n\n          iframe.setAttribute(\"data-src\", backgroundIframe);\n\n          iframe.style.width = \"100%\";\n          iframe.style.height = \"100%\";\n          iframe.style.maxHeight = \"100%\";\n          iframe.style.maxWidth = \"100%\";\n\n          backgroundContent.appendChild(iframe);\n        }\n      }\n\n      // Start loading preloadable iframes\n      let backgroundIframeElement =\n        backgroundContent.querySelector(\"iframe[data-src]\");\n      if (backgroundIframeElement) {\n        // Check if this iframe is eligible to be preloaded\n        if (\n          this.shouldPreload(background) &&\n          !/autoplay=(1|true|yes)/gi.test(backgroundIframe)\n        ) {\n          if (\n            backgroundIframeElement.getAttribute(\"src\") !== backgroundIframe\n          ) {\n            backgroundIframeElement.setAttribute(\"src\", backgroundIframe);\n          }\n        }\n      }\n    }\n\n    this.layout(slide);\n  }\n\n  /**\n   * Applies JS-dependent layout helpers for the scope.\n   */\n  layout(scopeElement) {\n    // Autosize text with the r-fit-text class based on the\n    // size of its container. This needs to happen after the\n    // slide is visible in order to measure the text.\n    Array.from(scopeElement.querySelectorAll(\".r-fit-text\")).forEach(\n      (element) => {\n        fitty(element, {\n          minSize: 24,\n          maxSize: this.Reveal.getConfig().height * 0.8,\n          observeMutations: false,\n          observeWindow: false,\n        });\n      }\n    );\n  }\n\n  /**\n   * Unloads and hides the given slide. This is called when the\n   * slide is moved outside of the configured view distance.\n   *\n   * @param {HTMLElement} slide\n   */\n  unload(slide) {\n    // Hide the slide element\n    slide.style.display = \"none\";\n\n    // Hide the corresponding background element\n    let background = this.Reveal.getSlideBackground(slide);\n    if (background) {\n      background.style.display = \"none\";\n\n      // Unload any background iframes\n      queryAll(background, \"iframe[src]\").forEach((element) => {\n        element.removeAttribute(\"src\");\n      });\n    }\n\n    // Reset lazy-loaded media elements with src attributes\n    queryAll(\n      slide,\n      \"video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]\"\n    ).forEach((element) => {\n      element.setAttribute(\"data-src\", element.getAttribute(\"src\"));\n      element.removeAttribute(\"src\");\n    });\n\n    // Reset lazy-loaded media elements with <source> children\n    queryAll(\n      slide,\n      \"video[data-lazy-loaded] source[src], audio source[src]\"\n    ).forEach((source) => {\n      source.setAttribute(\"data-src\", source.getAttribute(\"src\"));\n      source.removeAttribute(\"src\");\n    });\n  }\n\n  /**\n   * Enforces origin-specific format rules for embedded media.\n   */\n  formatEmbeddedContent() {\n    let _appendParamToIframeSource = (sourceAttribute, sourceURL, param) => {\n      queryAll(\n        this.Reveal.getSlidesElement(),\n        \"iframe[\" + sourceAttribute + '*=\"' + sourceURL + '\"]'\n      ).forEach((el) => {\n        let src = el.getAttribute(sourceAttribute);\n        if (src && src.indexOf(param) === -1) {\n          el.setAttribute(\n            sourceAttribute,\n            src + (!/\\?/.test(src) ? \"?\" : \"&\") + param\n          );\n        }\n      });\n    };\n\n    // YouTube frames must include \"?enablejsapi=1\"\n    _appendParamToIframeSource(\"src\", \"youtube.com/embed/\", \"enablejsapi=1\");\n    _appendParamToIframeSource(\n      \"data-src\",\n      \"youtube.com/embed/\",\n      \"enablejsapi=1\"\n    );\n\n    // Vimeo frames must include \"?api=1\"\n    _appendParamToIframeSource(\"src\", \"player.vimeo.com/\", \"api=1\");\n    _appendParamToIframeSource(\"data-src\", \"player.vimeo.com/\", \"api=1\");\n  }\n\n  /**\n   * Start playback of any embedded content inside of\n   * the given element.\n   *\n   * @param {HTMLElement} element\n   */\n  startEmbeddedContent(element) {\n    if (element && !this.Reveal.isSpeakerNotes()) {\n      // Restart GIFs\n      queryAll(element, 'img[src$=\".gif\"]').forEach((el) => {\n        // Setting the same unchanged source like this was confirmed\n        // to work in Chrome, FF & Safari\n        el.setAttribute(\"src\", el.getAttribute(\"src\"));\n      });\n\n      // HTML5 media elements\n      queryAll(element, \"video, audio\").forEach((el) => {\n        if (closest(el, \".fragment\") && !closest(el, \".fragment.visible\")) {\n          return;\n        }\n\n        // Prefer an explicit global autoplay setting\n        let autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n        // If no global setting is available, fall back on the element's\n        // own autoplay setting\n        if (typeof autoplay !== \"boolean\") {\n          autoplay =\n            el.hasAttribute(\"data-autoplay\") ||\n            !!closest(el, \".slide-background\");\n        }\n\n        if (autoplay && typeof el.play === \"function\") {\n          // If the media is ready, start playback\n          if (el.readyState > 1) {\n            this.startEmbeddedMedia({ target: el });\n          }\n          // Mobile devices never fire a loaded event so instead\n          // of waiting, we initiate playback\n          else if (isMobile) {\n            let promise = el.play();\n\n            // If autoplay does not work, ensure that the controls are visible so\n            // that the viewer can start the media on their own\n            if (\n              promise &&\n              typeof promise.catch === \"function\" &&\n              el.controls === false\n            ) {\n              promise.catch(() => {\n                el.controls = true;\n\n                // Once the video does start playing, hide the controls again\n                el.addEventListener(\"play\", () => {\n                  el.controls = false;\n                });\n              });\n            }\n          }\n          // If the media isn't loaded, wait before playing\n          else {\n            el.removeEventListener(\"loadeddata\", this.startEmbeddedMedia); // remove first to avoid dupes\n            el.addEventListener(\"loadeddata\", this.startEmbeddedMedia);\n          }\n        }\n      });\n\n      // Normal iframes\n      queryAll(element, \"iframe[src]\").forEach((el) => {\n        if (closest(el, \".fragment\") && !closest(el, \".fragment.visible\")) {\n          return;\n        }\n\n        this.startEmbeddedIframe({ target: el });\n      });\n\n      // Lazy loading iframes\n      queryAll(element, \"iframe[data-src]\").forEach((el) => {\n        if (closest(el, \".fragment\") && !closest(el, \".fragment.visible\")) {\n          return;\n        }\n\n        if (el.getAttribute(\"src\") !== el.getAttribute(\"data-src\")) {\n          el.removeEventListener(\"load\", this.startEmbeddedIframe); // remove first to avoid dupes\n          el.addEventListener(\"load\", this.startEmbeddedIframe);\n          el.setAttribute(\"src\", el.getAttribute(\"data-src\"));\n        }\n      });\n    }\n  }\n\n  /**\n   * Starts playing an embedded video/audio element after\n   * it has finished loading.\n   *\n   * @param {object} event\n   */\n  startEmbeddedMedia(event) {\n    let isAttachedToDOM = !!closest(event.target, \"html\"),\n      isVisible = !!closest(event.target, \".present\");\n\n    if (isAttachedToDOM && isVisible) {\n      event.target.currentTime = 0;\n      event.target.play();\n    }\n\n    event.target.removeEventListener(\"loadeddata\", this.startEmbeddedMedia);\n  }\n\n  /**\n   * \"Starts\" the content of an embedded iframe using the\n   * postMessage API.\n   *\n   * @param {object} event\n   */\n  startEmbeddedIframe(event) {\n    let iframe = event.target;\n\n    if (iframe && iframe.contentWindow) {\n      let isAttachedToDOM = !!closest(event.target, \"html\"),\n        isVisible = !!closest(event.target, \".present\");\n\n      if (isAttachedToDOM && isVisible) {\n        // Prefer an explicit global autoplay setting\n        let autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n        // If no global setting is available, fall back on the element's\n        // own autoplay setting\n        if (typeof autoplay !== \"boolean\") {\n          autoplay =\n            iframe.hasAttribute(\"data-autoplay\") ||\n            !!closest(iframe, \".slide-background\");\n        }\n\n        // YouTube postMessage API\n        if (\n          /youtube\\.com\\/embed\\//.test(iframe.getAttribute(\"src\")) &&\n          autoplay\n        ) {\n          iframe.contentWindow.postMessage(\n            '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}',\n            \"*\"\n          );\n        }\n        // Vimeo postMessage API\n        else if (\n          /player\\.vimeo\\.com\\//.test(iframe.getAttribute(\"src\")) &&\n          autoplay\n        ) {\n          iframe.contentWindow.postMessage('{\"method\":\"play\"}', \"*\");\n        }\n        // Generic postMessage API\n        else {\n          iframe.contentWindow.postMessage(\"slide:start\", \"*\");\n        }\n      }\n    }\n  }\n\n  /**\n   * Stop playback of any embedded content inside of\n   * the targeted slide.\n   *\n   * @param {HTMLElement} element\n   */\n  stopEmbeddedContent(element, options = {}) {\n    options = extend(\n      {\n        // Defaults\n        unloadIframes: true,\n      },\n      options\n    );\n\n    if (element && element.parentNode) {\n      // HTML5 media elements\n      queryAll(element, \"video, audio\").forEach((el) => {\n        if (!el.hasAttribute(\"data-ignore\") && typeof el.pause === \"function\") {\n          el.setAttribute(\"data-paused-by-reveal\", \"\");\n          el.pause();\n        }\n      });\n\n      // Generic postMessage API for non-lazy loaded iframes\n      queryAll(element, \"iframe\").forEach((el) => {\n        if (el.contentWindow) el.contentWindow.postMessage(\"slide:stop\", \"*\");\n        el.removeEventListener(\"load\", this.startEmbeddedIframe);\n      });\n\n      // YouTube postMessage API\n      queryAll(element, 'iframe[src*=\"youtube.com/embed/\"]').forEach((el) => {\n        if (\n          !el.hasAttribute(\"data-ignore\") &&\n          el.contentWindow &&\n          typeof el.contentWindow.postMessage === \"function\"\n        ) {\n          el.contentWindow.postMessage(\n            '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}',\n            \"*\"\n          );\n        }\n      });\n\n      // Vimeo postMessage API\n      queryAll(element, 'iframe[src*=\"player.vimeo.com/\"]').forEach((el) => {\n        if (\n          !el.hasAttribute(\"data-ignore\") &&\n          el.contentWindow &&\n          typeof el.contentWindow.postMessage === \"function\"\n        ) {\n          el.contentWindow.postMessage('{\"method\":\"pause\"}', \"*\");\n        }\n      });\n\n      if (options.unloadIframes === true) {\n        // Unload lazy-loaded iframes\n        queryAll(element, \"iframe[data-src]\").forEach((el) => {\n          // Only removing the src doesn't actually unload the frame\n          // in all browsers (Firefox) so we set it to blank first\n          el.setAttribute(\"src\", \"about:blank\");\n          el.removeAttribute(\"src\");\n        });\n      }\n    }\n  }\n}\n","/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n  }\n\n  render() {\n    this.element = document.createElement(\"div\");\n    this.element.className = \"slide-number\";\n    this.Reveal.getRevealElement().appendChild(this.element);\n  }\n\n  /**\n   * Called when the reveal.js config is updated.\n   */\n  configure(config, oldConfig) {\n    let slideNumberDisplay = \"none\";\n    if (config.slideNumber && !this.Reveal.isPrintingPDF()) {\n      if (config.showSlideNumber === \"all\") {\n        slideNumberDisplay = \"block\";\n      } else if (\n        config.showSlideNumber === \"speaker\" &&\n        this.Reveal.isSpeakerNotes()\n      ) {\n        slideNumberDisplay = \"block\";\n      }\n    }\n\n    this.element.style.display = slideNumberDisplay;\n  }\n\n  /**\n   * Updates the slide number to match the current slide.\n   */\n  update() {\n    // Update slide number if enabled\n    if (this.Reveal.getConfig().slideNumber && this.element) {\n      this.element.innerHTML = this.getSlideNumber();\n    }\n  }\n\n  /**\n   * Returns the HTML string corresponding to the current slide\n   * number, including formatting.\n   */\n  getSlideNumber(slide = this.Reveal.getCurrentSlide()) {\n    let config = this.Reveal.getConfig();\n    let value;\n    let format = \"h.v\";\n\n    if (typeof config.slideNumber === \"function\") {\n      value = config.slideNumber(slide);\n    } else {\n      // Check if a custom number format is available\n      if (typeof config.slideNumber === \"string\") {\n        format = config.slideNumber;\n      }\n\n      // If there are ONLY vertical slides in this deck, always use\n      // a flattened slide number\n      if (!/c/.test(format) && this.Reveal.getHorizontalSlides().length === 1) {\n        format = \"c\";\n      }\n\n      // Offset the current slide number by 1 to make it 1-indexed\n      let horizontalOffset =\n        slide && slide.dataset.visibility === \"uncounted\" ? 0 : 1;\n\n      value = [];\n      switch (format) {\n        case \"c\":\n          value.push(this.Reveal.getSlidePastCount(slide) + horizontalOffset);\n          break;\n        case \"c/t\":\n          value.push(\n            this.Reveal.getSlidePastCount(slide) + horizontalOffset,\n            \"/\",\n            this.Reveal.getTotalSlides()\n          );\n          break;\n        default:\n          let indices = this.Reveal.getIndices(slide);\n          value.push(indices.h + horizontalOffset);\n          let sep = format === \"h/v\" ? \"/\" : \".\";\n          if (this.Reveal.isVerticalSlide(slide))\n            value.push(sep, indices.v + 1);\n      }\n    }\n\n    let url = \"#\" + this.Reveal.location.getHash(slide);\n    return this.formatNumber(value[0], value[1], value[2], url);\n  }\n\n  /**\n   * Applies HTML formatting to a slide number before it's\n   * written to the DOM.\n   *\n   * @param {number} a Current slide\n   * @param {string} delimiter Character to separate slide numbers\n   * @param {(number|*)} b Total slides\n   * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n   * @return {string} HTML string fragment\n   */\n  formatNumber(a, delimiter, b, url = \"#\" + this.Reveal.location.getHash()) {\n    if (typeof b === \"number\" && !isNaN(b)) {\n      return `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n    } else {\n      return `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n    }\n  }\n\n  destroy() {\n    this.element.remove();\n  }\n}\n","/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = (color) => {\n  let hex3 = color.match(/^#([0-9a-f]{3})$/i);\n  if (hex3 && hex3[1]) {\n    hex3 = hex3[1];\n    return {\n      r: parseInt(hex3.charAt(0), 16) * 0x11,\n      g: parseInt(hex3.charAt(1), 16) * 0x11,\n      b: parseInt(hex3.charAt(2), 16) * 0x11,\n    };\n  }\n\n  let hex6 = color.match(/^#([0-9a-f]{6})$/i);\n  if (hex6 && hex6[1]) {\n    hex6 = hex6[1];\n    return {\n      r: parseInt(hex6.slice(0, 2), 16),\n      g: parseInt(hex6.slice(2, 4), 16),\n      b: parseInt(hex6.slice(4, 6), 16),\n    };\n  }\n\n  let rgb = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\n  if (rgb) {\n    return {\n      r: parseInt(rgb[1], 10),\n      g: parseInt(rgb[2], 10),\n      b: parseInt(rgb[3], 10),\n    };\n  }\n\n  let rgba = color.match(\n    /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i\n  );\n  if (rgba) {\n    return {\n      r: parseInt(rgba[1], 10),\n      g: parseInt(rgba[2], 10),\n      b: parseInt(rgba[3], 10),\n      a: parseFloat(rgba[4]),\n    };\n  }\n\n  return null;\n};\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = (color) => {\n  if (typeof color === \"string\") color = colorToRgb(color);\n\n  if (color) {\n    return (color.r * 299 + color.g * 587 + color.b * 114) / 1000;\n  }\n\n  return null;\n};\n","import { queryAll } from \"../utils/util.js\";\nimport { colorToRgb, colorBrightness } from \"../utils/color.js\";\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n  }\n\n  render() {\n    this.element = document.createElement(\"div\");\n    this.element.className = \"backgrounds\";\n    this.Reveal.getRevealElement().appendChild(this.element);\n  }\n\n  /**\n   * Creates the slide background elements and appends them\n   * to the background container. One element is created per\n   * slide no matter if the given slide has visible background.\n   */\n  create() {\n    // Clear prior backgrounds\n    this.element.innerHTML = \"\";\n    this.element.classList.add(\"no-transition\");\n\n    // Iterate over all horizontal slides\n    this.Reveal.getHorizontalSlides().forEach((slideh) => {\n      let backgroundStack = this.createBackground(slideh, this.element);\n\n      // Iterate over all vertical slides\n      queryAll(slideh, \"section\").forEach((slidev) => {\n        this.createBackground(slidev, backgroundStack);\n\n        backgroundStack.classList.add(\"stack\");\n      });\n    });\n\n    // Add parallax background if specified\n    if (this.Reveal.getConfig().parallaxBackgroundImage) {\n      this.element.style.backgroundImage =\n        'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n      this.element.style.backgroundSize =\n        this.Reveal.getConfig().parallaxBackgroundSize;\n      this.element.style.backgroundRepeat =\n        this.Reveal.getConfig().parallaxBackgroundRepeat;\n      this.element.style.backgroundPosition =\n        this.Reveal.getConfig().parallaxBackgroundPosition;\n\n      // Make sure the below properties are set on the element - these properties are\n      // needed for proper transitions to be set on the element via CSS. To remove\n      // annoying background slide-in effect when the presentation starts, apply\n      // these properties after short time delay\n      setTimeout(() => {\n        this.Reveal.getRevealElement().classList.add(\"has-parallax-background\");\n      }, 1);\n    } else {\n      this.element.style.backgroundImage = \"\";\n      this.Reveal.getRevealElement().classList.remove(\n        \"has-parallax-background\"\n      );\n    }\n  }\n\n  /**\n   * Creates a background for the given slide.\n   *\n   * @param {HTMLElement} slide\n   * @param {HTMLElement} container The element that the background\n   * should be appended to\n   * @return {HTMLElement} New background div\n   */\n  createBackground(slide, container) {\n    // Main slide background element\n    let element = document.createElement(\"div\");\n    element.className =\n      \"slide-background \" + slide.className.replace(/present|past|future/, \"\");\n\n    // Inner background element that wraps images/videos/iframes\n    let contentElement = document.createElement(\"div\");\n    contentElement.className = \"slide-background-content\";\n\n    element.appendChild(contentElement);\n    container.appendChild(element);\n\n    slide.slideBackgroundElement = element;\n    slide.slideBackgroundContentElement = contentElement;\n\n    // Syncs the background to reflect all current background settings\n    this.sync(slide);\n\n    return element;\n  }\n\n  /**\n   * Renders all of the visual properties of a slide background\n   * based on the various background attributes.\n   *\n   * @param {HTMLElement} slide\n   */\n  sync(slide) {\n    const element = slide.slideBackgroundElement,\n      contentElement = slide.slideBackgroundContentElement;\n\n    const data = {\n      background: slide.getAttribute(\"data-background\"),\n      backgroundSize: slide.getAttribute(\"data-background-size\"),\n      backgroundImage: slide.getAttribute(\"data-background-image\"),\n      backgroundVideo: slide.getAttribute(\"data-background-video\"),\n      backgroundIframe: slide.getAttribute(\"data-background-iframe\"),\n      backgroundColor: slide.getAttribute(\"data-background-color\"),\n      backgroundGradient: slide.getAttribute(\"data-background-gradient\"),\n      backgroundRepeat: slide.getAttribute(\"data-background-repeat\"),\n      backgroundPosition: slide.getAttribute(\"data-background-position\"),\n      backgroundTransition: slide.getAttribute(\"data-background-transition\"),\n      backgroundOpacity: slide.getAttribute(\"data-background-opacity\"),\n    };\n\n    const dataPreload = slide.hasAttribute(\"data-preload\");\n\n    // Reset the prior background state in case this is not the\n    // initial sync\n    slide.classList.remove(\"has-dark-background\");\n    slide.classList.remove(\"has-light-background\");\n\n    element.removeAttribute(\"data-loaded\");\n    element.removeAttribute(\"data-background-hash\");\n    element.removeAttribute(\"data-background-size\");\n    element.removeAttribute(\"data-background-transition\");\n    element.style.backgroundColor = \"\";\n\n    contentElement.style.backgroundSize = \"\";\n    contentElement.style.backgroundRepeat = \"\";\n    contentElement.style.backgroundPosition = \"\";\n    contentElement.style.backgroundImage = \"\";\n    contentElement.style.opacity = \"\";\n    contentElement.innerHTML = \"\";\n\n    if (data.background) {\n      // Auto-wrap image urls in url(...)\n      if (\n        /^(http|file|\\/\\/)/gi.test(data.background) ||\n        /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test(data.background)\n      ) {\n        slide.setAttribute(\"data-background-image\", data.background);\n      } else {\n        element.style.background = data.background;\n      }\n    }\n\n    // Create a hash for this combination of background settings.\n    // This is used to determine when two slide backgrounds are\n    // the same.\n    if (\n      data.background ||\n      data.backgroundColor ||\n      data.backgroundGradient ||\n      data.backgroundImage ||\n      data.backgroundVideo ||\n      data.backgroundIframe\n    ) {\n      element.setAttribute(\n        \"data-background-hash\",\n        data.background +\n          data.backgroundSize +\n          data.backgroundImage +\n          data.backgroundVideo +\n          data.backgroundIframe +\n          data.backgroundColor +\n          data.backgroundGradient +\n          data.backgroundRepeat +\n          data.backgroundPosition +\n          data.backgroundTransition +\n          data.backgroundOpacity\n      );\n    }\n\n    // Additional and optional background properties\n    if (data.backgroundSize)\n      element.setAttribute(\"data-background-size\", data.backgroundSize);\n    if (data.backgroundColor)\n      element.style.backgroundColor = data.backgroundColor;\n    if (data.backgroundGradient)\n      element.style.backgroundImage = data.backgroundGradient;\n    if (data.backgroundTransition)\n      element.setAttribute(\n        \"data-background-transition\",\n        data.backgroundTransition\n      );\n\n    if (dataPreload) element.setAttribute(\"data-preload\", \"\");\n\n    // Background image options are set on the content wrapper\n    if (data.backgroundSize)\n      contentElement.style.backgroundSize = data.backgroundSize;\n    if (data.backgroundRepeat)\n      contentElement.style.backgroundRepeat = data.backgroundRepeat;\n    if (data.backgroundPosition)\n      contentElement.style.backgroundPosition = data.backgroundPosition;\n    if (data.backgroundOpacity)\n      contentElement.style.opacity = data.backgroundOpacity;\n\n    // If this slide has a background color, we add a class that\n    // signals if it is light or dark. If the slide has no background\n    // color, no class will be added\n    let contrastColor = data.backgroundColor;\n\n    // If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n    if (!contrastColor || !colorToRgb(contrastColor)) {\n      let computedBackgroundStyle = window.getComputedStyle(element);\n      if (computedBackgroundStyle && computedBackgroundStyle.backgroundColor) {\n        contrastColor = computedBackgroundStyle.backgroundColor;\n      }\n    }\n\n    if (contrastColor) {\n      const rgb = colorToRgb(contrastColor);\n\n      // Ignore fully transparent backgrounds. Some browsers return\n      // rgba(0,0,0,0) when reading the computed background color of\n      // an element with no background\n      if (rgb && rgb.a !== 0) {\n        if (colorBrightness(contrastColor) < 128) {\n          slide.classList.add(\"has-dark-background\");\n        } else {\n          slide.classList.add(\"has-light-background\");\n        }\n      }\n    }\n  }\n\n  /**\n   * Updates the background elements to reflect the current\n   * slide.\n   *\n   * @param {boolean} includeAll If true, the backgrounds of\n   * all vertical slides (not just the present) will be updated.\n   */\n  update(includeAll = false) {\n    let currentSlide = this.Reveal.getCurrentSlide();\n    let indices = this.Reveal.getIndices();\n\n    let currentBackground = null;\n\n    // Reverse past/future classes when in RTL mode\n    let horizontalPast = this.Reveal.getConfig().rtl ? \"future\" : \"past\",\n      horizontalFuture = this.Reveal.getConfig().rtl ? \"past\" : \"future\";\n\n    // Update the classes of all backgrounds to match the\n    // states of their slides (past/present/future)\n    Array.from(this.element.childNodes).forEach((backgroundh, h) => {\n      backgroundh.classList.remove(\"past\", \"present\", \"future\");\n\n      if (h < indices.h) {\n        backgroundh.classList.add(horizontalPast);\n      } else if (h > indices.h) {\n        backgroundh.classList.add(horizontalFuture);\n      } else {\n        backgroundh.classList.add(\"present\");\n\n        // Store a reference to the current background element\n        currentBackground = backgroundh;\n      }\n\n      if (includeAll || h === indices.h) {\n        queryAll(backgroundh, \".slide-background\").forEach((backgroundv, v) => {\n          backgroundv.classList.remove(\"past\", \"present\", \"future\");\n\n          if (v < indices.v) {\n            backgroundv.classList.add(\"past\");\n          } else if (v > indices.v) {\n            backgroundv.classList.add(\"future\");\n          } else {\n            backgroundv.classList.add(\"present\");\n\n            // Only if this is the present horizontal and vertical slide\n            if (h === indices.h) currentBackground = backgroundv;\n          }\n        });\n      }\n    });\n\n    // Stop content inside of previous backgrounds\n    if (this.previousBackground) {\n      this.Reveal.slideContent.stopEmbeddedContent(this.previousBackground, {\n        unloadIframes: !this.Reveal.slideContent.shouldPreload(\n          this.previousBackground\n        ),\n      });\n    }\n\n    // Start content in the current background\n    if (currentBackground) {\n      this.Reveal.slideContent.startEmbeddedContent(currentBackground);\n\n      let currentBackgroundContent = currentBackground.querySelector(\n        \".slide-background-content\"\n      );\n      if (currentBackgroundContent) {\n        let backgroundImageURL =\n          currentBackgroundContent.style.backgroundImage || \"\";\n\n        // Restart GIFs (doesn't work in Firefox)\n        if (/\\.gif/i.test(backgroundImageURL)) {\n          currentBackgroundContent.style.backgroundImage = \"\";\n          window.getComputedStyle(currentBackgroundContent).opacity;\n          currentBackgroundContent.style.backgroundImage = backgroundImageURL;\n        }\n      }\n\n      // Don't transition between identical backgrounds. This\n      // prevents unwanted flicker.\n      let previousBackgroundHash = this.previousBackground\n        ? this.previousBackground.getAttribute(\"data-background-hash\")\n        : null;\n      let currentBackgroundHash = currentBackground.getAttribute(\n        \"data-background-hash\"\n      );\n      if (\n        currentBackgroundHash &&\n        currentBackgroundHash === previousBackgroundHash &&\n        currentBackground !== this.previousBackground\n      ) {\n        this.element.classList.add(\"no-transition\");\n      }\n\n      this.previousBackground = currentBackground;\n    }\n\n    // If there's a background brightness flag for this slide,\n    // bubble it to the .reveal container\n    if (currentSlide) {\n      [\"has-light-background\", \"has-dark-background\"].forEach(\n        (classToBubble) => {\n          if (currentSlide.classList.contains(classToBubble)) {\n            this.Reveal.getRevealElement().classList.add(classToBubble);\n          } else {\n            this.Reveal.getRevealElement().classList.remove(classToBubble);\n          }\n        },\n        this\n      );\n    }\n\n    // Allow the first background to apply without transition\n    setTimeout(() => {\n      this.element.classList.remove(\"no-transition\");\n    }, 1);\n  }\n\n  /**\n   * Updates the position of the parallax background based\n   * on the current slide index.\n   */\n  updateParallax() {\n    let indices = this.Reveal.getIndices();\n\n    if (this.Reveal.getConfig().parallaxBackgroundImage) {\n      let horizontalSlides = this.Reveal.getHorizontalSlides(),\n        verticalSlides = this.Reveal.getVerticalSlides();\n\n      let backgroundSize = this.element.style.backgroundSize.split(\" \"),\n        backgroundWidth,\n        backgroundHeight;\n\n      if (backgroundSize.length === 1) {\n        backgroundWidth = backgroundHeight = parseInt(backgroundSize[0], 10);\n      } else {\n        backgroundWidth = parseInt(backgroundSize[0], 10);\n        backgroundHeight = parseInt(backgroundSize[1], 10);\n      }\n\n      let slideWidth = this.element.offsetWidth,\n        horizontalSlideCount = horizontalSlides.length,\n        horizontalOffsetMultiplier,\n        horizontalOffset;\n\n      if (\n        typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === \"number\"\n      ) {\n        horizontalOffsetMultiplier =\n          this.Reveal.getConfig().parallaxBackgroundHorizontal;\n      } else {\n        horizontalOffsetMultiplier =\n          horizontalSlideCount > 1\n            ? (backgroundWidth - slideWidth) / (horizontalSlideCount - 1)\n            : 0;\n      }\n\n      horizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n      let slideHeight = this.element.offsetHeight,\n        verticalSlideCount = verticalSlides.length,\n        verticalOffsetMultiplier,\n        verticalOffset;\n\n      if (\n        typeof this.Reveal.getConfig().parallaxBackgroundVertical === \"number\"\n      ) {\n        verticalOffsetMultiplier =\n          this.Reveal.getConfig().parallaxBackgroundVertical;\n      } else {\n        verticalOffsetMultiplier =\n          (backgroundHeight - slideHeight) / (verticalSlideCount - 1);\n      }\n\n      verticalOffset =\n        verticalSlideCount > 0 ? verticalOffsetMultiplier * indices.v : 0;\n\n      this.element.style.backgroundPosition =\n        horizontalOffset + \"px \" + -verticalOffset + \"px\";\n    }\n  }\n\n  destroy() {\n    this.element.remove();\n  }\n}\n","export const SLIDES_SELECTOR = \".slides section\";\nexport const HORIZONTAL_SLIDES_SELECTOR = \".slides>section\";\nexport const VERTICAL_SLIDES_SELECTOR = \".slides>section.present>section\";\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST =\n  /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX =\n  /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;\n","import {\n  queryAll,\n  extend,\n  createStyleSheet,\n  matches,\n  closest,\n} from \"../utils/util.js\";\nimport { FRAGMENT_STYLE_REGEX } from \"../utils/constants.js\";\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n  }\n\n  /**\n   * Runs an auto-animation between the given slides.\n   *\n   * @param  {HTMLElement} fromSlide\n   * @param  {HTMLElement} toSlide\n   */\n  run(fromSlide, toSlide) {\n    // Clean up after prior animations\n    this.reset();\n\n    let allSlides = this.Reveal.getSlides();\n    let toSlideIndex = allSlides.indexOf(toSlide);\n    let fromSlideIndex = allSlides.indexOf(fromSlide);\n\n    // Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\n    // (including null if absent on both) and that data-auto-animate-restart isn't set on the\n    // physically latter slide (independent of slide direction)\n    if (\n      fromSlide.hasAttribute(\"data-auto-animate\") &&\n      toSlide.hasAttribute(\"data-auto-animate\") &&\n      fromSlide.getAttribute(\"data-auto-animate-id\") ===\n        toSlide.getAttribute(\"data-auto-animate-id\") &&\n      !(toSlideIndex > fromSlideIndex ? toSlide : fromSlide).hasAttribute(\n        \"data-auto-animate-restart\"\n      )\n    ) {\n      // Create a new auto-animate sheet\n      this.autoAnimateStyleSheet =\n        this.autoAnimateStyleSheet || createStyleSheet();\n\n      let animationOptions = this.getAutoAnimateOptions(toSlide);\n\n      // Set our starting state\n      fromSlide.dataset.autoAnimate = \"pending\";\n      toSlide.dataset.autoAnimate = \"pending\";\n\n      // Flag the navigation direction, needed for fragment buildup\n      animationOptions.slideDirection =\n        toSlideIndex > fromSlideIndex ? \"forward\" : \"backward\";\n\n      // If the from-slide is hidden because it has moved outside\n      // the view distance, we need to temporarily show it while\n      // measuring\n      let fromSlideIsHidden = fromSlide.style.display === \"none\";\n      if (fromSlideIsHidden)\n        fromSlide.style.display = this.Reveal.getConfig().display;\n\n      // Inject our auto-animate styles for this transition\n      let css = this.getAutoAnimatableElements(fromSlide, toSlide).map(\n        (elements) => {\n          return this.autoAnimateElements(\n            elements.from,\n            elements.to,\n            elements.options || {},\n            animationOptions,\n            autoAnimateCounter++\n          );\n        }\n      );\n\n      if (fromSlideIsHidden) fromSlide.style.display = \"none\";\n\n      // Animate unmatched elements, if enabled\n      if (\n        toSlide.dataset.autoAnimateUnmatched !== \"false\" &&\n        this.Reveal.getConfig().autoAnimateUnmatched === true\n      ) {\n        // Our default timings for unmatched elements\n        let defaultUnmatchedDuration = animationOptions.duration * 0.8,\n          defaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n        this.getUnmatchedAutoAnimateElements(toSlide).forEach(\n          (unmatchedElement) => {\n            let unmatchedOptions = this.getAutoAnimateOptions(\n              unmatchedElement,\n              animationOptions\n            );\n            let id = \"unmatched\";\n\n            // If there is a duration or delay set specifically for this\n            // element our unmatched elements should adhere to those\n            if (\n              unmatchedOptions.duration !== animationOptions.duration ||\n              unmatchedOptions.delay !== animationOptions.delay\n            ) {\n              id = \"unmatched-\" + autoAnimateCounter++;\n              css.push(\n                `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }`\n              );\n            }\n\n            unmatchedElement.dataset.autoAnimateTarget = id;\n          },\n          this\n        );\n\n        // Our default transition for unmatched elements\n        css.push(\n          `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }`\n        );\n      }\n\n      // Setting the whole chunk of CSS at once is the most\n      // efficient way to do this. Using sheet.insertRule\n      // is multiple factors slower.\n      this.autoAnimateStyleSheet.innerHTML = css.join(\"\");\n\n      // Start the animation next cycle\n      requestAnimationFrame(() => {\n        if (this.autoAnimateStyleSheet) {\n          // This forces our newly injected styles to be applied in Firefox\n          getComputedStyle(this.autoAnimateStyleSheet).fontWeight;\n\n          toSlide.dataset.autoAnimate = \"running\";\n        }\n      });\n\n      this.Reveal.dispatchEvent({\n        type: \"autoanimate\",\n        data: {\n          fromSlide,\n          toSlide,\n          sheet: this.autoAnimateStyleSheet,\n        },\n      });\n    }\n  }\n\n  /**\n   * Rolls back all changes that we've made to the DOM so\n   * that as part of animating.\n   */\n  reset() {\n    // Reset slides\n    queryAll(\n      this.Reveal.getRevealElement(),\n      '[data-auto-animate]:not([data-auto-animate=\"\"])'\n    ).forEach((element) => {\n      element.dataset.autoAnimate = \"\";\n    });\n\n    // Reset elements\n    queryAll(\n      this.Reveal.getRevealElement(),\n      \"[data-auto-animate-target]\"\n    ).forEach((element) => {\n      delete element.dataset.autoAnimateTarget;\n    });\n\n    // Remove the animation sheet\n    if (this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode) {\n      this.autoAnimateStyleSheet.parentNode.removeChild(\n        this.autoAnimateStyleSheet\n      );\n      this.autoAnimateStyleSheet = null;\n    }\n  }\n\n  /**\n   * Creates a FLIP animation where the `to` element starts out\n   * in the `from` element position and animates to its original\n   * state.\n   *\n   * @param {HTMLElement} from\n   * @param {HTMLElement} to\n   * @param {Object} elementOptions Options for this element pair\n   * @param {Object} animationOptions Options set at the slide level\n   * @param {String} id Unique ID that we can use to identify this\n   * auto-animate element in the DOM\n   */\n  autoAnimateElements(from, to, elementOptions, animationOptions, id) {\n    // 'from' elements are given a data-auto-animate-target with no value,\n    // 'to' elements are are given a data-auto-animate-target with an ID\n    from.dataset.autoAnimateTarget = \"\";\n    to.dataset.autoAnimateTarget = id;\n\n    // Each element may override any of the auto-animate options\n    // like transition easing, duration and delay via data-attributes\n    let options = this.getAutoAnimateOptions(to, animationOptions);\n\n    // If we're using a custom element matcher the element options\n    // may contain additional transition overrides\n    if (typeof elementOptions.delay !== \"undefined\")\n      options.delay = elementOptions.delay;\n    if (typeof elementOptions.duration !== \"undefined\")\n      options.duration = elementOptions.duration;\n    if (typeof elementOptions.easing !== \"undefined\")\n      options.easing = elementOptions.easing;\n\n    let fromProps = this.getAutoAnimatableProperties(\n        \"from\",\n        from,\n        elementOptions\n      ),\n      toProps = this.getAutoAnimatableProperties(\"to\", to, elementOptions);\n\n    // Maintain fragment visibility for matching elements when\n    // we're navigating forwards, this way the viewer won't need\n    // to step through the same fragments twice\n    if (to.classList.contains(\"fragment\")) {\n      // Don't auto-animate the opacity of fragments to avoid\n      // conflicts with fragment animations\n      delete toProps.styles[\"opacity\"];\n\n      if (from.classList.contains(\"fragment\")) {\n        let fromFragmentStyle = (from.className.match(FRAGMENT_STYLE_REGEX) || [\n          \"\",\n        ])[0];\n        let toFragmentStyle = (to.className.match(FRAGMENT_STYLE_REGEX) || [\n          \"\",\n        ])[0];\n\n        // Only skip the fragment if the fragment animation style\n        // remains unchanged\n        if (\n          fromFragmentStyle === toFragmentStyle &&\n          animationOptions.slideDirection === \"forward\"\n        ) {\n          to.classList.add(\"visible\", \"disabled\");\n        }\n      }\n    }\n\n    // If translation and/or scaling are enabled, css transform\n    // the 'to' element so that it matches the position and size\n    // of the 'from' element\n    if (elementOptions.translate !== false || elementOptions.scale !== false) {\n      let presentationScale = this.Reveal.getScale();\n\n      let delta = {\n        x: (fromProps.x - toProps.x) / presentationScale,\n        y: (fromProps.y - toProps.y) / presentationScale,\n        scaleX: fromProps.width / toProps.width,\n        scaleY: fromProps.height / toProps.height,\n      };\n\n      // Limit decimal points to avoid 0.0001px blur and stutter\n      delta.x = Math.round(delta.x * 1000) / 1000;\n      delta.y = Math.round(delta.y * 1000) / 1000;\n      delta.scaleX = Math.round(delta.scaleX * 1000) / 1000;\n      delta.scaleX = Math.round(delta.scaleX * 1000) / 1000;\n\n      let translate =\n          elementOptions.translate !== false &&\n          (delta.x !== 0 || delta.y !== 0),\n        scale =\n          elementOptions.scale !== false &&\n          (delta.scaleX !== 0 || delta.scaleY !== 0);\n\n      // No need to transform if nothing's changed\n      if (translate || scale) {\n        let transform = [];\n\n        if (translate) transform.push(`translate(${delta.x}px, ${delta.y}px)`);\n        if (scale) transform.push(`scale(${delta.scaleX}, ${delta.scaleY})`);\n\n        fromProps.styles[\"transform\"] = transform.join(\" \");\n        fromProps.styles[\"transform-origin\"] = \"top left\";\n\n        toProps.styles[\"transform\"] = \"none\";\n      }\n    }\n\n    // Delete all unchanged 'to' styles\n    for (let propertyName in toProps.styles) {\n      const toValue = toProps.styles[propertyName];\n      const fromValue = fromProps.styles[propertyName];\n\n      if (toValue === fromValue) {\n        delete toProps.styles[propertyName];\n      } else {\n        // If these property values were set via a custom matcher providing\n        // an explicit 'from' and/or 'to' value, we always inject those values.\n        if (toValue.explicitValue === true) {\n          toProps.styles[propertyName] = toValue.value;\n        }\n\n        if (fromValue.explicitValue === true) {\n          fromProps.styles[propertyName] = fromValue.value;\n        }\n      }\n    }\n\n    let css = \"\";\n\n    let toStyleProperties = Object.keys(toProps.styles);\n\n    // Only create animate this element IF at least one style\n    // property has changed\n    if (toStyleProperties.length > 0) {\n      // Instantly move to the 'from' state\n      fromProps.styles[\"transition\"] = \"none\";\n\n      // Animate towards the 'to' state\n      toProps.styles[\n        \"transition\"\n      ] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n      toProps.styles[\"transition-property\"] = toStyleProperties.join(\", \");\n      toProps.styles[\"will-change\"] = toStyleProperties.join(\", \");\n\n      // Build up our custom CSS. We need to override inline styles\n      // so we need to make our styles vErY IMPORTANT!1!!\n      let fromCSS = Object.keys(fromProps.styles)\n        .map((propertyName) => {\n          return (\n            propertyName +\n            \": \" +\n            fromProps.styles[propertyName] +\n            \" !important;\"\n          );\n        })\n        .join(\"\");\n\n      let toCSS = Object.keys(toProps.styles)\n        .map((propertyName) => {\n          return (\n            propertyName + \": \" + toProps.styles[propertyName] + \" !important;\"\n          );\n        })\n        .join(\"\");\n\n      css =\n        '[data-auto-animate-target=\"' +\n        id +\n        '\"] {' +\n        fromCSS +\n        \"}\" +\n        '[data-auto-animate=\"running\"] [data-auto-animate-target=\"' +\n        id +\n        '\"] {' +\n        toCSS +\n        \"}\";\n    }\n\n    return css;\n  }\n\n  /**\n   * Returns the auto-animate options for the given element.\n   *\n   * @param {HTMLElement} element Element to pick up options\n   * from, either a slide or an animation target\n   * @param {Object} [inheritedOptions] Optional set of existing\n   * options\n   */\n  getAutoAnimateOptions(element, inheritedOptions) {\n    let options = {\n      easing: this.Reveal.getConfig().autoAnimateEasing,\n      duration: this.Reveal.getConfig().autoAnimateDuration,\n      delay: 0,\n    };\n\n    options = extend(options, inheritedOptions);\n\n    // Inherit options from parent elements\n    if (element.parentNode) {\n      let autoAnimatedParent = closest(\n        element.parentNode,\n        \"[data-auto-animate-target]\"\n      );\n      if (autoAnimatedParent) {\n        options = this.getAutoAnimateOptions(autoAnimatedParent, options);\n      }\n    }\n\n    if (element.dataset.autoAnimateEasing) {\n      options.easing = element.dataset.autoAnimateEasing;\n    }\n\n    if (element.dataset.autoAnimateDuration) {\n      options.duration = parseFloat(element.dataset.autoAnimateDuration);\n    }\n\n    if (element.dataset.autoAnimateDelay) {\n      options.delay = parseFloat(element.dataset.autoAnimateDelay);\n    }\n\n    return options;\n  }\n\n  /**\n   * Returns an object containing all of the properties\n   * that can be auto-animated for the given element and\n   * their current computed values.\n   *\n   * @param {String} direction 'from' or 'to'\n   */\n  getAutoAnimatableProperties(direction, element, elementOptions) {\n    let config = this.Reveal.getConfig();\n\n    let properties = { styles: [] };\n\n    // Position and size\n    if (elementOptions.translate !== false || elementOptions.scale !== false) {\n      let bounds;\n\n      // Custom auto-animate may optionally return a custom tailored\n      // measurement function\n      if (typeof elementOptions.measure === \"function\") {\n        bounds = elementOptions.measure(element);\n      } else {\n        if (config.center) {\n          // More precise, but breaks when used in combination\n          // with zoom for scaling the deck ¯\\_(ツ)_/¯\n          bounds = element.getBoundingClientRect();\n        } else {\n          let scale = this.Reveal.getScale();\n          bounds = {\n            x: element.offsetLeft * scale,\n            y: element.offsetTop * scale,\n            width: element.offsetWidth * scale,\n            height: element.offsetHeight * scale,\n          };\n        }\n      }\n\n      properties.x = bounds.x;\n      properties.y = bounds.y;\n      properties.width = bounds.width;\n      properties.height = bounds.height;\n    }\n\n    const computedStyles = getComputedStyle(element);\n\n    // CSS styles\n    (elementOptions.styles || config.autoAnimateStyles).forEach((style) => {\n      let value;\n\n      // `style` is either the property name directly, or an object\n      // definition of a style property\n      if (typeof style === \"string\") style = { property: style };\n\n      if (typeof style.from !== \"undefined\" && direction === \"from\") {\n        value = { value: style.from, explicitValue: true };\n      } else if (typeof style.to !== \"undefined\" && direction === \"to\") {\n        value = { value: style.to, explicitValue: true };\n      } else {\n        // Use a unitless value for line-height so that it inherits properly\n        if (style.property === \"line-height\") {\n          value =\n            parseFloat(computedStyles[\"line-height\"]) /\n            parseFloat(computedStyles[\"font-size\"]);\n        }\n\n        if (isNaN(value)) {\n          value = computedStyles[style.property];\n        }\n      }\n\n      if (value !== \"\") {\n        properties.styles[style.property] = value;\n      }\n    });\n\n    return properties;\n  }\n\n  /**\n   * Get a list of all element pairs that we can animate\n   * between the given slides.\n   *\n   * @param {HTMLElement} fromSlide\n   * @param {HTMLElement} toSlide\n   *\n   * @return {Array} Each value is an array where [0] is\n   * the element we're animating from and [1] is the\n   * element we're animating to\n   */\n  getAutoAnimatableElements(fromSlide, toSlide) {\n    let matcher =\n      typeof this.Reveal.getConfig().autoAnimateMatcher === \"function\"\n        ? this.Reveal.getConfig().autoAnimateMatcher\n        : this.getAutoAnimatePairs;\n\n    let pairs = matcher.call(this, fromSlide, toSlide);\n\n    let reserved = [];\n\n    // Remove duplicate pairs\n    return pairs.filter((pair, index) => {\n      if (reserved.indexOf(pair.to) === -1) {\n        reserved.push(pair.to);\n        return true;\n      }\n    });\n  }\n\n  /**\n   * Identifies matching elements between slides.\n   *\n   * You can specify a custom matcher function by using\n   * the `autoAnimateMatcher` config option.\n   */\n  getAutoAnimatePairs(fromSlide, toSlide) {\n    let pairs = [];\n\n    const codeNodes = \"pre\";\n    const textNodes = \"h1, h2, h3, h4, h5, h6, p, li\";\n    const mediaNodes = \"img, video, iframe\";\n\n    // Eplicit matches via data-id\n    this.findAutoAnimateMatches(\n      pairs,\n      fromSlide,\n      toSlide,\n      \"[data-id]\",\n      (node) => {\n        return node.nodeName + \":::\" + node.getAttribute(\"data-id\");\n      }\n    );\n\n    // Text\n    this.findAutoAnimateMatches(\n      pairs,\n      fromSlide,\n      toSlide,\n      textNodes,\n      (node) => {\n        return node.nodeName + \":::\" + node.innerText;\n      }\n    );\n\n    // Media\n    this.findAutoAnimateMatches(\n      pairs,\n      fromSlide,\n      toSlide,\n      mediaNodes,\n      (node) => {\n        return (\n          node.nodeName +\n          \":::\" +\n          (node.getAttribute(\"src\") || node.getAttribute(\"data-src\"))\n        );\n      }\n    );\n\n    // Code\n    this.findAutoAnimateMatches(\n      pairs,\n      fromSlide,\n      toSlide,\n      codeNodes,\n      (node) => {\n        return node.nodeName + \":::\" + node.innerText;\n      }\n    );\n\n    pairs.forEach((pair) => {\n      // Disable scale transformations on text nodes, we transition\n      // each individual text property instead\n      if (matches(pair.from, textNodes)) {\n        pair.options = { scale: false };\n      }\n      // Animate individual lines of code\n      else if (matches(pair.from, codeNodes)) {\n        // Transition the code block's width and height instead of scaling\n        // to prevent its content from being squished\n        pair.options = { scale: false, styles: [\"width\", \"height\"] };\n\n        // Lines of code\n        this.findAutoAnimateMatches(\n          pairs,\n          pair.from,\n          pair.to,\n          \".hljs .hljs-ln-code\",\n          (node) => {\n            return node.textContent;\n          },\n          {\n            scale: false,\n            styles: [],\n            measure: this.getLocalBoundingBox.bind(this),\n          }\n        );\n\n        // Line numbers\n        this.findAutoAnimateMatches(\n          pairs,\n          pair.from,\n          pair.to,\n          \".hljs .hljs-ln-line[data-line-number]\",\n          (node) => {\n            return node.getAttribute(\"data-line-number\");\n          },\n          {\n            scale: false,\n            styles: [\"width\"],\n            measure: this.getLocalBoundingBox.bind(this),\n          }\n        );\n      }\n    }, this);\n\n    return pairs;\n  }\n\n  /**\n   * Helper method which returns a bounding box based on\n   * the given elements offset coordinates.\n   *\n   * @param {HTMLElement} element\n   * @return {Object} x, y, width, height\n   */\n  getLocalBoundingBox(element) {\n    const presentationScale = this.Reveal.getScale();\n\n    return {\n      x: Math.round(element.offsetLeft * presentationScale * 100) / 100,\n      y: Math.round(element.offsetTop * presentationScale * 100) / 100,\n      width: Math.round(element.offsetWidth * presentationScale * 100) / 100,\n      height: Math.round(element.offsetHeight * presentationScale * 100) / 100,\n    };\n  }\n\n  /**\n   * Finds matching elements between two slides.\n   *\n   * @param {Array} pairs            \tList of pairs to push matches to\n   * @param {HTMLElement} fromScope   Scope within the from element exists\n   * @param {HTMLElement} toScope     Scope within the to element exists\n   * @param {String} selector         CSS selector of the element to match\n   * @param {Function} serializer     A function that accepts an element and returns\n   *                                  a stringified ID based on its contents\n   * @param {Object} animationOptions Optional config options for this pair\n   */\n  findAutoAnimateMatches(\n    pairs,\n    fromScope,\n    toScope,\n    selector,\n    serializer,\n    animationOptions\n  ) {\n    let fromMatches = {};\n    let toMatches = {};\n\n    [].slice\n      .call(fromScope.querySelectorAll(selector))\n      .forEach((element, i) => {\n        const key = serializer(element);\n        if (typeof key === \"string\" && key.length) {\n          fromMatches[key] = fromMatches[key] || [];\n          fromMatches[key].push(element);\n        }\n      });\n\n    [].slice.call(toScope.querySelectorAll(selector)).forEach((element, i) => {\n      const key = serializer(element);\n      toMatches[key] = toMatches[key] || [];\n      toMatches[key].push(element);\n\n      let fromElement;\n\n      // Retrieve the 'from' element\n      if (fromMatches[key]) {\n        const pimaryIndex = toMatches[key].length - 1;\n        const secondaryIndex = fromMatches[key].length - 1;\n\n        // If there are multiple identical from elements, retrieve\n        // the one at the same index as our to-element.\n        if (fromMatches[key][pimaryIndex]) {\n          fromElement = fromMatches[key][pimaryIndex];\n          fromMatches[key][pimaryIndex] = null;\n        }\n        // If there are no matching from-elements at the same index,\n        // use the last one.\n        else if (fromMatches[key][secondaryIndex]) {\n          fromElement = fromMatches[key][secondaryIndex];\n          fromMatches[key][secondaryIndex] = null;\n        }\n      }\n\n      // If we've got a matching pair, push it to the list of pairs\n      if (fromElement) {\n        pairs.push({\n          from: fromElement,\n          to: element,\n          options: animationOptions,\n        });\n      }\n    });\n  }\n\n  /**\n   * Returns a all elements within the given scope that should\n   * be considered unmatched in an auto-animate transition. If\n   * fading of unmatched elements is turned on, these elements\n   * will fade when going between auto-animate slides.\n   *\n   * Note that parents of auto-animate targets are NOT considerd\n   * unmatched since fading them would break the auto-animation.\n   *\n   * @param {HTMLElement} rootElement\n   * @return {Array}\n   */\n  getUnmatchedAutoAnimateElements(rootElement) {\n    return [].slice.call(rootElement.children).reduce((result, element) => {\n      const containsAnimatedElements = element.querySelector(\n        \"[data-auto-animate-target]\"\n      );\n\n      // The element is unmatched if\n      // - It is not an auto-animate target\n      // - It does not contain any auto-animate targets\n      if (\n        !element.hasAttribute(\"data-auto-animate-target\") &&\n        !containsAnimatedElements\n      ) {\n        result.push(element);\n      }\n\n      if (element.querySelector(\"[data-auto-animate-target]\")) {\n        result = result.concat(this.getUnmatchedAutoAnimateElements(element));\n      }\n\n      return result;\n    }, []);\n  }\n}\n","import { extend, queryAll } from \"../utils/util.js\";\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n  }\n\n  /**\n   * Called when the reveal.js config is updated.\n   */\n  configure(config, oldConfig) {\n    if (config.fragments === false) {\n      this.disable();\n    } else if (oldConfig.fragments === false) {\n      this.enable();\n    }\n  }\n\n  /**\n   * If fragments are disabled in the deck, they should all be\n   * visible rather than stepped through.\n   */\n  disable() {\n    queryAll(this.Reveal.getSlidesElement(), \".fragment\").forEach((element) => {\n      element.classList.add(\"visible\");\n      element.classList.remove(\"current-fragment\");\n    });\n  }\n\n  /**\n   * Reverse of #disable(). Only called if fragments have\n   * previously been disabled.\n   */\n  enable() {\n    queryAll(this.Reveal.getSlidesElement(), \".fragment\").forEach((element) => {\n      element.classList.remove(\"visible\");\n      element.classList.remove(\"current-fragment\");\n    });\n  }\n\n  /**\n   * Returns an object describing the available fragment\n   * directions.\n   *\n   * @return {{prev: boolean, next: boolean}}\n   */\n  availableRoutes() {\n    let currentSlide = this.Reveal.getCurrentSlide();\n    if (currentSlide && this.Reveal.getConfig().fragments) {\n      let fragments = currentSlide.querySelectorAll(\".fragment:not(.disabled)\");\n      let hiddenFragments = currentSlide.querySelectorAll(\n        \".fragment:not(.disabled):not(.visible)\"\n      );\n\n      return {\n        prev: fragments.length - hiddenFragments.length > 0,\n        next: !!hiddenFragments.length,\n      };\n    } else {\n      return { prev: false, next: false };\n    }\n  }\n\n  /**\n   * Return a sorted fragments list, ordered by an increasing\n   * \"data-fragment-index\" attribute.\n   *\n   * Fragments will be revealed in the order that they are returned by\n   * this function, so you can use the index attributes to control the\n   * order of fragment appearance.\n   *\n   * To maintain a sensible default fragment order, fragments are presumed\n   * to be passed in document order. This function adds a \"fragment-index\"\n   * attribute to each node if such an attribute is not already present,\n   * and sets that attribute to an integer value which is the position of\n   * the fragment within the fragments list.\n   *\n   * @param {object[]|*} fragments\n   * @param {boolean} grouped If true the returned array will contain\n   * nested arrays for all fragments with the same index\n   * @return {object[]} sorted Sorted array of fragments\n   */\n  sort(fragments, grouped = false) {\n    fragments = Array.from(fragments);\n\n    let ordered = [],\n      unordered = [],\n      sorted = [];\n\n    // Group ordered and unordered elements\n    fragments.forEach((fragment) => {\n      if (fragment.hasAttribute(\"data-fragment-index\")) {\n        let index = parseInt(fragment.getAttribute(\"data-fragment-index\"), 10);\n\n        if (!ordered[index]) {\n          ordered[index] = [];\n        }\n\n        ordered[index].push(fragment);\n      } else {\n        unordered.push([fragment]);\n      }\n    });\n\n    // Append fragments without explicit indices in their\n    // DOM order\n    ordered = ordered.concat(unordered);\n\n    // Manually count the index up per group to ensure there\n    // are no gaps\n    let index = 0;\n\n    // Push all fragments in their sorted order to an array,\n    // this flattens the groups\n    ordered.forEach((group) => {\n      group.forEach((fragment) => {\n        sorted.push(fragment);\n        fragment.setAttribute(\"data-fragment-index\", index);\n      });\n\n      index++;\n    });\n\n    return grouped === true ? ordered : sorted;\n  }\n\n  /**\n   * Sorts and formats all of fragments in the\n   * presentation.\n   */\n  sortAll() {\n    this.Reveal.getHorizontalSlides().forEach((horizontalSlide) => {\n      let verticalSlides = queryAll(horizontalSlide, \"section\");\n      verticalSlides.forEach((verticalSlide, y) => {\n        this.sort(verticalSlide.querySelectorAll(\".fragment\"));\n      }, this);\n\n      if (verticalSlides.length === 0)\n        this.sort(horizontalSlide.querySelectorAll(\".fragment\"));\n    });\n  }\n\n  /**\n   * Refreshes the fragments on the current slide so that they\n   * have the appropriate classes (.visible + .current-fragment).\n   *\n   * @param {number} [index] The index of the current fragment\n   * @param {array} [fragments] Array containing all fragments\n   * in the current slide\n   *\n   * @return {{shown: array, hidden: array}}\n   */\n  update(index, fragments) {\n    let changedFragments = {\n      shown: [],\n      hidden: [],\n    };\n\n    let currentSlide = this.Reveal.getCurrentSlide();\n    if (currentSlide && this.Reveal.getConfig().fragments) {\n      fragments =\n        fragments || this.sort(currentSlide.querySelectorAll(\".fragment\"));\n\n      if (fragments.length) {\n        let maxIndex = 0;\n\n        if (typeof index !== \"number\") {\n          let currentFragment = this.sort(\n            currentSlide.querySelectorAll(\".fragment.visible\")\n          ).pop();\n          if (currentFragment) {\n            index = parseInt(\n              currentFragment.getAttribute(\"data-fragment-index\") || 0,\n              10\n            );\n          }\n        }\n\n        Array.from(fragments).forEach((el, i) => {\n          if (el.hasAttribute(\"data-fragment-index\")) {\n            i = parseInt(el.getAttribute(\"data-fragment-index\"), 10);\n          }\n\n          maxIndex = Math.max(maxIndex, i);\n\n          // Visible fragments\n          if (i <= index) {\n            let wasVisible = el.classList.contains(\"visible\");\n            el.classList.add(\"visible\");\n            el.classList.remove(\"current-fragment\");\n\n            if (i === index) {\n              // Announce the fragments one by one to the Screen Reader\n              this.Reveal.announceStatus(this.Reveal.getStatusText(el));\n\n              el.classList.add(\"current-fragment\");\n              this.Reveal.slideContent.startEmbeddedContent(el);\n            }\n\n            if (!wasVisible) {\n              changedFragments.shown.push(el);\n              this.Reveal.dispatchEvent({\n                target: el,\n                type: \"visible\",\n                bubbles: false,\n              });\n            }\n          }\n          // Hidden fragments\n          else {\n            let wasVisible = el.classList.contains(\"visible\");\n            el.classList.remove(\"visible\");\n            el.classList.remove(\"current-fragment\");\n\n            if (wasVisible) {\n              this.Reveal.slideContent.stopEmbeddedContent(el);\n              changedFragments.hidden.push(el);\n              this.Reveal.dispatchEvent({\n                target: el,\n                type: \"hidden\",\n                bubbles: false,\n              });\n            }\n          }\n        });\n\n        // Write the current fragment index to the slide <section>.\n        // This can be used by end users to apply styles based on\n        // the current fragment index.\n        index = typeof index === \"number\" ? index : -1;\n        index = Math.max(Math.min(index, maxIndex), -1);\n        currentSlide.setAttribute(\"data-fragment\", index);\n      }\n    }\n\n    return changedFragments;\n  }\n\n  /**\n   * Formats the fragments on the given slide so that they have\n   * valid indices. Call this if fragments are changed in the DOM\n   * after reveal.js has already initialized.\n   *\n   * @param {HTMLElement} slide\n   * @return {Array} a list of the HTML fragments that were synced\n   */\n  sync(slide = this.Reveal.getCurrentSlide()) {\n    return this.sort(slide.querySelectorAll(\".fragment\"));\n  }\n\n  /**\n   * Navigate to the specified slide fragment.\n   *\n   * @param {?number} index The index of the fragment that\n   * should be shown, -1 means all are invisible\n   * @param {number} offset Integer offset to apply to the\n   * fragment index\n   *\n   * @return {boolean} true if a change was made in any\n   * fragments visibility as part of this call\n   */\n  goto(index, offset = 0) {\n    let currentSlide = this.Reveal.getCurrentSlide();\n    if (currentSlide && this.Reveal.getConfig().fragments) {\n      let fragments = this.sort(\n        currentSlide.querySelectorAll(\".fragment:not(.disabled)\")\n      );\n      if (fragments.length) {\n        // If no index is specified, find the current\n        if (typeof index !== \"number\") {\n          let lastVisibleFragment = this.sort(\n            currentSlide.querySelectorAll(\".fragment:not(.disabled).visible\")\n          ).pop();\n\n          if (lastVisibleFragment) {\n            index = parseInt(\n              lastVisibleFragment.getAttribute(\"data-fragment-index\") || 0,\n              10\n            );\n          } else {\n            index = -1;\n          }\n        }\n\n        // Apply the offset if there is one\n        index += offset;\n\n        let changedFragments = this.update(index, fragments);\n\n        if (changedFragments.hidden.length) {\n          this.Reveal.dispatchEvent({\n            type: \"fragmenthidden\",\n            data: {\n              fragment: changedFragments.hidden[0],\n              fragments: changedFragments.hidden,\n            },\n          });\n        }\n\n        if (changedFragments.shown.length) {\n          this.Reveal.dispatchEvent({\n            type: \"fragmentshown\",\n            data: {\n              fragment: changedFragments.shown[0],\n              fragments: changedFragments.shown,\n            },\n          });\n        }\n\n        this.Reveal.controls.update();\n        this.Reveal.progress.update();\n\n        if (this.Reveal.getConfig().fragmentInURL) {\n          this.Reveal.location.writeURL();\n        }\n\n        return !!(\n          changedFragments.shown.length || changedFragments.hidden.length\n        );\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Navigate to the next slide fragment.\n   *\n   * @return {boolean} true if there was a next fragment,\n   * false otherwise\n   */\n  next() {\n    return this.goto(null, 1);\n  }\n\n  /**\n   * Navigate to the previous slide fragment.\n   *\n   * @return {boolean} true if there was a previous fragment,\n   * false otherwise\n   */\n  prev() {\n    return this.goto(null, -1);\n  }\n}\n","import { SLIDES_SELECTOR } from \"../utils/constants.js\";\nimport { extend, queryAll, transformElement } from \"../utils/util.js\";\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n\n    this.active = false;\n\n    this.onSlideClicked = this.onSlideClicked.bind(this);\n  }\n\n  /**\n   * Displays the overview of slides (quick nav) by scaling\n   * down and arranging all slide elements.\n   */\n  activate() {\n    // Only proceed if enabled in config\n    if (this.Reveal.getConfig().overview && !this.isActive()) {\n      this.active = true;\n\n      this.Reveal.getRevealElement().classList.add(\"overview\");\n\n      // Don't auto-slide while in overview mode\n      this.Reveal.cancelAutoSlide();\n\n      // Move the backgrounds element into the slide container to\n      // that the same scaling is applied\n      this.Reveal.getSlidesElement().appendChild(\n        this.Reveal.getBackgroundsElement()\n      );\n\n      // Clicking on an overview slide navigates to it\n      queryAll(this.Reveal.getRevealElement(), SLIDES_SELECTOR).forEach(\n        (slide) => {\n          if (!slide.classList.contains(\"stack\")) {\n            slide.addEventListener(\"click\", this.onSlideClicked, true);\n          }\n        }\n      );\n\n      // Calculate slide sizes\n      const margin = 70;\n      const slideSize = this.Reveal.getComputedSlideSize();\n      this.overviewSlideWidth = slideSize.width + margin;\n      this.overviewSlideHeight = slideSize.height + margin;\n\n      // Reverse in RTL mode\n      if (this.Reveal.getConfig().rtl) {\n        this.overviewSlideWidth = -this.overviewSlideWidth;\n      }\n\n      this.Reveal.updateSlidesVisibility();\n\n      this.layout();\n      this.update();\n\n      this.Reveal.layout();\n\n      const indices = this.Reveal.getIndices();\n\n      // Notify observers of the overview showing\n      this.Reveal.dispatchEvent({\n        type: \"overviewshown\",\n        data: {\n          indexh: indices.h,\n          indexv: indices.v,\n          currentSlide: this.Reveal.getCurrentSlide(),\n        },\n      });\n    }\n  }\n\n  /**\n   * Uses CSS transforms to position all slides in a grid for\n   * display inside of the overview mode.\n   */\n  layout() {\n    // Layout slides\n    this.Reveal.getHorizontalSlides().forEach((hslide, h) => {\n      hslide.setAttribute(\"data-index-h\", h);\n      transformElement(\n        hslide,\n        \"translate3d(\" + h * this.overviewSlideWidth + \"px, 0, 0)\"\n      );\n\n      if (hslide.classList.contains(\"stack\")) {\n        queryAll(hslide, \"section\").forEach((vslide, v) => {\n          vslide.setAttribute(\"data-index-h\", h);\n          vslide.setAttribute(\"data-index-v\", v);\n\n          transformElement(\n            vslide,\n            \"translate3d(0, \" + v * this.overviewSlideHeight + \"px, 0)\"\n          );\n        });\n      }\n    });\n\n    // Layout slide backgrounds\n    Array.from(this.Reveal.getBackgroundsElement().childNodes).forEach(\n      (hbackground, h) => {\n        transformElement(\n          hbackground,\n          \"translate3d(\" + h * this.overviewSlideWidth + \"px, 0, 0)\"\n        );\n\n        queryAll(hbackground, \".slide-background\").forEach((vbackground, v) => {\n          transformElement(\n            vbackground,\n            \"translate3d(0, \" + v * this.overviewSlideHeight + \"px, 0)\"\n          );\n        });\n      }\n    );\n  }\n\n  /**\n   * Moves the overview viewport to the current slides.\n   * Called each time the current slide changes.\n   */\n  update() {\n    const vmin = Math.min(window.innerWidth, window.innerHeight);\n    const scale = Math.max(vmin / 5, 150) / vmin;\n    const indices = this.Reveal.getIndices();\n\n    this.Reveal.transformSlides({\n      overview: [\n        \"scale(\" + scale + \")\",\n        \"translateX(\" + -indices.h * this.overviewSlideWidth + \"px)\",\n        \"translateY(\" + -indices.v * this.overviewSlideHeight + \"px)\",\n      ].join(\" \"),\n    });\n  }\n\n  /**\n   * Exits the slide overview and enters the currently\n   * active slide.\n   */\n  deactivate() {\n    // Only proceed if enabled in config\n    if (this.Reveal.getConfig().overview) {\n      this.active = false;\n\n      this.Reveal.getRevealElement().classList.remove(\"overview\");\n\n      // Temporarily add a class so that transitions can do different things\n      // depending on whether they are exiting/entering overview, or just\n      // moving from slide to slide\n      this.Reveal.getRevealElement().classList.add(\"overview-deactivating\");\n\n      setTimeout(() => {\n        this.Reveal.getRevealElement().classList.remove(\n          \"overview-deactivating\"\n        );\n      }, 1);\n\n      // Move the background element back out\n      this.Reveal.getRevealElement().appendChild(\n        this.Reveal.getBackgroundsElement()\n      );\n\n      // Clean up changes made to slides\n      queryAll(this.Reveal.getRevealElement(), SLIDES_SELECTOR).forEach(\n        (slide) => {\n          transformElement(slide, \"\");\n\n          slide.removeEventListener(\"click\", this.onSlideClicked, true);\n        }\n      );\n\n      // Clean up changes made to backgrounds\n      queryAll(\n        this.Reveal.getBackgroundsElement(),\n        \".slide-background\"\n      ).forEach((background) => {\n        transformElement(background, \"\");\n      });\n\n      this.Reveal.transformSlides({ overview: \"\" });\n\n      const indices = this.Reveal.getIndices();\n\n      this.Reveal.slide(indices.h, indices.v);\n      this.Reveal.layout();\n      this.Reveal.cueAutoSlide();\n\n      // Notify observers of the overview hiding\n      this.Reveal.dispatchEvent({\n        type: \"overviewhidden\",\n        data: {\n          indexh: indices.h,\n          indexv: indices.v,\n          currentSlide: this.Reveal.getCurrentSlide(),\n        },\n      });\n    }\n  }\n\n  /**\n   * Toggles the slide overview mode on and off.\n   *\n   * @param {Boolean} [override] Flag which overrides the\n   * toggle logic and forcibly sets the desired state. True means\n   * overview is open, false means it's closed.\n   */\n  toggle(override) {\n    if (typeof override === \"boolean\") {\n      override ? this.activate() : this.deactivate();\n    } else {\n      this.isActive() ? this.deactivate() : this.activate();\n    }\n  }\n\n  /**\n   * Checks if the overview is currently active.\n   *\n   * @return {Boolean} true if the overview is active,\n   * false otherwise\n   */\n  isActive() {\n    return this.active;\n  }\n\n  /**\n   * Invoked when a slide is and we're in the overview.\n   *\n   * @param {object} event\n   */\n  onSlideClicked(event) {\n    if (this.isActive()) {\n      event.preventDefault();\n\n      let element = event.target;\n\n      while (element && !element.nodeName.match(/section/gi)) {\n        element = element.parentNode;\n      }\n\n      if (element && !element.classList.contains(\"disabled\")) {\n        this.deactivate();\n\n        if (element.nodeName.match(/section/gi)) {\n          let h = parseInt(element.getAttribute(\"data-index-h\"), 10),\n            v = parseInt(element.getAttribute(\"data-index-v\"), 10);\n\n          this.Reveal.slide(h, v);\n        }\n      }\n    }\n  }\n}\n","import { enterFullscreen } from \"../utils/util.js\";\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n\n    // A key:value map of keyboard keys and descriptions of\n    // the actions they trigger\n    this.shortcuts = {};\n\n    // Holds custom key code mappings\n    this.bindings = {};\n\n    this.onDocumentKeyDown = this.onDocumentKeyDown.bind(this);\n    this.onDocumentKeyPress = this.onDocumentKeyPress.bind(this);\n  }\n\n  /**\n   * Called when the reveal.js config is updated.\n   */\n  configure(config, oldConfig) {\n    if (config.navigationMode === \"linear\") {\n      this.shortcuts[\"&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J\"] =\n        \"Next slide\";\n      this.shortcuts[\"&#8592;  ,  &#8593;  ,  P  ,  H  ,  K\"] =\n        \"Previous slide\";\n    } else {\n      this.shortcuts[\"N  ,  SPACE\"] = \"Next slide\";\n      this.shortcuts[\"P  ,  Shift SPACE\"] = \"Previous slide\";\n      this.shortcuts[\"&#8592;  ,  H\"] = \"Navigate left\";\n      this.shortcuts[\"&#8594;  ,  L\"] = \"Navigate right\";\n      this.shortcuts[\"&#8593;  ,  K\"] = \"Navigate up\";\n      this.shortcuts[\"&#8595;  ,  J\"] = \"Navigate down\";\n    }\n\n    this.shortcuts[\"Alt + &#8592;/&#8593/&#8594;/&#8595;\"] =\n      \"Navigate without fragments\";\n    this.shortcuts[\"Shift + &#8592;/&#8593/&#8594;/&#8595;\"] =\n      \"Jump to first/last slide\";\n    this.shortcuts[\"B  ,  .\"] = \"Pause\";\n    this.shortcuts[\"F\"] = \"Fullscreen\";\n    this.shortcuts[\"ESC, O\"] = \"Slide overview\";\n  }\n\n  /**\n   * Starts listening for keyboard events.\n   */\n  bind() {\n    document.addEventListener(\"keydown\", this.onDocumentKeyDown, false);\n    document.addEventListener(\"keypress\", this.onDocumentKeyPress, false);\n  }\n\n  /**\n   * Stops listening for keyboard events.\n   */\n  unbind() {\n    document.removeEventListener(\"keydown\", this.onDocumentKeyDown, false);\n    document.removeEventListener(\"keypress\", this.onDocumentKeyPress, false);\n  }\n\n  /**\n   * Add a custom key binding with optional description to\n   * be added to the help screen.\n   */\n  addKeyBinding(binding, callback) {\n    if (typeof binding === \"object\" && binding.keyCode) {\n      this.bindings[binding.keyCode] = {\n        callback: callback,\n        key: binding.key,\n        description: binding.description,\n      };\n    } else {\n      this.bindings[binding] = {\n        callback: callback,\n        key: null,\n        description: null,\n      };\n    }\n  }\n\n  /**\n   * Removes the specified custom key binding.\n   */\n  removeKeyBinding(keyCode) {\n    delete this.bindings[keyCode];\n  }\n\n  /**\n   * Programmatically triggers a keyboard event\n   *\n   * @param {int} keyCode\n   */\n  triggerKey(keyCode) {\n    this.onDocumentKeyDown({ keyCode });\n  }\n\n  /**\n   * Registers a new shortcut to include in the help overlay\n   *\n   * @param {String} key\n   * @param {String} value\n   */\n  registerKeyboardShortcut(key, value) {\n    this.shortcuts[key] = value;\n  }\n\n  getShortcuts() {\n    return this.shortcuts;\n  }\n\n  getBindings() {\n    return this.bindings;\n  }\n\n  /**\n   * Handler for the document level 'keypress' event.\n   *\n   * @param {object} event\n   */\n  onDocumentKeyPress(event) {\n    // Check if the pressed key is question mark\n    if (event.shiftKey && event.charCode === 63) {\n      this.Reveal.toggleHelp();\n    }\n  }\n\n  /**\n   * Handler for the document level 'keydown' event.\n   *\n   * @param {object} event\n   */\n  onDocumentKeyDown(event) {\n    let config = this.Reveal.getConfig();\n\n    // If there's a condition specified and it returns false,\n    // ignore this event\n    if (\n      typeof config.keyboardCondition === \"function\" &&\n      config.keyboardCondition(event) === false\n    ) {\n      return true;\n    }\n\n    // If keyboardCondition is set, only capture keyboard events\n    // for embedded decks when they are focused\n    if (config.keyboardCondition === \"focused\" && !this.Reveal.isFocused()) {\n      return true;\n    }\n\n    // Shorthand\n    let keyCode = event.keyCode;\n\n    // Remember if auto-sliding was paused so we can toggle it\n    let autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n    this.Reveal.onUserInput(event);\n\n    // Is there a focused element that could be using the keyboard?\n    let activeElementIsCE =\n      document.activeElement &&\n      document.activeElement.isContentEditable === true;\n    let activeElementIsInput =\n      document.activeElement &&\n      document.activeElement.tagName &&\n      /input|textarea/i.test(document.activeElement.tagName);\n    let activeElementIsNotes =\n      document.activeElement &&\n      document.activeElement.className &&\n      /speaker-notes/i.test(document.activeElement.className);\n\n    // Whitelist certain modifiers for slide navigation shortcuts\n    let isNavigationKey =\n      [32, 37, 38, 39, 40, 78, 80].indexOf(event.keyCode) !== -1;\n\n    // Prevent all other events when a modifier is pressed\n    let unusedModifier =\n      !((isNavigationKey && event.shiftKey) || event.altKey) &&\n      (event.shiftKey || event.altKey || event.ctrlKey || event.metaKey);\n\n    // Disregard the event if there's a focused element or a\n    // keyboard modifier key is present\n    if (\n      activeElementIsCE ||\n      activeElementIsInput ||\n      activeElementIsNotes ||\n      unusedModifier\n    )\n      return;\n\n    // While paused only allow resume keyboard events; 'b', 'v', '.'\n    let resumeKeyCodes = [66, 86, 190, 191];\n    let key;\n\n    // Custom key bindings for togglePause should be able to resume\n    if (typeof config.keyboard === \"object\") {\n      for (key in config.keyboard) {\n        if (config.keyboard[key] === \"togglePause\") {\n          resumeKeyCodes.push(parseInt(key, 10));\n        }\n      }\n    }\n\n    if (this.Reveal.isPaused() && resumeKeyCodes.indexOf(keyCode) === -1) {\n      return false;\n    }\n\n    // Use linear navigation if we're configured to OR if\n    // the presentation is one-dimensional\n    let useLinearMode =\n      config.navigationMode === \"linear\" ||\n      !this.Reveal.hasHorizontalSlides() ||\n      !this.Reveal.hasVerticalSlides();\n\n    let triggered = false;\n\n    // 1. User defined key bindings\n    if (typeof config.keyboard === \"object\") {\n      for (key in config.keyboard) {\n        // Check if this binding matches the pressed key\n        if (parseInt(key, 10) === keyCode) {\n          let value = config.keyboard[key];\n\n          // Callback function\n          if (typeof value === \"function\") {\n            value.apply(null, [event]);\n          }\n          // String shortcuts to reveal.js API\n          else if (\n            typeof value === \"string\" &&\n            typeof this.Reveal[value] === \"function\"\n          ) {\n            this.Reveal[value].call();\n          }\n\n          triggered = true;\n        }\n      }\n    }\n\n    // 2. Registered custom key bindings\n    if (triggered === false) {\n      for (key in this.bindings) {\n        // Check if this binding matches the pressed key\n        if (parseInt(key, 10) === keyCode) {\n          let action = this.bindings[key].callback;\n\n          // Callback function\n          if (typeof action === \"function\") {\n            action.apply(null, [event]);\n          }\n          // String shortcuts to reveal.js API\n          else if (\n            typeof action === \"string\" &&\n            typeof this.Reveal[action] === \"function\"\n          ) {\n            this.Reveal[action].call();\n          }\n\n          triggered = true;\n        }\n      }\n    }\n\n    // 3. System defined key bindings\n    if (triggered === false) {\n      // Assume true and try to prove false\n      triggered = true;\n\n      // P, PAGE UP\n      if (keyCode === 80 || keyCode === 33) {\n        this.Reveal.prev({ skipFragments: event.altKey });\n      }\n      // N, PAGE DOWN\n      else if (keyCode === 78 || keyCode === 34) {\n        this.Reveal.next({ skipFragments: event.altKey });\n      }\n      // H, LEFT\n      else if (keyCode === 72 || keyCode === 37) {\n        if (event.shiftKey) {\n          this.Reveal.slide(0);\n        } else if (!this.Reveal.overview.isActive() && useLinearMode) {\n          this.Reveal.prev({ skipFragments: event.altKey });\n        } else {\n          this.Reveal.left({ skipFragments: event.altKey });\n        }\n      }\n      // L, RIGHT\n      else if (keyCode === 76 || keyCode === 39) {\n        if (event.shiftKey) {\n          this.Reveal.slide(this.Reveal.getHorizontalSlides().length - 1);\n        } else if (!this.Reveal.overview.isActive() && useLinearMode) {\n          this.Reveal.next({ skipFragments: event.altKey });\n        } else {\n          this.Reveal.right({ skipFragments: event.altKey });\n        }\n      }\n      // K, UP\n      else if (keyCode === 75 || keyCode === 38) {\n        if (event.shiftKey) {\n          this.Reveal.slide(undefined, 0);\n        } else if (!this.Reveal.overview.isActive() && useLinearMode) {\n          this.Reveal.prev({ skipFragments: event.altKey });\n        } else {\n          this.Reveal.up({ skipFragments: event.altKey });\n        }\n      }\n      // J, DOWN\n      else if (keyCode === 74 || keyCode === 40) {\n        if (event.shiftKey) {\n          this.Reveal.slide(undefined, Number.MAX_VALUE);\n        } else if (!this.Reveal.overview.isActive() && useLinearMode) {\n          this.Reveal.next({ skipFragments: event.altKey });\n        } else {\n          this.Reveal.down({ skipFragments: event.altKey });\n        }\n      }\n      // HOME\n      else if (keyCode === 36) {\n        this.Reveal.slide(0);\n      }\n      // END\n      else if (keyCode === 35) {\n        this.Reveal.slide(this.Reveal.getHorizontalSlides().length - 1);\n      }\n      // SPACE\n      else if (keyCode === 32) {\n        if (this.Reveal.overview.isActive()) {\n          this.Reveal.overview.deactivate();\n        }\n        if (event.shiftKey) {\n          this.Reveal.prev({ skipFragments: event.altKey });\n        } else {\n          this.Reveal.next({ skipFragments: event.altKey });\n        }\n      }\n      // TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n      else if (\n        keyCode === 58 ||\n        keyCode === 59 ||\n        keyCode === 66 ||\n        keyCode === 86 ||\n        keyCode === 190 ||\n        keyCode === 191\n      ) {\n        this.Reveal.togglePause();\n      }\n      // F\n      else if (keyCode === 70) {\n        enterFullscreen(\n          config.embedded\n            ? this.Reveal.getViewportElement()\n            : document.documentElement\n        );\n      }\n      // A\n      else if (keyCode === 65) {\n        if (config.autoSlideStoppable) {\n          this.Reveal.toggleAutoSlide(autoSlideWasPaused);\n        }\n      } else {\n        triggered = false;\n      }\n    }\n\n    // If the input resulted in a triggered action we should prevent\n    // the browsers default behavior\n    if (triggered) {\n      event.preventDefault && event.preventDefault();\n    }\n    // ESC or O key\n    else if (keyCode === 27 || keyCode === 79) {\n      if (this.Reveal.closeOverlay() === false) {\n        this.Reveal.overview.toggle();\n      }\n\n      event.preventDefault && event.preventDefault();\n    }\n\n    // If auto-sliding is enabled we need to cue up\n    // another timeout\n    this.Reveal.cueAutoSlide();\n  }\n}\n","/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n  // The minimum number of milliseconds that must pass between\n  // calls to history.replaceState\n  MAX_REPLACE_STATE_FREQUENCY = 1000;\n\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n\n    // Delays updates to the URL due to a Chrome thumbnailer bug\n    this.writeURLTimeout = 0;\n\n    this.replaceStateTimestamp = 0;\n\n    this.onWindowHashChange = this.onWindowHashChange.bind(this);\n  }\n\n  bind() {\n    window.addEventListener(\"hashchange\", this.onWindowHashChange, false);\n  }\n\n  unbind() {\n    window.removeEventListener(\"hashchange\", this.onWindowHashChange, false);\n  }\n\n  /**\n   * Returns the slide indices for the given hash link.\n   *\n   * @param {string} [hash] the hash string that we want to\n   * find the indices for\n   *\n   * @returns slide indices or null\n   */\n  getIndicesFromHash(hash = window.location.hash) {\n    // Attempt to parse the hash as either an index or name\n    let name = hash.replace(/^#\\/?/, \"\");\n    let bits = name.split(\"/\");\n\n    // If the first bit is not fully numeric and there is a name we\n    // can assume that this is a named link\n    if (!/^[0-9]*$/.test(bits[0]) && name.length) {\n      let element;\n\n      let f;\n\n      // Parse named links with fragments (#/named-link/2)\n      if (/\\/[-\\d]+$/g.test(name)) {\n        f = parseInt(name.split(\"/\").pop(), 10);\n        f = isNaN(f) ? undefined : f;\n        name = name.split(\"/\").shift();\n      }\n\n      // Ensure the named link is a valid HTML ID attribute\n      try {\n        element = document.getElementById(decodeURIComponent(name));\n      } catch (error) {}\n\n      if (element) {\n        return { ...this.Reveal.getIndices(element), f };\n      }\n    } else {\n      const config = this.Reveal.getConfig();\n      let hashIndexBase = config.hashOneBasedIndex ? 1 : 0;\n\n      // Read the index components of the hash\n      let h = parseInt(bits[0], 10) - hashIndexBase || 0,\n        v = parseInt(bits[1], 10) - hashIndexBase || 0,\n        f;\n\n      if (config.fragmentInURL) {\n        f = parseInt(bits[2], 10);\n        if (isNaN(f)) {\n          f = undefined;\n        }\n      }\n\n      return { h, v, f };\n    }\n\n    // The hash couldn't be parsed or no matching named link was found\n    return null;\n  }\n\n  /**\n   * Reads the current URL (hash) and navigates accordingly.\n   */\n  readURL() {\n    const currentIndices = this.Reveal.getIndices();\n    const newIndices = this.getIndicesFromHash();\n\n    if (newIndices) {\n      if (\n        newIndices.h !== currentIndices.h ||\n        newIndices.v !== currentIndices.v ||\n        newIndices.f !== undefined\n      ) {\n        this.Reveal.slide(newIndices.h, newIndices.v, newIndices.f);\n      }\n    }\n    // If no new indices are available, we're trying to navigate to\n    // a slide hash that does not exist\n    else {\n      this.Reveal.slide(currentIndices.h || 0, currentIndices.v || 0);\n    }\n  }\n\n  /**\n   * Updates the page URL (hash) to reflect the current\n   * state.\n   *\n   * @param {number} delay The time in ms to wait before\n   * writing the hash\n   */\n  writeURL(delay) {\n    let config = this.Reveal.getConfig();\n    let currentSlide = this.Reveal.getCurrentSlide();\n\n    // Make sure there's never more than one timeout running\n    clearTimeout(this.writeURLTimeout);\n\n    // If a delay is specified, timeout this call\n    if (typeof delay === \"number\") {\n      this.writeURLTimeout = setTimeout(this.writeURL, delay);\n    } else if (currentSlide) {\n      let hash = this.getHash();\n\n      // If we're configured to push to history OR the history\n      // API is not avaialble.\n      if (config.history) {\n        window.location.hash = hash;\n      }\n      // If we're configured to reflect the current slide in the\n      // URL without pushing to history.\n      else if (config.hash) {\n        // If the hash is empty, don't add it to the URL\n        if (hash === \"/\") {\n          this.debouncedReplaceState(\n            window.location.pathname + window.location.search\n          );\n        } else {\n          this.debouncedReplaceState(\"#\" + hash);\n        }\n      }\n      // UPDATE: The below nuking of all hash changes breaks\n      // anchors on pages where reveal.js is running. Removed\n      // in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n      //\n      // If history and hash are both disabled, a hash may still\n      // be added to the URL by clicking on a href with a hash\n      // target. Counter this by always removing the hash.\n      // else {\n      // \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n      // }\n    }\n  }\n\n  replaceState(url) {\n    window.history.replaceState(null, null, url);\n    this.replaceStateTimestamp = Date.now();\n  }\n\n  debouncedReplaceState(url) {\n    clearTimeout(this.replaceStateTimeout);\n\n    if (\n      Date.now() - this.replaceStateTimestamp >\n      this.MAX_REPLACE_STATE_FREQUENCY\n    ) {\n      this.replaceState(url);\n    } else {\n      this.replaceStateTimeout = setTimeout(\n        () => this.replaceState(url),\n        this.MAX_REPLACE_STATE_FREQUENCY\n      );\n    }\n  }\n\n  /**\n   * Return a hash URL that will resolve to the given slide location.\n   *\n   * @param {HTMLElement} [slide=currentSlide] The slide to link to\n   */\n  getHash(slide) {\n    let url = \"/\";\n\n    // Attempt to create a named link based on the slide's ID\n    let s = slide || this.Reveal.getCurrentSlide();\n    let id = s ? s.getAttribute(\"id\") : null;\n    if (id) {\n      id = encodeURIComponent(id);\n    }\n\n    let index = this.Reveal.getIndices(slide);\n    if (!this.Reveal.getConfig().fragmentInURL) {\n      index.f = undefined;\n    }\n\n    // If the current slide has an ID, use that as a named link,\n    // but we don't support named links with a fragment index\n    if (typeof id === \"string\" && id.length) {\n      url = \"/\" + id;\n\n      // If there is also a fragment, append that at the end\n      // of the named link, like: #/named-link/2\n      if (index.f >= 0) url += \"/\" + index.f;\n    }\n    // Otherwise use the /h/v index\n    else {\n      let hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n      if (index.h > 0 || index.v > 0 || index.f >= 0)\n        url += index.h + hashIndexBase;\n      if (index.v > 0 || index.f >= 0) url += \"/\" + (index.v + hashIndexBase);\n      if (index.f >= 0) url += \"/\" + index.f;\n    }\n\n    return url;\n  }\n\n  /**\n   * Handler for the window level 'hashchange' event.\n   *\n   * @param {object} [event]\n   */\n  onWindowHashChange(event) {\n    this.readURL();\n  }\n}\n","import { queryAll } from \"../utils/util.js\";\nimport { isAndroid } from \"../utils/device.js\";\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n */\nexport default class Controls {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n\n    this.onNavigateLeftClicked = this.onNavigateLeftClicked.bind(this);\n    this.onNavigateRightClicked = this.onNavigateRightClicked.bind(this);\n    this.onNavigateUpClicked = this.onNavigateUpClicked.bind(this);\n    this.onNavigateDownClicked = this.onNavigateDownClicked.bind(this);\n    this.onNavigatePrevClicked = this.onNavigatePrevClicked.bind(this);\n    this.onNavigateNextClicked = this.onNavigateNextClicked.bind(this);\n  }\n\n  render() {\n    const rtl = this.Reveal.getConfig().rtl;\n    const revealElement = this.Reveal.getRevealElement();\n\n    this.element = document.createElement(\"aside\");\n    this.element.className = \"controls\";\n    this.element.innerHTML = `<button class=\"navigate-left\" aria-label=\"${\n      rtl ? \"next slide\" : \"previous slide\"\n    }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${\n        rtl ? \"previous slide\" : \"next slide\"\n      }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n    this.Reveal.getRevealElement().appendChild(this.element);\n\n    // There can be multiple instances of controls throughout the page\n    this.controlsLeft = queryAll(revealElement, \".navigate-left\");\n    this.controlsRight = queryAll(revealElement, \".navigate-right\");\n    this.controlsUp = queryAll(revealElement, \".navigate-up\");\n    this.controlsDown = queryAll(revealElement, \".navigate-down\");\n    this.controlsPrev = queryAll(revealElement, \".navigate-prev\");\n    this.controlsNext = queryAll(revealElement, \".navigate-next\");\n\n    // The left, right and down arrows in the standard reveal.js controls\n    this.controlsRightArrow = this.element.querySelector(\".navigate-right\");\n    this.controlsLeftArrow = this.element.querySelector(\".navigate-left\");\n    this.controlsDownArrow = this.element.querySelector(\".navigate-down\");\n  }\n\n  /**\n   * Called when the reveal.js config is updated.\n   */\n  configure(config, oldConfig) {\n    this.element.style.display = config.controls ? \"block\" : \"none\";\n\n    this.element.setAttribute(\"data-controls-layout\", config.controlsLayout);\n    this.element.setAttribute(\n      \"data-controls-back-arrows\",\n      config.controlsBackArrows\n    );\n  }\n\n  bind() {\n    // Listen to both touch and click events, in case the device\n    // supports both\n    let pointerEvents = [\"touchstart\", \"click\"];\n\n    // Only support touch for Android, fixes double navigations in\n    // stock browser\n    if (isAndroid) {\n      pointerEvents = [\"touchstart\"];\n    }\n\n    pointerEvents.forEach((eventName) => {\n      this.controlsLeft.forEach((el) =>\n        el.addEventListener(eventName, this.onNavigateLeftClicked, false)\n      );\n      this.controlsRight.forEach((el) =>\n        el.addEventListener(eventName, this.onNavigateRightClicked, false)\n      );\n      this.controlsUp.forEach((el) =>\n        el.addEventListener(eventName, this.onNavigateUpClicked, false)\n      );\n      this.controlsDown.forEach((el) =>\n        el.addEventListener(eventName, this.onNavigateDownClicked, false)\n      );\n      this.controlsPrev.forEach((el) =>\n        el.addEventListener(eventName, this.onNavigatePrevClicked, false)\n      );\n      this.controlsNext.forEach((el) =>\n        el.addEventListener(eventName, this.onNavigateNextClicked, false)\n      );\n    });\n  }\n\n  unbind() {\n    [\"touchstart\", \"click\"].forEach((eventName) => {\n      this.controlsLeft.forEach((el) =>\n        el.removeEventListener(eventName, this.onNavigateLeftClicked, false)\n      );\n      this.controlsRight.forEach((el) =>\n        el.removeEventListener(eventName, this.onNavigateRightClicked, false)\n      );\n      this.controlsUp.forEach((el) =>\n        el.removeEventListener(eventName, this.onNavigateUpClicked, false)\n      );\n      this.controlsDown.forEach((el) =>\n        el.removeEventListener(eventName, this.onNavigateDownClicked, false)\n      );\n      this.controlsPrev.forEach((el) =>\n        el.removeEventListener(eventName, this.onNavigatePrevClicked, false)\n      );\n      this.controlsNext.forEach((el) =>\n        el.removeEventListener(eventName, this.onNavigateNextClicked, false)\n      );\n    });\n  }\n\n  /**\n   * Updates the state of all control/navigation arrows.\n   */\n  update() {\n    let routes = this.Reveal.availableRoutes();\n\n    // Remove the 'enabled' class from all directions\n    [\n      ...this.controlsLeft,\n      ...this.controlsRight,\n      ...this.controlsUp,\n      ...this.controlsDown,\n      ...this.controlsPrev,\n      ...this.controlsNext,\n    ].forEach((node) => {\n      node.classList.remove(\"enabled\", \"fragmented\");\n\n      // Set 'disabled' attribute on all directions\n      node.setAttribute(\"disabled\", \"disabled\");\n    });\n\n    // Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n    if (routes.left)\n      this.controlsLeft.forEach((el) => {\n        el.classList.add(\"enabled\");\n        el.removeAttribute(\"disabled\");\n      });\n    if (routes.right)\n      this.controlsRight.forEach((el) => {\n        el.classList.add(\"enabled\");\n        el.removeAttribute(\"disabled\");\n      });\n    if (routes.up)\n      this.controlsUp.forEach((el) => {\n        el.classList.add(\"enabled\");\n        el.removeAttribute(\"disabled\");\n      });\n    if (routes.down)\n      this.controlsDown.forEach((el) => {\n        el.classList.add(\"enabled\");\n        el.removeAttribute(\"disabled\");\n      });\n\n    // Prev/next buttons\n    if (routes.left || routes.up)\n      this.controlsPrev.forEach((el) => {\n        el.classList.add(\"enabled\");\n        el.removeAttribute(\"disabled\");\n      });\n    if (routes.right || routes.down)\n      this.controlsNext.forEach((el) => {\n        el.classList.add(\"enabled\");\n        el.removeAttribute(\"disabled\");\n      });\n\n    // Highlight fragment directions\n    let currentSlide = this.Reveal.getCurrentSlide();\n    if (currentSlide) {\n      let fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n      // Always apply fragment decorator to prev/next buttons\n      if (fragmentsRoutes.prev)\n        this.controlsPrev.forEach((el) => {\n          el.classList.add(\"fragmented\", \"enabled\");\n          el.removeAttribute(\"disabled\");\n        });\n      if (fragmentsRoutes.next)\n        this.controlsNext.forEach((el) => {\n          el.classList.add(\"fragmented\", \"enabled\");\n          el.removeAttribute(\"disabled\");\n        });\n\n      // Apply fragment decorators to directional buttons based on\n      // what slide axis they are in\n      if (this.Reveal.isVerticalSlide(currentSlide)) {\n        if (fragmentsRoutes.prev)\n          this.controlsUp.forEach((el) => {\n            el.classList.add(\"fragmented\", \"enabled\");\n            el.removeAttribute(\"disabled\");\n          });\n        if (fragmentsRoutes.next)\n          this.controlsDown.forEach((el) => {\n            el.classList.add(\"fragmented\", \"enabled\");\n            el.removeAttribute(\"disabled\");\n          });\n      } else {\n        if (fragmentsRoutes.prev)\n          this.controlsLeft.forEach((el) => {\n            el.classList.add(\"fragmented\", \"enabled\");\n            el.removeAttribute(\"disabled\");\n          });\n        if (fragmentsRoutes.next)\n          this.controlsRight.forEach((el) => {\n            el.classList.add(\"fragmented\", \"enabled\");\n            el.removeAttribute(\"disabled\");\n          });\n      }\n    }\n\n    if (this.Reveal.getConfig().controlsTutorial) {\n      let indices = this.Reveal.getIndices();\n\n      // Highlight control arrows with an animation to ensure\n      // that the viewer knows how to navigate\n      if (!this.Reveal.hasNavigatedVertically() && routes.down) {\n        this.controlsDownArrow.classList.add(\"highlight\");\n      } else {\n        this.controlsDownArrow.classList.remove(\"highlight\");\n\n        if (this.Reveal.getConfig().rtl) {\n          if (\n            !this.Reveal.hasNavigatedHorizontally() &&\n            routes.left &&\n            indices.v === 0\n          ) {\n            this.controlsLeftArrow.classList.add(\"highlight\");\n          } else {\n            this.controlsLeftArrow.classList.remove(\"highlight\");\n          }\n        } else {\n          if (\n            !this.Reveal.hasNavigatedHorizontally() &&\n            routes.right &&\n            indices.v === 0\n          ) {\n            this.controlsRightArrow.classList.add(\"highlight\");\n          } else {\n            this.controlsRightArrow.classList.remove(\"highlight\");\n          }\n        }\n      }\n    }\n  }\n\n  destroy() {\n    this.unbind();\n    this.element.remove();\n  }\n\n  /**\n   * Event handlers for navigation control buttons.\n   */\n  onNavigateLeftClicked(event) {\n    event.preventDefault();\n    this.Reveal.onUserInput();\n\n    if (this.Reveal.getConfig().navigationMode === \"linear\") {\n      this.Reveal.prev();\n    } else {\n      this.Reveal.left();\n    }\n  }\n\n  onNavigateRightClicked(event) {\n    event.preventDefault();\n    this.Reveal.onUserInput();\n\n    if (this.Reveal.getConfig().navigationMode === \"linear\") {\n      this.Reveal.next();\n    } else {\n      this.Reveal.right();\n    }\n  }\n\n  onNavigateUpClicked(event) {\n    event.preventDefault();\n    this.Reveal.onUserInput();\n\n    this.Reveal.up();\n  }\n\n  onNavigateDownClicked(event) {\n    event.preventDefault();\n    this.Reveal.onUserInput();\n\n    this.Reveal.down();\n  }\n\n  onNavigatePrevClicked(event) {\n    event.preventDefault();\n    this.Reveal.onUserInput();\n\n    this.Reveal.prev();\n  }\n\n  onNavigateNextClicked(event) {\n    event.preventDefault();\n    this.Reveal.onUserInput();\n\n    this.Reveal.next();\n  }\n}\n","/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n\n    this.onProgressClicked = this.onProgressClicked.bind(this);\n  }\n\n  render() {\n    this.element = document.createElement(\"div\");\n    this.element.className = \"progress\";\n    this.Reveal.getRevealElement().appendChild(this.element);\n\n    this.bar = document.createElement(\"span\");\n    this.element.appendChild(this.bar);\n  }\n\n  /**\n   * Called when the reveal.js config is updated.\n   */\n  configure(config, oldConfig) {\n    this.element.style.display = config.progress ? \"block\" : \"none\";\n  }\n\n  bind() {\n    if (this.Reveal.getConfig().progress && this.element) {\n      this.element.addEventListener(\"click\", this.onProgressClicked, false);\n    }\n  }\n\n  unbind() {\n    if (this.Reveal.getConfig().progress && this.element) {\n      this.element.removeEventListener(\"click\", this.onProgressClicked, false);\n    }\n  }\n\n  /**\n   * Updates the progress bar to reflect the current slide.\n   */\n  update() {\n    // Update progress if enabled\n    if (this.Reveal.getConfig().progress && this.bar) {\n      let scale = this.Reveal.getProgress();\n\n      // Don't fill the progress bar if there's only one slide\n      if (this.Reveal.getTotalSlides() < 2) {\n        scale = 0;\n      }\n\n      this.bar.style.transform = \"scaleX(\" + scale + \")\";\n    }\n  }\n\n  getMaxWidth() {\n    return this.Reveal.getRevealElement().offsetWidth;\n  }\n\n  /**\n   * Clicking on the progress bar results in a navigation to the\n   * closest approximate horizontal slide using this equation:\n   *\n   * ( clickX / presentationWidth ) * numberOfSlides\n   *\n   * @param {object} event\n   */\n  onProgressClicked(event) {\n    this.Reveal.onUserInput(event);\n\n    event.preventDefault();\n\n    let slides = this.Reveal.getSlides();\n    let slidesTotal = slides.length;\n    let slideIndex = Math.floor(\n      (event.clientX / this.getMaxWidth()) * slidesTotal\n    );\n\n    if (this.Reveal.getConfig().rtl) {\n      slideIndex = slidesTotal - slideIndex;\n    }\n\n    let targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n    this.Reveal.slide(targetIndices.h, targetIndices.v);\n  }\n\n  destroy() {\n    this.element.remove();\n  }\n}\n","/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n\n    // Throttles mouse wheel navigation\n    this.lastMouseWheelStep = 0;\n\n    // Is the mouse pointer currently hidden from view\n    this.cursorHidden = false;\n\n    // Timeout used to determine when the cursor is inactive\n    this.cursorInactiveTimeout = 0;\n\n    this.onDocumentCursorActive = this.onDocumentCursorActive.bind(this);\n    this.onDocumentMouseScroll = this.onDocumentMouseScroll.bind(this);\n  }\n\n  /**\n   * Called when the reveal.js config is updated.\n   */\n  configure(config, oldConfig) {\n    if (config.mouseWheel) {\n      document.addEventListener(\n        \"DOMMouseScroll\",\n        this.onDocumentMouseScroll,\n        false\n      ); // FF\n      document.addEventListener(\n        \"mousewheel\",\n        this.onDocumentMouseScroll,\n        false\n      );\n    } else {\n      document.removeEventListener(\n        \"DOMMouseScroll\",\n        this.onDocumentMouseScroll,\n        false\n      ); // FF\n      document.removeEventListener(\n        \"mousewheel\",\n        this.onDocumentMouseScroll,\n        false\n      );\n    }\n\n    // Auto-hide the mouse pointer when its inactive\n    if (config.hideInactiveCursor) {\n      document.addEventListener(\n        \"mousemove\",\n        this.onDocumentCursorActive,\n        false\n      );\n      document.addEventListener(\n        \"mousedown\",\n        this.onDocumentCursorActive,\n        false\n      );\n    } else {\n      this.showCursor();\n\n      document.removeEventListener(\n        \"mousemove\",\n        this.onDocumentCursorActive,\n        false\n      );\n      document.removeEventListener(\n        \"mousedown\",\n        this.onDocumentCursorActive,\n        false\n      );\n    }\n  }\n\n  /**\n   * Shows the mouse pointer after it has been hidden with\n   * #hideCursor.\n   */\n  showCursor() {\n    if (this.cursorHidden) {\n      this.cursorHidden = false;\n      this.Reveal.getRevealElement().style.cursor = \"\";\n    }\n  }\n\n  /**\n   * Hides the mouse pointer when it's on top of the .reveal\n   * container.\n   */\n  hideCursor() {\n    if (this.cursorHidden === false) {\n      this.cursorHidden = true;\n      this.Reveal.getRevealElement().style.cursor = \"none\";\n    }\n  }\n\n  destroy() {\n    this.showCursor();\n\n    document.removeEventListener(\n      \"DOMMouseScroll\",\n      this.onDocumentMouseScroll,\n      false\n    );\n    document.removeEventListener(\n      \"mousewheel\",\n      this.onDocumentMouseScroll,\n      false\n    );\n    document.removeEventListener(\n      \"mousemove\",\n      this.onDocumentCursorActive,\n      false\n    );\n    document.removeEventListener(\n      \"mousedown\",\n      this.onDocumentCursorActive,\n      false\n    );\n  }\n\n  /**\n   * Called whenever there is mouse input at the document level\n   * to determine if the cursor is active or not.\n   *\n   * @param {object} event\n   */\n  onDocumentCursorActive(event) {\n    this.showCursor();\n\n    clearTimeout(this.cursorInactiveTimeout);\n\n    this.cursorInactiveTimeout = setTimeout(\n      this.hideCursor.bind(this),\n      this.Reveal.getConfig().hideCursorTime\n    );\n  }\n\n  /**\n   * Handles mouse wheel scrolling, throttled to avoid skipping\n   * multiple slides.\n   *\n   * @param {object} event\n   */\n  onDocumentMouseScroll(event) {\n    if (Date.now() - this.lastMouseWheelStep > 1000) {\n      this.lastMouseWheelStep = Date.now();\n\n      let delta = event.detail || -event.wheelDelta;\n      if (delta > 0) {\n        this.Reveal.next();\n      } else if (delta < 0) {\n        this.Reveal.prev();\n      }\n    }\n  }\n}\n","/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = (url, callback) => {\n  const script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n  script.async = false;\n  script.defer = false;\n  script.src = url;\n\n  if (typeof callback === \"function\") {\n    // Success callback\n    script.onload = script.onreadystatechange = (event) => {\n      if (event.type === \"load\" || /loaded|complete/.test(script.readyState)) {\n        // Kill event listeners\n        script.onload = script.onreadystatechange = script.onerror = null;\n\n        callback();\n      }\n    };\n\n    // Error callback\n    script.onerror = (err) => {\n      // Kill event listeners\n      script.onload = script.onreadystatechange = script.onerror = null;\n\n      callback(new Error(\"Failed loading script: \" + script.src + \"\\n\" + err));\n    };\n  }\n\n  // Append the script at the end of <head>\n  const head = document.querySelector(\"head\");\n  head.insertBefore(script, head.lastChild);\n};\n","import { loadScript } from \"../utils/loader.js\";\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n  constructor(reveal) {\n    this.Reveal = reveal;\n\n    // Flags our current state (idle -> loading -> loaded)\n    this.state = \"idle\";\n\n    // An id:instance map of currently registed plugins\n    this.registeredPlugins = {};\n\n    this.asyncDependencies = [];\n  }\n\n  /**\n   * Loads reveal.js dependencies, registers and\n   * initializes plugins.\n   *\n   * Plugins are direct references to a reveal.js plugin\n   * object that we register and initialize after any\n   * synchronous dependencies have loaded.\n   *\n   * Dependencies are defined via the 'dependencies' config\n   * option and will be loaded prior to starting reveal.js.\n   * Some dependencies may have an 'async' flag, if so they\n   * will load after reveal.js has been started up.\n   */\n  load(plugins, dependencies) {\n    this.state = \"loading\";\n\n    plugins.forEach(this.registerPlugin.bind(this));\n\n    return new Promise((resolve) => {\n      let scripts = [],\n        scriptsToLoad = 0;\n\n      dependencies.forEach((s) => {\n        // Load if there's no condition or the condition is truthy\n        if (!s.condition || s.condition()) {\n          if (s.async) {\n            this.asyncDependencies.push(s);\n          } else {\n            scripts.push(s);\n          }\n        }\n      });\n\n      if (scripts.length) {\n        scriptsToLoad = scripts.length;\n\n        const scriptLoadedCallback = (s) => {\n          if (s && typeof s.callback === \"function\") s.callback();\n\n          if (--scriptsToLoad === 0) {\n            this.initPlugins().then(resolve);\n          }\n        };\n\n        // Load synchronous scripts\n        scripts.forEach((s) => {\n          if (typeof s.id === \"string\") {\n            this.registerPlugin(s);\n            scriptLoadedCallback(s);\n          } else if (typeof s.src === \"string\") {\n            loadScript(s.src, () => scriptLoadedCallback(s));\n          } else {\n            console.warn(\"Unrecognized plugin format\", s);\n            scriptLoadedCallback();\n          }\n        });\n      } else {\n        this.initPlugins().then(resolve);\n      }\n    });\n  }\n\n  /**\n   * Initializes our plugins and waits for them to be ready\n   * before proceeding.\n   */\n  initPlugins() {\n    return new Promise((resolve) => {\n      let pluginValues = Object.values(this.registeredPlugins);\n      let pluginsToInitialize = pluginValues.length;\n\n      // If there are no plugins, skip this step\n      if (pluginsToInitialize === 0) {\n        this.loadAsync().then(resolve);\n      }\n      // ... otherwise initialize plugins\n      else {\n        let initNextPlugin;\n\n        let afterPlugInitialized = () => {\n          if (--pluginsToInitialize === 0) {\n            this.loadAsync().then(resolve);\n          } else {\n            initNextPlugin();\n          }\n        };\n\n        let i = 0;\n\n        // Initialize plugins serially\n        initNextPlugin = () => {\n          let plugin = pluginValues[i++];\n\n          // If the plugin has an 'init' method, invoke it\n          if (typeof plugin.init === \"function\") {\n            let promise = plugin.init(this.Reveal);\n\n            // If the plugin returned a Promise, wait for it\n            if (promise && typeof promise.then === \"function\") {\n              promise.then(afterPlugInitialized);\n            } else {\n              afterPlugInitialized();\n            }\n          } else {\n            afterPlugInitialized();\n          }\n        };\n\n        initNextPlugin();\n      }\n    });\n  }\n\n  /**\n   * Loads all async reveal.js dependencies.\n   */\n  loadAsync() {\n    this.state = \"loaded\";\n\n    if (this.asyncDependencies.length) {\n      this.asyncDependencies.forEach((s) => {\n        loadScript(s.src, s.callback);\n      });\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Registers a new plugin with this reveal.js instance.\n   *\n   * reveal.js waits for all regisered plugins to initialize\n   * before considering itself ready, as long as the plugin\n   * is registered before calling `Reveal.initialize()`.\n   */\n  registerPlugin(plugin) {\n    // Backwards compatibility to make reveal.js ~3.9.0\n    // plugins work with reveal.js 4.0.0\n    if (arguments.length === 2 && typeof arguments[0] === \"string\") {\n      plugin = arguments[1];\n      plugin.id = arguments[0];\n    }\n    // Plugin can optionally be a function which we call\n    // to create an instance of the plugin\n    else if (typeof plugin === \"function\") {\n      plugin = plugin();\n    }\n\n    let id = plugin.id;\n\n    if (typeof id !== \"string\") {\n      console.warn(\"Unrecognized plugin format; can't find plugin.id\", plugin);\n    } else if (this.registeredPlugins[id] === undefined) {\n      this.registeredPlugins[id] = plugin;\n\n      // If a plugin is registered after reveal.js is loaded,\n      // initialize it right away\n      if (this.state === \"loaded\" && typeof plugin.init === \"function\") {\n        plugin.init(this.Reveal);\n      }\n    } else {\n      console.warn(\n        'reveal.js: \"' + id + '\" plugin has already been registered'\n      );\n    }\n  }\n\n  /**\n   * Checks if a specific plugin has been registered.\n   *\n   * @param {String} id Unique plugin identifier\n   */\n  hasPlugin(id) {\n    return !!this.registeredPlugins[id];\n  }\n\n  /**\n   * Returns the specific plugin instance, if a plugin\n   * with the given ID has been registered.\n   *\n   * @param {String} id Unique plugin identifier\n   */\n  getPlugin(id) {\n    return this.registeredPlugins[id];\n  }\n\n  getRegisteredPlugins() {\n    return this.registeredPlugins;\n  }\n\n  destroy() {\n    Object.values(this.registeredPlugins).forEach((plugin) => {\n      if (typeof plugin.destroy === \"function\") {\n        plugin.destroy();\n      }\n    });\n\n    this.registeredPlugins = {};\n    this.asyncDependencies = [];\n  }\n}\n","import { SLIDES_SELECTOR } from \"../utils/constants.js\";\nimport { queryAll, createStyleSheet } from \"../utils/util.js\";\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class Print {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n  }\n\n  /**\n   * Configures the presentation for printing to a static\n   * PDF.\n   */\n  async setupPDF() {\n    const config = this.Reveal.getConfig();\n    const slides = queryAll(this.Reveal.getRevealElement(), SLIDES_SELECTOR);\n\n    // Compute slide numbers now, before we start duplicating slides\n    const injectPageNumbers =\n      config.slideNumber && /all|print/i.test(config.showSlideNumber);\n\n    const slideSize = this.Reveal.getComputedSlideSize(\n      window.innerWidth,\n      window.innerHeight\n    );\n\n    // Dimensions of the PDF pages\n    const pageWidth = Math.floor(slideSize.width * (1 + config.margin)),\n      pageHeight = Math.floor(slideSize.height * (1 + config.margin));\n\n    // Dimensions of slides within the pages\n    const slideWidth = slideSize.width,\n      slideHeight = slideSize.height;\n\n    await new Promise(requestAnimationFrame);\n\n    // Let the browser know what page size we want to print\n    createStyleSheet(\n      \"@page{size:\" + pageWidth + \"px \" + pageHeight + \"px; margin: 0px;}\"\n    );\n\n    // Limit the size of certain elements to the dimensions of the slide\n    createStyleSheet(\n      \".reveal section>img, .reveal section>video, .reveal section>iframe{max-width: \" +\n        slideWidth +\n        \"px; max-height:\" +\n        slideHeight +\n        \"px}\"\n    );\n\n    document.documentElement.classList.add(\"print-pdf\");\n    document.body.style.width = pageWidth + \"px\";\n    document.body.style.height = pageHeight + \"px\";\n\n    const viewportElement = document.querySelector(\".reveal-viewport\");\n    let presentationBackground;\n    if (viewportElement) {\n      const viewportStyles = window.getComputedStyle(viewportElement);\n      if (viewportStyles && viewportStyles.background) {\n        presentationBackground = viewportStyles.background;\n      }\n    }\n\n    // Make sure stretch elements fit on slide\n    await new Promise(requestAnimationFrame);\n    this.Reveal.layoutSlideContents(slideWidth, slideHeight);\n\n    // Batch scrollHeight access to prevent layout thrashing\n    await new Promise(requestAnimationFrame);\n\n    const slideScrollHeights = slides.map((slide) => slide.scrollHeight);\n\n    const pages = [];\n    const pageContainer = slides[0].parentNode;\n    let slideNumber = 1;\n\n    // Slide and slide background layout\n    slides.forEach(function (slide, index) {\n      // Vertical stacks are not centred since their section\n      // children will be\n      if (slide.classList.contains(\"stack\") === false) {\n        // Center the slide inside of the page, giving the slide some margin\n        let left = (pageWidth - slideWidth) / 2;\n        let top = (pageHeight - slideHeight) / 2;\n\n        const contentHeight = slideScrollHeights[index];\n        let numberOfPages = Math.max(Math.ceil(contentHeight / pageHeight), 1);\n\n        // Adhere to configured pages per slide limit\n        numberOfPages = Math.min(numberOfPages, config.pdfMaxPagesPerSlide);\n\n        // Center slides vertically\n        if (\n          (numberOfPages === 1 && config.center) ||\n          slide.classList.contains(\"center\")\n        ) {\n          top = Math.max((pageHeight - contentHeight) / 2, 0);\n        }\n\n        // Wrap the slide in a page element and hide its overflow\n        // so that no page ever flows onto another\n        const page = document.createElement(\"div\");\n        pages.push(page);\n\n        page.className = \"pdf-page\";\n        page.style.height =\n          (pageHeight + config.pdfPageHeightOffset) * numberOfPages + \"px\";\n\n        // Copy the presentation-wide background to each individual\n        // page when printing\n        if (presentationBackground) {\n          page.style.background = presentationBackground;\n        }\n\n        page.appendChild(slide);\n\n        // Position the slide inside of the page\n        slide.style.left = left + \"px\";\n        slide.style.top = top + \"px\";\n        slide.style.width = slideWidth + \"px\";\n\n        this.Reveal.slideContent.layout(slide);\n\n        if (slide.slideBackgroundElement) {\n          page.insertBefore(slide.slideBackgroundElement, slide);\n        }\n\n        // Inject notes if `showNotes` is enabled\n        if (config.showNotes) {\n          // Are there notes for this slide?\n          const notes = this.Reveal.getSlideNotes(slide);\n          if (notes) {\n            const notesSpacing = 8;\n            const notesLayout =\n              typeof config.showNotes === \"string\"\n                ? config.showNotes\n                : \"inline\";\n            const notesElement = document.createElement(\"div\");\n            notesElement.classList.add(\"speaker-notes\");\n            notesElement.classList.add(\"speaker-notes-pdf\");\n            notesElement.setAttribute(\"data-layout\", notesLayout);\n            notesElement.innerHTML = notes;\n\n            if (notesLayout === \"separate-page\") {\n              pages.push(notesElement);\n            } else {\n              notesElement.style.left = notesSpacing + \"px\";\n              notesElement.style.bottom = notesSpacing + \"px\";\n              notesElement.style.width = pageWidth - notesSpacing * 2 + \"px\";\n              page.appendChild(notesElement);\n            }\n          }\n        }\n\n        // Inject page numbers if `slideNumbers` are enabled\n        if (injectPageNumbers) {\n          const numberElement = document.createElement(\"div\");\n          numberElement.classList.add(\"slide-number\");\n          numberElement.classList.add(\"slide-number-pdf\");\n          numberElement.innerHTML = slideNumber++;\n          page.appendChild(numberElement);\n        }\n\n        // Copy page and show fragments one after another\n        if (config.pdfSeparateFragments) {\n          // Each fragment 'group' is an array containing one or more\n          // fragments. Multiple fragments that appear at the same time\n          // are part of the same group.\n          const fragmentGroups = this.Reveal.fragments.sort(\n            page.querySelectorAll(\".fragment\"),\n            true\n          );\n\n          let previousFragmentStep;\n\n          fragmentGroups.forEach(function (fragments, index) {\n            // Remove 'current-fragment' from the previous group\n            if (previousFragmentStep) {\n              previousFragmentStep.forEach(function (fragment) {\n                fragment.classList.remove(\"current-fragment\");\n              });\n            }\n\n            // Show the fragments for the current index\n            fragments.forEach(function (fragment) {\n              fragment.classList.add(\"visible\", \"current-fragment\");\n            }, this);\n\n            // Create a separate page for the current fragment state\n            const clonedPage = page.cloneNode(true);\n\n            // Inject unique page numbers for fragments\n            if (injectPageNumbers) {\n              const numberElement =\n                clonedPage.querySelector(\".slide-number-pdf\");\n              const fragmentNumber = index + 1;\n              numberElement.innerHTML += \".\" + fragmentNumber;\n            }\n\n            pages.push(clonedPage);\n\n            previousFragmentStep = fragments;\n          }, this);\n\n          // Reset the first/original page so that all fragments are hidden\n          fragmentGroups.forEach(function (fragments) {\n            fragments.forEach(function (fragment) {\n              fragment.classList.remove(\"visible\", \"current-fragment\");\n            });\n          });\n        }\n        // Show all fragments\n        else {\n          queryAll(page, \".fragment:not(.fade-out)\").forEach(function (\n            fragment\n          ) {\n            fragment.classList.add(\"visible\");\n          });\n        }\n      }\n    }, this);\n\n    await new Promise(requestAnimationFrame);\n\n    pages.forEach((page) => pageContainer.appendChild(page));\n\n    // Re-run JS-based content layout after the slide is added to page DOM\n    this.Reveal.slideContent.layout(this.Reveal.getSlidesElement());\n\n    // Notify subscribers that the PDF layout is good to go\n    this.Reveal.dispatchEvent({ type: \"pdf-ready\" });\n  }\n\n  /**\n   * Checks if this instance is being used to print a PDF.\n   */\n  isPrintingPDF() {\n    return /print-pdf/gi.test(window.location.search);\n  }\n}\n","import { isAndroid } from \"../utils/device.js\";\nimport { matches } from \"../utils/util.js\";\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n\n    // Holds information about the currently ongoing touch interaction\n    this.touchStartX = 0;\n    this.touchStartY = 0;\n    this.touchStartCount = 0;\n    this.touchCaptured = false;\n\n    this.onPointerDown = this.onPointerDown.bind(this);\n    this.onPointerMove = this.onPointerMove.bind(this);\n    this.onPointerUp = this.onPointerUp.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onTouchMove = this.onTouchMove.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n  }\n\n  /**\n   *\n   */\n  bind() {\n    let revealElement = this.Reveal.getRevealElement();\n\n    if (\"onpointerdown\" in window) {\n      // Use W3C pointer events\n      revealElement.addEventListener(\"pointerdown\", this.onPointerDown, false);\n      revealElement.addEventListener(\"pointermove\", this.onPointerMove, false);\n      revealElement.addEventListener(\"pointerup\", this.onPointerUp, false);\n    } else if (window.navigator.msPointerEnabled) {\n      // IE 10 uses prefixed version of pointer events\n      revealElement.addEventListener(\n        \"MSPointerDown\",\n        this.onPointerDown,\n        false\n      );\n      revealElement.addEventListener(\n        \"MSPointerMove\",\n        this.onPointerMove,\n        false\n      );\n      revealElement.addEventListener(\"MSPointerUp\", this.onPointerUp, false);\n    } else {\n      // Fall back to touch events\n      revealElement.addEventListener(\"touchstart\", this.onTouchStart, false);\n      revealElement.addEventListener(\"touchmove\", this.onTouchMove, false);\n      revealElement.addEventListener(\"touchend\", this.onTouchEnd, false);\n    }\n  }\n\n  /**\n   *\n   */\n  unbind() {\n    let revealElement = this.Reveal.getRevealElement();\n\n    revealElement.removeEventListener(\"pointerdown\", this.onPointerDown, false);\n    revealElement.removeEventListener(\"pointermove\", this.onPointerMove, false);\n    revealElement.removeEventListener(\"pointerup\", this.onPointerUp, false);\n\n    revealElement.removeEventListener(\n      \"MSPointerDown\",\n      this.onPointerDown,\n      false\n    );\n    revealElement.removeEventListener(\n      \"MSPointerMove\",\n      this.onPointerMove,\n      false\n    );\n    revealElement.removeEventListener(\"MSPointerUp\", this.onPointerUp, false);\n\n    revealElement.removeEventListener(\"touchstart\", this.onTouchStart, false);\n    revealElement.removeEventListener(\"touchmove\", this.onTouchMove, false);\n    revealElement.removeEventListener(\"touchend\", this.onTouchEnd, false);\n  }\n\n  /**\n   * Checks if the target element prevents the triggering of\n   * swipe navigation.\n   */\n  isSwipePrevented(target) {\n    // Prevent accidental swipes when scrubbing timelines\n    if (matches(target, \"video, audio\")) return true;\n\n    while (target && typeof target.hasAttribute === \"function\") {\n      if (target.hasAttribute(\"data-prevent-swipe\")) return true;\n      target = target.parentNode;\n    }\n\n    return false;\n  }\n\n  /**\n   * Handler for the 'touchstart' event, enables support for\n   * swipe and pinch gestures.\n   *\n   * @param {object} event\n   */\n  onTouchStart(event) {\n    if (this.isSwipePrevented(event.target)) return true;\n\n    this.touchStartX = event.touches[0].clientX;\n    this.touchStartY = event.touches[0].clientY;\n    this.touchStartCount = event.touches.length;\n  }\n\n  /**\n   * Handler for the 'touchmove' event.\n   *\n   * @param {object} event\n   */\n  onTouchMove(event) {\n    if (this.isSwipePrevented(event.target)) return true;\n\n    let config = this.Reveal.getConfig();\n\n    // Each touch should only trigger one action\n    if (!this.touchCaptured) {\n      this.Reveal.onUserInput(event);\n\n      let currentX = event.touches[0].clientX;\n      let currentY = event.touches[0].clientY;\n\n      // There was only one touch point, look for a swipe\n      if (event.touches.length === 1 && this.touchStartCount !== 2) {\n        let availableRoutes = this.Reveal.availableRoutes({\n          includeFragments: true,\n        });\n\n        let deltaX = currentX - this.touchStartX,\n          deltaY = currentY - this.touchStartY;\n\n        if (deltaX > SWIPE_THRESHOLD && Math.abs(deltaX) > Math.abs(deltaY)) {\n          this.touchCaptured = true;\n          if (config.navigationMode === \"linear\") {\n            if (config.rtl) {\n              this.Reveal.next();\n            } else {\n              this.Reveal.prev();\n            }\n          } else {\n            this.Reveal.left();\n          }\n        } else if (\n          deltaX < -SWIPE_THRESHOLD &&\n          Math.abs(deltaX) > Math.abs(deltaY)\n        ) {\n          this.touchCaptured = true;\n          if (config.navigationMode === \"linear\") {\n            if (config.rtl) {\n              this.Reveal.prev();\n            } else {\n              this.Reveal.next();\n            }\n          } else {\n            this.Reveal.right();\n          }\n        } else if (deltaY > SWIPE_THRESHOLD && availableRoutes.up) {\n          this.touchCaptured = true;\n          if (config.navigationMode === \"linear\") {\n            this.Reveal.prev();\n          } else {\n            this.Reveal.up();\n          }\n        } else if (deltaY < -SWIPE_THRESHOLD && availableRoutes.down) {\n          this.touchCaptured = true;\n          if (config.navigationMode === \"linear\") {\n            this.Reveal.next();\n          } else {\n            this.Reveal.down();\n          }\n        }\n\n        // If we're embedded, only block touch events if they have\n        // triggered an action\n        if (config.embedded) {\n          if (this.touchCaptured || this.Reveal.isVerticalSlide()) {\n            event.preventDefault();\n          }\n        }\n        // Not embedded? Block them all to avoid needless tossing\n        // around of the viewport in iOS\n        else {\n          event.preventDefault();\n        }\n      }\n    }\n    // There's a bug with swiping on some Android devices unless\n    // the default action is always prevented\n    else if (isAndroid) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Handler for the 'touchend' event.\n   *\n   * @param {object} event\n   */\n  onTouchEnd(event) {\n    this.touchCaptured = false;\n  }\n\n  /**\n   * Convert pointer down to touch start.\n   *\n   * @param {object} event\n   */\n  onPointerDown(event) {\n    if (\n      event.pointerType === event.MSPOINTER_TYPE_TOUCH ||\n      event.pointerType === \"touch\"\n    ) {\n      event.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n      this.onTouchStart(event);\n    }\n  }\n\n  /**\n   * Convert pointer move to touch move.\n   *\n   * @param {object} event\n   */\n  onPointerMove(event) {\n    if (\n      event.pointerType === event.MSPOINTER_TYPE_TOUCH ||\n      event.pointerType === \"touch\"\n    ) {\n      event.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n      this.onTouchMove(event);\n    }\n  }\n\n  /**\n   * Convert pointer up to touch end.\n   *\n   * @param {object} event\n   */\n  onPointerUp(event) {\n    if (\n      event.pointerType === event.MSPOINTER_TYPE_TOUCH ||\n      event.pointerType === \"touch\"\n    ) {\n      event.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n      this.onTouchEnd(event);\n    }\n  }\n}\n","import { closest } from \"../utils/util.js\";\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = \"focus\";\nconst STATE_BLUR = \"blur\";\n\nexport default class Focus {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n\n    this.onRevealPointerDown = this.onRevealPointerDown.bind(this);\n    this.onDocumentPointerDown = this.onDocumentPointerDown.bind(this);\n  }\n\n  /**\n   * Called when the reveal.js config is updated.\n   */\n  configure(config, oldConfig) {\n    if (config.embedded) {\n      this.blur();\n    } else {\n      this.focus();\n      this.unbind();\n    }\n  }\n\n  bind() {\n    if (this.Reveal.getConfig().embedded) {\n      this.Reveal.getRevealElement().addEventListener(\n        \"pointerdown\",\n        this.onRevealPointerDown,\n        false\n      );\n    }\n  }\n\n  unbind() {\n    this.Reveal.getRevealElement().removeEventListener(\n      \"pointerdown\",\n      this.onRevealPointerDown,\n      false\n    );\n    document.removeEventListener(\n      \"pointerdown\",\n      this.onDocumentPointerDown,\n      false\n    );\n  }\n\n  focus() {\n    if (this.state !== STATE_FOCUS) {\n      this.Reveal.getRevealElement().classList.add(\"focused\");\n      document.addEventListener(\n        \"pointerdown\",\n        this.onDocumentPointerDown,\n        false\n      );\n    }\n\n    this.state = STATE_FOCUS;\n  }\n\n  blur() {\n    if (this.state !== STATE_BLUR) {\n      this.Reveal.getRevealElement().classList.remove(\"focused\");\n      document.removeEventListener(\n        \"pointerdown\",\n        this.onDocumentPointerDown,\n        false\n      );\n    }\n\n    this.state = STATE_BLUR;\n  }\n\n  isFocused() {\n    return this.state === STATE_FOCUS;\n  }\n\n  destroy() {\n    this.Reveal.getRevealElement().classList.remove(\"focused\");\n  }\n\n  onRevealPointerDown(event) {\n    this.focus();\n  }\n\n  onDocumentPointerDown(event) {\n    let revealElement = closest(event.target, \".reveal\");\n    if (!revealElement || revealElement !== this.Reveal.getRevealElement()) {\n      this.blur();\n    }\n  }\n}\n","/**\n * Handles the showing of speaker notes\n */\nexport default class Notes {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n  }\n\n  render() {\n    this.element = document.createElement(\"div\");\n    this.element.className = \"speaker-notes\";\n    this.element.setAttribute(\"data-prevent-swipe\", \"\");\n    this.element.setAttribute(\"tabindex\", \"0\");\n    this.Reveal.getRevealElement().appendChild(this.element);\n  }\n\n  /**\n   * Called when the reveal.js config is updated.\n   */\n  configure(config, oldConfig) {\n    if (config.showNotes) {\n      this.element.setAttribute(\n        \"data-layout\",\n        typeof config.showNotes === \"string\" ? config.showNotes : \"inline\"\n      );\n    }\n  }\n\n  /**\n   * Pick up notes from the current slide and display them\n   * to the viewer.\n   *\n   * @see {@link config.showNotes}\n   */\n  update() {\n    if (\n      this.Reveal.getConfig().showNotes &&\n      this.element &&\n      this.Reveal.getCurrentSlide() &&\n      !this.Reveal.print.isPrintingPDF()\n    ) {\n      this.element.innerHTML =\n        this.getSlideNotes() ||\n        '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n    }\n  }\n\n  /**\n   * Updates the visibility of the speaker notes sidebar that\n   * is used to share annotated slides. The notes sidebar is\n   * only visible if showNotes is true and there are notes on\n   * one or more slides in the deck.\n   */\n  updateVisibility() {\n    if (\n      this.Reveal.getConfig().showNotes &&\n      this.hasNotes() &&\n      !this.Reveal.print.isPrintingPDF()\n    ) {\n      this.Reveal.getRevealElement().classList.add(\"show-notes\");\n    } else {\n      this.Reveal.getRevealElement().classList.remove(\"show-notes\");\n    }\n  }\n\n  /**\n   * Checks if there are speaker notes for ANY slide in the\n   * presentation.\n   */\n  hasNotes() {\n    return (\n      this.Reveal.getSlidesElement().querySelectorAll(\n        \"[data-notes], aside.notes\"\n      ).length > 0\n    );\n  }\n\n  /**\n   * Checks if this presentation is running inside of the\n   * speaker notes window.\n   *\n   * @return {boolean}\n   */\n  isSpeakerNotesWindow() {\n    return !!window.location.search.match(/receiver/gi);\n  }\n\n  /**\n   * Retrieves the speaker notes from a slide. Notes can be\n   * defined in two ways:\n   * 1. As a data-notes attribute on the slide <section>\n   * 2. With <aside class=\"notes\"> elements inside the slide\n   *\n   * @param {HTMLElement} [slide=currentSlide]\n   * @return {(string|null)}\n   */\n  getSlideNotes(slide = this.Reveal.getCurrentSlide()) {\n    // Notes can be specified via the data-notes attribute...\n    if (slide.hasAttribute(\"data-notes\")) {\n      return slide.getAttribute(\"data-notes\");\n    }\n\n    // ... or using <aside class=\"notes\"> elements\n    let notesElements = slide.querySelectorAll(\"aside.notes\");\n    if (notesElements) {\n      return Array.from(notesElements)\n        .map((notesElement) => notesElement.innerHTML)\n        .join(\"\\n\");\n    }\n\n    return null;\n  }\n\n  destroy() {\n    this.element.remove();\n  }\n}\n","/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n  /**\n   * @param {HTMLElement} container The component will append\n   * itself to this\n   * @param {function} progressCheck A method which will be\n   * called frequently to get the current playback progress on\n   * a range of 0-1\n   */\n  constructor(container, progressCheck) {\n    // Cosmetics\n    this.diameter = 100;\n    this.diameter2 = this.diameter / 2;\n    this.thickness = 6;\n\n    // Flags if we are currently playing\n    this.playing = false;\n\n    // Current progress on a 0-1 range\n    this.progress = 0;\n\n    // Used to loop the animation smoothly\n    this.progressOffset = 1;\n\n    this.container = container;\n    this.progressCheck = progressCheck;\n\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.className = \"playback\";\n    this.canvas.width = this.diameter;\n    this.canvas.height = this.diameter;\n    this.canvas.style.width = this.diameter2 + \"px\";\n    this.canvas.style.height = this.diameter2 + \"px\";\n    this.context = this.canvas.getContext(\"2d\");\n\n    this.container.appendChild(this.canvas);\n\n    this.render();\n  }\n\n  setPlaying(value) {\n    const wasPlaying = this.playing;\n\n    this.playing = value;\n\n    // Start repainting if we weren't already\n    if (!wasPlaying && this.playing) {\n      this.animate();\n    } else {\n      this.render();\n    }\n  }\n\n  animate() {\n    const progressBefore = this.progress;\n\n    this.progress = this.progressCheck();\n\n    // When we loop, offset the progress so that it eases\n    // smoothly rather than immediately resetting\n    if (progressBefore > 0.8 && this.progress < 0.2) {\n      this.progressOffset = this.progress;\n    }\n\n    this.render();\n\n    if (this.playing) {\n      requestAnimationFrame(this.animate.bind(this));\n    }\n  }\n\n  /**\n   * Renders the current progress and playback state.\n   */\n  render() {\n    let progress = this.playing ? this.progress : 0,\n      radius = this.diameter2 - this.thickness,\n      x = this.diameter2,\n      y = this.diameter2,\n      iconSize = 28;\n\n    // Ease towards 1\n    this.progressOffset += (1 - this.progressOffset) * 0.1;\n\n    const endAngle = -Math.PI / 2 + progress * (Math.PI * 2);\n    const startAngle = -Math.PI / 2 + this.progressOffset * (Math.PI * 2);\n\n    this.context.save();\n    this.context.clearRect(0, 0, this.diameter, this.diameter);\n\n    // Solid background color\n    this.context.beginPath();\n    this.context.arc(x, y, radius + 4, 0, Math.PI * 2, false);\n    this.context.fillStyle = \"rgba( 0, 0, 0, 0.4 )\";\n    this.context.fill();\n\n    // Draw progress track\n    this.context.beginPath();\n    this.context.arc(x, y, radius, 0, Math.PI * 2, false);\n    this.context.lineWidth = this.thickness;\n    this.context.strokeStyle = \"rgba( 255, 255, 255, 0.2 )\";\n    this.context.stroke();\n\n    if (this.playing) {\n      // Draw progress on top of track\n      this.context.beginPath();\n      this.context.arc(x, y, radius, startAngle, endAngle, false);\n      this.context.lineWidth = this.thickness;\n      this.context.strokeStyle = \"#fff\";\n      this.context.stroke();\n    }\n\n    this.context.translate(x - iconSize / 2, y - iconSize / 2);\n\n    // Draw play/pause icons\n    if (this.playing) {\n      this.context.fillStyle = \"#fff\";\n      this.context.fillRect(0, 0, iconSize / 2 - 4, iconSize);\n      this.context.fillRect(iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize);\n    } else {\n      this.context.beginPath();\n      this.context.translate(4, 0);\n      this.context.moveTo(0, 0);\n      this.context.lineTo(iconSize - 4, iconSize / 2);\n      this.context.lineTo(0, iconSize);\n      this.context.fillStyle = \"#fff\";\n      this.context.fill();\n    }\n\n    this.context.restore();\n  }\n\n  on(type, listener) {\n    this.canvas.addEventListener(type, listener, false);\n  }\n\n  off(type, listener) {\n    this.canvas.removeEventListener(type, listener, false);\n  }\n\n  destroy() {\n    this.playing = false;\n\n    if (this.canvas.parentNode) {\n      this.container.removeChild(this.canvas);\n    }\n  }\n}\n","/**\n * The default reveal.js config object.\n */\nexport default {\n  // The \"normal\" size of the presentation, aspect ratio will be preserved\n  // when the presentation is scaled to fit different resolutions\n  width: 960,\n  height: 700,\n\n  // Factor of the display size that should remain empty around the content\n  margin: 0.04,\n\n  // Bounds for smallest/largest possible scale to apply to content\n  minScale: 0.2,\n  maxScale: 2.0,\n\n  // Display presentation control arrows\n  controls: true,\n\n  // Help the user learn the controls by providing hints, for example by\n  // bouncing the down arrow when they first encounter a vertical slide\n  controlsTutorial: true,\n\n  // Determines where controls appear, \"edges\" or \"bottom-right\"\n  controlsLayout: \"bottom-right\",\n\n  // Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n  // or \"visible\"\n  controlsBackArrows: \"faded\",\n\n  // Display a presentation progress bar\n  progress: true,\n\n  // Display the page number of the current slide\n  // - true:    Show slide number\n  // - false:   Hide slide number\n  //\n  // Can optionally be set as a string that specifies the number formatting:\n  // - \"h.v\":\t  Horizontal . vertical slide number (default)\n  // - \"h/v\":\t  Horizontal / vertical slide number\n  // - \"c\":\t  Flattened slide number\n  // - \"c/t\":\t  Flattened slide number / total slides\n  //\n  // Alternatively, you can provide a function that returns the slide\n  // number for the current slide. The function should take in a slide\n  // object and return an array with one string [slideNumber] or\n  // three strings [n1,delimiter,n2]. See #formatSlideNumber().\n  slideNumber: false,\n\n  // Can be used to limit the contexts in which the slide number appears\n  // - \"all\":      Always show the slide number\n  // - \"print\":    Only when printing to PDF\n  // - \"speaker\":  Only in the speaker view\n  showSlideNumber: \"all\",\n\n  // Use 1 based indexing for # links to match slide number (default is zero\n  // based)\n  hashOneBasedIndex: false,\n\n  // Add the current slide number to the URL hash so that reloading the\n  // page/copying the URL will return you to the same slide\n  hash: false,\n\n  // Flags if we should monitor the hash and change slides accordingly\n  respondToHashChanges: true,\n\n  // Push each slide change to the browser history.  Implies `hash: true`\n  history: false,\n\n  // Enable keyboard shortcuts for navigation\n  keyboard: true,\n\n  // Optional function that blocks keyboard events when retuning false\n  //\n  // If you set this to 'focused', we will only capture keyboard events\n  // for embedded decks when they are in focus\n  keyboardCondition: null,\n\n  // Disables the default reveal.js slide layout (scaling and centering)\n  // so that you can use custom CSS layout\n  disableLayout: false,\n\n  // Enable the slide overview mode\n  overview: true,\n\n  // Vertical centering of slides\n  center: true,\n\n  // Enables touch navigation on devices with touch input\n  touch: true,\n\n  // Loop the presentation\n  loop: false,\n\n  // Change the presentation direction to be RTL\n  rtl: false,\n\n  // Changes the behavior of our navigation directions.\n  //\n  // \"default\"\n  // Left/right arrow keys step between horizontal slides, up/down\n  // arrow keys step between vertical slides. Space key steps through\n  // all slides (both horizontal and vertical).\n  //\n  // \"linear\"\n  // Removes the up/down arrows. Left/right arrows step through all\n  // slides (both horizontal and vertical).\n  //\n  // \"grid\"\n  // When this is enabled, stepping left/right from a vertical stack\n  // to an adjacent vertical stack will land you at the same vertical\n  // index.\n  //\n  // Consider a deck with six slides ordered in two vertical stacks:\n  // 1.1    2.1\n  // 1.2    2.2\n  // 1.3    2.3\n  //\n  // If you're on slide 1.3 and navigate right, you will normally move\n  // from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n  // from 1.3 -> 2.3.\n  navigationMode: \"default\",\n\n  // Randomizes the order of slides each time the presentation loads\n  shuffle: false,\n\n  // Turns fragments on and off globally\n  fragments: true,\n\n  // Flags whether to include the current fragment in the URL,\n  // so that reloading brings you to the same fragment position\n  fragmentInURL: true,\n\n  // Flags if the presentation is running in an embedded mode,\n  // i.e. contained within a limited portion of the screen\n  embedded: false,\n\n  // Flags if we should show a help overlay when the question-mark\n  // key is pressed\n  help: true,\n\n  // Flags if it should be possible to pause the presentation (blackout)\n  pause: true,\n\n  // Flags if speaker notes should be visible to all viewers\n  showNotes: false,\n\n  // Flags if slides with data-visibility=\"hidden\" should be kep visible\n  showHiddenSlides: false,\n\n  // Global override for autoplaying embedded media (video/audio/iframe)\n  // - null:   Media will only autoplay if data-autoplay is present\n  // - true:   All media will autoplay, regardless of individual setting\n  // - false:  No media will autoplay, regardless of individual setting\n  autoPlayMedia: null,\n\n  // Global override for preloading lazy-loaded iframes\n  // - null:   Iframes with data-src AND data-preload will be loaded when within\n  //           the viewDistance, iframes with only data-src will be loaded when visible\n  // - true:   All iframes with data-src will be loaded when within the viewDistance\n  // - false:  All iframes with data-src will be loaded only when visible\n  preloadIframes: null,\n\n  // Can be used to globally disable auto-animation\n  autoAnimate: true,\n\n  // Optionally provide a custom element matcher that will be\n  // used to dictate which elements we can animate between.\n  autoAnimateMatcher: null,\n\n  // Default settings for our auto-animate transitions, can be\n  // overridden per-slide or per-element via data arguments\n  autoAnimateEasing: \"ease\",\n  autoAnimateDuration: 1.0,\n  autoAnimateUnmatched: true,\n\n  // CSS properties that can be auto-animated. Position & scale\n  // is matched separately so there's no need to include styles\n  // like top/right/bottom/left, width/height or margin.\n  autoAnimateStyles: [\n    \"opacity\",\n    \"color\",\n    \"background-color\",\n    \"padding\",\n    \"font-size\",\n    \"line-height\",\n    \"letter-spacing\",\n    \"border-width\",\n    \"border-color\",\n    \"border-radius\",\n    \"outline\",\n    \"outline-offset\",\n  ],\n\n  // Controls automatic progression to the next slide\n  // - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n  //           is present on the current slide or fragment\n  // - 1+:     All slides will progress automatically at the given interval\n  // - false:  No auto-sliding, even if data-autoslide is present\n  autoSlide: 0,\n\n  // Stop auto-sliding after user input\n  autoSlideStoppable: true,\n\n  // Use this method for navigation when auto-sliding (defaults to navigateNext)\n  autoSlideMethod: null,\n\n  // Specify the average time in seconds that you think you will spend\n  // presenting each slide. This is used to show a pacing timer in the\n  // speaker view\n  defaultTiming: null,\n\n  // Enable slide navigation via mouse wheel\n  mouseWheel: false,\n\n  // Opens links in an iframe preview overlay\n  // Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n  // individually\n  previewLinks: false,\n\n  // Exposes the reveal.js API through window.postMessage\n  postMessage: true,\n\n  // Dispatches all reveal.js events to the parent window through postMessage\n  postMessageEvents: false,\n\n  // Focuses body when page changes visibility to ensure keyboard shortcuts work\n  focusBodyOnPageVisibilityChange: true,\n\n  // Transition style\n  transition: \"slide\", // none/fade/slide/convex/concave/zoom\n\n  // Transition speed\n  transitionSpeed: \"default\", // default/fast/slow\n\n  // Transition style for full page slide backgrounds\n  backgroundTransition: \"fade\", // none/fade/slide/convex/concave/zoom\n\n  // Parallax background image\n  parallaxBackgroundImage: \"\", // CSS syntax, e.g. \"a.jpg\"\n\n  // Parallax background size\n  parallaxBackgroundSize: \"\", // CSS syntax, e.g. \"3000px 2000px\"\n\n  // Parallax background repeat\n  parallaxBackgroundRepeat: \"\", // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n  // Parallax background position\n  parallaxBackgroundPosition: \"\", // CSS syntax, e.g. \"top left\"\n\n  // Amount of pixels to move the parallax background per slide step\n  parallaxBackgroundHorizontal: null,\n  parallaxBackgroundVertical: null,\n\n  // The maximum number of pages a single slide can expand onto when printing\n  // to PDF, unlimited by default\n  pdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n  // Prints each fragment on a separate slide\n  pdfSeparateFragments: true,\n\n  // Offset used to reduce the height of content within exported PDF pages.\n  // This exists to account for environment differences based on how you\n  // print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n  // on precisely the total height of the document whereas in-browser\n  // printing has to end one pixel before.\n  pdfPageHeightOffset: -1,\n\n  // Number of slides away from the current that are visible\n  viewDistance: 3,\n\n  // Number of slides away from the current that are visible on mobile\n  // devices. It is advisable to set this to a lower number than\n  // viewDistance in order to save resources.\n  mobileViewDistance: 2,\n\n  // The display mode that will be used to show slides\n  display: \"block\",\n\n  // Hide cursor if inactive\n  hideInactiveCursor: true,\n\n  // Time before the cursor is hidden (in ms)\n  hideCursorTime: 5000,\n\n  // Script dependencies to load\n  dependencies: [],\n\n  // Plugin objects to register and use for this presentation\n  plugins: [],\n};\n","import SlideContent from \"./controllers/slidecontent.js\";\nimport SlideNumber from \"./controllers/slidenumber.js\";\nimport Backgrounds from \"./controllers/backgrounds.js\";\nimport AutoAnimate from \"./controllers/autoanimate.js\";\nimport Fragments from \"./controllers/fragments.js\";\nimport Overview from \"./controllers/overview.js\";\nimport Keyboard from \"./controllers/keyboard.js\";\nimport Location from \"./controllers/location.js\";\nimport Controls from \"./controllers/controls.js\";\nimport Progress from \"./controllers/progress.js\";\nimport Pointer from \"./controllers/pointer.js\";\nimport Plugins from \"./controllers/plugins.js\";\nimport Print from \"./controllers/print.js\";\nimport Touch from \"./controllers/touch.js\";\nimport Focus from \"./controllers/focus.js\";\nimport Notes from \"./controllers/notes.js\";\nimport Playback from \"./components/playback.js\";\nimport defaultConfig from \"./config.js\";\nimport * as Util from \"./utils/util.js\";\nimport * as Device from \"./utils/device.js\";\nimport {\n  SLIDES_SELECTOR,\n  HORIZONTAL_SLIDES_SELECTOR,\n  VERTICAL_SLIDES_SELECTOR,\n  POST_MESSAGE_METHOD_BLACKLIST,\n} from \"./utils/constants.js\";\n\n// The reveal.js version\nexport const VERSION = \"4.3.1\";\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function (revealElement, options) {\n  // Support initialization with no args, one arg\n  // [options] or two args [revealElement, options]\n  if (arguments.length < 2) {\n    options = arguments[0];\n    revealElement = document.querySelector(\".reveal\");\n  }\n\n  const Reveal = {};\n\n  // Configuration defaults, can be overridden at initialization time\n  let config = {},\n    // Flags if reveal.js is loaded (has dispatched the 'ready' event)\n    ready = false,\n    // The horizontal and vertical index of the currently active slide\n    indexh,\n    indexv,\n    // The previous and current slide HTML elements\n    previousSlide,\n    currentSlide,\n    // Remember which directions that the user has navigated towards\n    navigationHistory = {\n      hasNavigatedHorizontally: false,\n      hasNavigatedVertically: false,\n    },\n    // Slides may have a data-state attribute which we pick up and apply\n    // as a class to the body. This list contains the combined state of\n    // all current slides.\n    state = [],\n    // The current scale of the presentation (see width/height config)\n    scale = 1,\n    // CSS transform that is currently applied to the slides container,\n    // split into two groups\n    slidesTransform = { layout: \"\", overview: \"\" },\n    // Cached references to DOM elements\n    dom = {},\n    // Flags if the interaction event listeners are bound\n    eventsAreBound = false,\n    // The current slide transition state; idle or running\n    transition = \"idle\",\n    // The current auto-slide duration\n    autoSlide = 0,\n    // Auto slide properties\n    autoSlidePlayer,\n    autoSlideTimeout = 0,\n    autoSlideStartTime = -1,\n    autoSlidePaused = false,\n    // Controllers for different aspects of our presentation. They're\n    // all given direct references to this Reveal instance since there\n    // may be multiple presentations running in parallel.\n    slideContent = new SlideContent(Reveal),\n    slideNumber = new SlideNumber(Reveal),\n    autoAnimate = new AutoAnimate(Reveal),\n    backgrounds = new Backgrounds(Reveal),\n    fragments = new Fragments(Reveal),\n    overview = new Overview(Reveal),\n    keyboard = new Keyboard(Reveal),\n    location = new Location(Reveal),\n    controls = new Controls(Reveal),\n    progress = new Progress(Reveal),\n    pointer = new Pointer(Reveal),\n    plugins = new Plugins(Reveal),\n    print = new Print(Reveal),\n    focus = new Focus(Reveal),\n    touch = new Touch(Reveal),\n    notes = new Notes(Reveal);\n\n  /**\n   * Starts up the presentation.\n   */\n  function initialize(initOptions) {\n    if (!revealElement)\n      throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n    // Cache references to key DOM elements\n    dom.wrapper = revealElement;\n    dom.slides = revealElement.querySelector(\".slides\");\n\n    if (!dom.slides)\n      throw 'Unable to find slides container (<div class=\"slides\">).';\n\n    // Compose our config object in order of increasing precedence:\n    // 1. Default reveal.js options\n    // 2. Options provided via Reveal.configure() prior to\n    //    initialization\n    // 3. Options passed to the Reveal constructor\n    // 4. Options passed to Reveal.initialize\n    // 5. Query params\n    config = {\n      ...defaultConfig,\n      ...config,\n      ...options,\n      ...initOptions,\n      ...Util.getQueryHash(),\n    };\n\n    setViewport();\n\n    // Force a layout when the whole page, incl fonts, has loaded\n    window.addEventListener(\"load\", layout, false);\n\n    // Register plugins and load dependencies, then move on to #start()\n    plugins.load(config.plugins, config.dependencies).then(start);\n\n    return new Promise((resolve) => Reveal.on(\"ready\", resolve));\n  }\n\n  /**\n   * Encase the presentation in a reveal.js viewport. The\n   * extent of the viewport differs based on configuration.\n   */\n  function setViewport() {\n    // Embedded decks use the reveal element as their viewport\n    if (config.embedded === true) {\n      dom.viewport =\n        Util.closest(revealElement, \".reveal-viewport\") || revealElement;\n    }\n    // Full-page decks use the body as their viewport\n    else {\n      dom.viewport = document.body;\n      document.documentElement.classList.add(\"reveal-full-page\");\n    }\n\n    dom.viewport.classList.add(\"reveal-viewport\");\n  }\n\n  /**\n   * Starts up reveal.js by binding input events and navigating\n   * to the current URL deeplink if there is one.\n   */\n  function start() {\n    ready = true;\n\n    // Remove slides hidden with data-visibility\n    removeHiddenSlides();\n\n    // Make sure we've got all the DOM elements we need\n    setupDOM();\n\n    // Listen to messages posted to this window\n    setupPostMessage();\n\n    // Prevent the slides from being scrolled out of view\n    setupScrollPrevention();\n\n    // Adds bindings for fullscreen mode\n    setupFullscreen();\n\n    // Resets all vertical slides so that only the first is visible\n    resetVerticalSlides();\n\n    // Updates the presentation to match the current configuration values\n    configure();\n\n    // Read the initial hash\n    location.readURL();\n\n    // Create slide backgrounds\n    backgrounds.update(true);\n\n    // Notify listeners that the presentation is ready but use a 1ms\n    // timeout to ensure it's not fired synchronously after #initialize()\n    setTimeout(() => {\n      // Enable transitions now that we're loaded\n      dom.slides.classList.remove(\"no-transition\");\n\n      dom.wrapper.classList.add(\"ready\");\n\n      dispatchEvent({\n        type: \"ready\",\n        data: {\n          indexh,\n          indexv,\n          currentSlide,\n        },\n      });\n    }, 1);\n\n    // Special setup and config is required when printing to PDF\n    if (print.isPrintingPDF()) {\n      removeEventListeners();\n\n      // The document needs to have loaded for the PDF layout\n      // measurements to be accurate\n      if (document.readyState === \"complete\") {\n        print.setupPDF();\n      } else {\n        window.addEventListener(\"load\", () => {\n          print.setupPDF();\n        });\n      }\n    }\n  }\n\n  /**\n   * Removes all slides with data-visibility=\"hidden\". This\n   * is done right before the rest of the presentation is\n   * initialized.\n   *\n   * If you want to show all hidden slides, initialize\n   * reveal.js with showHiddenSlides set to true.\n   */\n  function removeHiddenSlides() {\n    if (!config.showHiddenSlides) {\n      Util.queryAll(dom.wrapper, 'section[data-visibility=\"hidden\"]').forEach(\n        (slide) => {\n          slide.parentNode.removeChild(slide);\n        }\n      );\n    }\n  }\n\n  /**\n   * Finds and stores references to DOM elements which are\n   * required by the presentation. If a required element is\n   * not found, it is created.\n   */\n  function setupDOM() {\n    // Prevent transitions while we're loading\n    dom.slides.classList.add(\"no-transition\");\n\n    if (Device.isMobile) {\n      dom.wrapper.classList.add(\"no-hover\");\n    } else {\n      dom.wrapper.classList.remove(\"no-hover\");\n    }\n\n    backgrounds.render();\n    slideNumber.render();\n    controls.render();\n    progress.render();\n    notes.render();\n\n    // Overlay graphic which is displayed during the paused mode\n    dom.pauseOverlay = Util.createSingletonNode(\n      dom.wrapper,\n      \"div\",\n      \"pause-overlay\",\n      config.controls\n        ? '<button class=\"resume-button\">Resume presentation</button>'\n        : null\n    );\n\n    dom.statusElement = createStatusElement();\n\n    dom.wrapper.setAttribute(\"role\", \"application\");\n  }\n\n  /**\n   * Creates a hidden div with role aria-live to announce the\n   * current slide content. Hide the div off-screen to make it\n   * available only to Assistive Technologies.\n   *\n   * @return {HTMLElement}\n   */\n  function createStatusElement() {\n    let statusElement = dom.wrapper.querySelector(\".aria-status\");\n    if (!statusElement) {\n      statusElement = document.createElement(\"div\");\n      statusElement.style.position = \"absolute\";\n      statusElement.style.height = \"1px\";\n      statusElement.style.width = \"1px\";\n      statusElement.style.overflow = \"hidden\";\n      statusElement.style.clip = \"rect( 1px, 1px, 1px, 1px )\";\n      statusElement.classList.add(\"aria-status\");\n      statusElement.setAttribute(\"aria-live\", \"polite\");\n      statusElement.setAttribute(\"aria-atomic\", \"true\");\n      dom.wrapper.appendChild(statusElement);\n    }\n    return statusElement;\n  }\n\n  /**\n   * Announces the given text to screen readers.\n   */\n  function announceStatus(value) {\n    dom.statusElement.textContent = value;\n  }\n\n  /**\n   * Converts the given HTML element into a string of text\n   * that can be announced to a screen reader. Hidden\n   * elements are excluded.\n   */\n  function getStatusText(node) {\n    let text = \"\";\n\n    // Text node\n    if (node.nodeType === 3) {\n      text += node.textContent;\n    }\n    // Element node\n    else if (node.nodeType === 1) {\n      let isAriaHidden = node.getAttribute(\"aria-hidden\");\n      let isDisplayHidden = window.getComputedStyle(node)[\"display\"] === \"none\";\n      if (isAriaHidden !== \"true\" && !isDisplayHidden) {\n        Array.from(node.childNodes).forEach((child) => {\n          text += getStatusText(child);\n        });\n      }\n    }\n\n    text = text.trim();\n\n    return text === \"\" ? \"\" : text + \" \";\n  }\n\n  /**\n   * This is an unfortunate necessity. Some actions – such as\n   * an input field being focused in an iframe or using the\n   * keyboard to expand text selection beyond the bounds of\n   * a slide – can trigger our content to be pushed out of view.\n   * This scrolling can not be prevented by hiding overflow in\n   * CSS (we already do) so we have to resort to repeatedly\n   * checking if the slides have been offset :(\n   */\n  function setupScrollPrevention() {\n    setInterval(() => {\n      if (dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0) {\n        dom.wrapper.scrollTop = 0;\n        dom.wrapper.scrollLeft = 0;\n      }\n    }, 1000);\n  }\n\n  /**\n   * After entering fullscreen we need to force a layout to\n   * get our presentations to scale correctly. This behavior\n   * is inconsistent across browsers but a force layout seems\n   * to normalize it.\n   */\n  function setupFullscreen() {\n    document.addEventListener(\"fullscreenchange\", onFullscreenChange);\n    document.addEventListener(\"webkitfullscreenchange\", onFullscreenChange);\n  }\n\n  /**\n   * Registers a listener to postMessage events, this makes it\n   * possible to call all reveal.js API methods from another\n   * window. For example:\n   *\n   * revealWindow.postMessage( JSON.stringify({\n   *   method: 'slide',\n   *   args: [ 2 ]\n   * }), '*' );\n   */\n  function setupPostMessage() {\n    if (config.postMessage) {\n      window.addEventListener(\"message\", onPostMessage, false);\n    }\n  }\n\n  /**\n   * Applies the configuration settings from the config\n   * object. May be called multiple times.\n   *\n   * @param {object} options\n   */\n  function configure(options) {\n    const oldConfig = { ...config };\n\n    // New config options may be passed when this method\n    // is invoked through the API after initialization\n    if (typeof options === \"object\") Util.extend(config, options);\n\n    // Abort if reveal.js hasn't finished loading, config\n    // changes will be applied automatically once ready\n    if (Reveal.isReady() === false) return;\n\n    const numberOfSlides = dom.wrapper.querySelectorAll(SLIDES_SELECTOR).length;\n\n    // The transition is added as a class on the .reveal element\n    dom.wrapper.classList.remove(oldConfig.transition);\n    dom.wrapper.classList.add(config.transition);\n\n    dom.wrapper.setAttribute(\"data-transition-speed\", config.transitionSpeed);\n    dom.wrapper.setAttribute(\n      \"data-background-transition\",\n      config.backgroundTransition\n    );\n\n    // Expose our configured slide dimensions as custom props\n    dom.viewport.style.setProperty(\"--slide-width\", config.width + \"px\");\n    dom.viewport.style.setProperty(\"--slide-height\", config.height + \"px\");\n\n    if (config.shuffle) {\n      shuffle();\n    }\n\n    Util.toggleClass(dom.wrapper, \"embedded\", config.embedded);\n    Util.toggleClass(dom.wrapper, \"rtl\", config.rtl);\n    Util.toggleClass(dom.wrapper, \"center\", config.center);\n\n    // Exit the paused mode if it was configured off\n    if (config.pause === false) {\n      resume();\n    }\n\n    // Iframe link previews\n    if (config.previewLinks) {\n      enablePreviewLinks();\n      disablePreviewLinks(\"[data-preview-link=false]\");\n    } else {\n      disablePreviewLinks();\n      enablePreviewLinks(\"[data-preview-link]:not([data-preview-link=false])\");\n    }\n\n    // Reset all changes made by auto-animations\n    autoAnimate.reset();\n\n    // Remove existing auto-slide controls\n    if (autoSlidePlayer) {\n      autoSlidePlayer.destroy();\n      autoSlidePlayer = null;\n    }\n\n    // Generate auto-slide controls if needed\n    if (numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable) {\n      autoSlidePlayer = new Playback(dom.wrapper, () => {\n        return Math.min(\n          Math.max((Date.now() - autoSlideStartTime) / autoSlide, 0),\n          1\n        );\n      });\n\n      autoSlidePlayer.on(\"click\", onAutoSlidePlayerClick);\n      autoSlidePaused = false;\n    }\n\n    // Add the navigation mode to the DOM so we can adjust styling\n    if (config.navigationMode !== \"default\") {\n      dom.wrapper.setAttribute(\"data-navigation-mode\", config.navigationMode);\n    } else {\n      dom.wrapper.removeAttribute(\"data-navigation-mode\");\n    }\n\n    notes.configure(config, oldConfig);\n    focus.configure(config, oldConfig);\n    pointer.configure(config, oldConfig);\n    controls.configure(config, oldConfig);\n    progress.configure(config, oldConfig);\n    keyboard.configure(config, oldConfig);\n    fragments.configure(config, oldConfig);\n    slideNumber.configure(config, oldConfig);\n\n    sync();\n  }\n\n  /**\n   * Binds all event listeners.\n   */\n  function addEventListeners() {\n    eventsAreBound = true;\n\n    window.addEventListener(\"resize\", onWindowResize, false);\n\n    if (config.touch) touch.bind();\n    if (config.keyboard) keyboard.bind();\n    if (config.progress) progress.bind();\n    if (config.respondToHashChanges) location.bind();\n    controls.bind();\n    focus.bind();\n\n    dom.slides.addEventListener(\"click\", onSlidesClicked, false);\n    dom.slides.addEventListener(\"transitionend\", onTransitionEnd, false);\n    dom.pauseOverlay.addEventListener(\"click\", resume, false);\n\n    if (config.focusBodyOnPageVisibilityChange) {\n      document.addEventListener(\n        \"visibilitychange\",\n        onPageVisibilityChange,\n        false\n      );\n    }\n  }\n\n  /**\n   * Unbinds all event listeners.\n   */\n  function removeEventListeners() {\n    eventsAreBound = false;\n\n    touch.unbind();\n    focus.unbind();\n    keyboard.unbind();\n    controls.unbind();\n    progress.unbind();\n    location.unbind();\n\n    window.removeEventListener(\"resize\", onWindowResize, false);\n\n    dom.slides.removeEventListener(\"click\", onSlidesClicked, false);\n    dom.slides.removeEventListener(\"transitionend\", onTransitionEnd, false);\n    dom.pauseOverlay.removeEventListener(\"click\", resume, false);\n  }\n\n  /**\n   * Uninitializes reveal.js by undoing changes made to the\n   * DOM and removing all event listeners.\n   */\n  function destroy() {\n    removeEventListeners();\n    cancelAutoSlide();\n    disablePreviewLinks();\n\n    // Destroy controllers\n    notes.destroy();\n    focus.destroy();\n    plugins.destroy();\n    pointer.destroy();\n    controls.destroy();\n    progress.destroy();\n    backgrounds.destroy();\n    slideNumber.destroy();\n\n    // Remove event listeners\n    document.removeEventListener(\"fullscreenchange\", onFullscreenChange);\n    document.removeEventListener(\"webkitfullscreenchange\", onFullscreenChange);\n    document.removeEventListener(\n      \"visibilitychange\",\n      onPageVisibilityChange,\n      false\n    );\n    window.removeEventListener(\"message\", onPostMessage, false);\n    window.removeEventListener(\"load\", layout, false);\n\n    // Undo DOM changes\n    if (dom.pauseOverlay) dom.pauseOverlay.remove();\n    if (dom.statusElement) dom.statusElement.remove();\n\n    document.documentElement.classList.remove(\"reveal-full-page\");\n\n    dom.wrapper.classList.remove(\n      \"ready\",\n      \"center\",\n      \"has-horizontal-slides\",\n      \"has-vertical-slides\"\n    );\n    dom.wrapper.removeAttribute(\"data-transition-speed\");\n    dom.wrapper.removeAttribute(\"data-background-transition\");\n\n    dom.viewport.classList.remove(\"reveal-viewport\");\n    dom.viewport.style.removeProperty(\"--slide-width\");\n    dom.viewport.style.removeProperty(\"--slide-height\");\n\n    dom.slides.style.removeProperty(\"width\");\n    dom.slides.style.removeProperty(\"height\");\n    dom.slides.style.removeProperty(\"zoom\");\n    dom.slides.style.removeProperty(\"left\");\n    dom.slides.style.removeProperty(\"top\");\n    dom.slides.style.removeProperty(\"bottom\");\n    dom.slides.style.removeProperty(\"right\");\n    dom.slides.style.removeProperty(\"transform\");\n\n    Array.from(dom.wrapper.querySelectorAll(SLIDES_SELECTOR)).forEach(\n      (slide) => {\n        slide.style.removeProperty(\"display\");\n        slide.style.removeProperty(\"top\");\n        slide.removeAttribute(\"hidden\");\n        slide.removeAttribute(\"aria-hidden\");\n      }\n    );\n  }\n\n  /**\n   * Adds a listener to one of our custom reveal.js events,\n   * like slidechanged.\n   */\n  function on(type, listener, useCapture) {\n    revealElement.addEventListener(type, listener, useCapture);\n  }\n\n  /**\n   * Unsubscribes from a reveal.js event.\n   */\n  function off(type, listener, useCapture) {\n    revealElement.removeEventListener(type, listener, useCapture);\n  }\n\n  /**\n   * Applies CSS transforms to the slides container. The container\n   * is transformed from two separate sources: layout and the overview\n   * mode.\n   *\n   * @param {object} transforms\n   */\n  function transformSlides(transforms) {\n    // Pick up new transforms from arguments\n    if (typeof transforms.layout === \"string\")\n      slidesTransform.layout = transforms.layout;\n    if (typeof transforms.overview === \"string\")\n      slidesTransform.overview = transforms.overview;\n\n    // Apply the transforms to the slides container\n    if (slidesTransform.layout) {\n      Util.transformElement(\n        dom.slides,\n        slidesTransform.layout + \" \" + slidesTransform.overview\n      );\n    } else {\n      Util.transformElement(dom.slides, slidesTransform.overview);\n    }\n  }\n\n  /**\n   * Dispatches an event of the specified type from the\n   * reveal DOM element.\n   */\n  function dispatchEvent({ target = dom.wrapper, type, data, bubbles = true }) {\n    let event = document.createEvent(\"HTMLEvents\", 1, 2);\n    event.initEvent(type, bubbles, true);\n    Util.extend(event, data);\n    target.dispatchEvent(event);\n\n    if (target === dom.wrapper) {\n      // If we're in an iframe, post each reveal.js event to the\n      // parent window. Used by the notes plugin\n      dispatchPostMessage(type);\n    }\n\n    return event;\n  }\n\n  /**\n   * Dispatched a postMessage of the given type from our window.\n   */\n  function dispatchPostMessage(type, data) {\n    if (config.postMessageEvents && window.parent !== window.self) {\n      let message = {\n        namespace: \"reveal\",\n        eventName: type,\n        state: getState(),\n      };\n\n      Util.extend(message, data);\n\n      window.parent.postMessage(JSON.stringify(message), \"*\");\n    }\n  }\n\n  /**\n   * Bind preview frame links.\n   *\n   * @param {string} [selector=a] - selector for anchors\n   */\n  function enablePreviewLinks(selector = \"a\") {\n    Array.from(dom.wrapper.querySelectorAll(selector)).forEach((element) => {\n      if (/^(http|www)/gi.test(element.getAttribute(\"href\"))) {\n        element.addEventListener(\"click\", onPreviewLinkClicked, false);\n      }\n    });\n  }\n\n  /**\n   * Unbind preview frame links.\n   */\n  function disablePreviewLinks(selector = \"a\") {\n    Array.from(dom.wrapper.querySelectorAll(selector)).forEach((element) => {\n      if (/^(http|www)/gi.test(element.getAttribute(\"href\"))) {\n        element.removeEventListener(\"click\", onPreviewLinkClicked, false);\n      }\n    });\n  }\n\n  /**\n   * Opens a preview window for the target URL.\n   *\n   * @param {string} url - url for preview iframe src\n   */\n  function showPreview(url) {\n    closeOverlay();\n\n    dom.overlay = document.createElement(\"div\");\n    dom.overlay.classList.add(\"overlay\");\n    dom.overlay.classList.add(\"overlay-preview\");\n    dom.wrapper.appendChild(dom.overlay);\n\n    dom.overlay.innerHTML = `<header>\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t</header>\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<div class=\"viewport\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"viewport-inner\">\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n    dom.overlay.querySelector(\"iframe\").addEventListener(\n      \"load\",\n      (event) => {\n        dom.overlay.classList.add(\"loaded\");\n      },\n      false\n    );\n\n    dom.overlay.querySelector(\".close\").addEventListener(\n      \"click\",\n      (event) => {\n        closeOverlay();\n        event.preventDefault();\n      },\n      false\n    );\n\n    dom.overlay.querySelector(\".external\").addEventListener(\n      \"click\",\n      (event) => {\n        closeOverlay();\n      },\n      false\n    );\n  }\n\n  /**\n   * Open or close help overlay window.\n   *\n   * @param {Boolean} [override] Flag which overrides the\n   * toggle logic and forcibly sets the desired state. True means\n   * help is open, false means it's closed.\n   */\n  function toggleHelp(override) {\n    if (typeof override === \"boolean\") {\n      override ? showHelp() : closeOverlay();\n    } else {\n      if (dom.overlay) {\n        closeOverlay();\n      } else {\n        showHelp();\n      }\n    }\n  }\n\n  /**\n   * Opens an overlay window with help material.\n   */\n  function showHelp() {\n    if (config.help) {\n      closeOverlay();\n\n      dom.overlay = document.createElement(\"div\");\n      dom.overlay.classList.add(\"overlay\");\n      dom.overlay.classList.add(\"overlay-help\");\n      dom.wrapper.appendChild(dom.overlay);\n\n      let html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n      let shortcuts = keyboard.getShortcuts(),\n        bindings = keyboard.getBindings();\n\n      html += \"<table><th>KEY</th><th>ACTION</th>\";\n      for (let key in shortcuts) {\n        html += `<tr><td>${key}</td><td>${shortcuts[key]}</td></tr>`;\n      }\n\n      // Add custom key bindings that have associated descriptions\n      for (let binding in bindings) {\n        if (bindings[binding].key && bindings[binding].description) {\n          html += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n        }\n      }\n\n      html += \"</table>\";\n\n      dom.overlay.innerHTML = `\n\t\t\t\t<header>\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"viewport\">\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n      dom.overlay.querySelector(\".close\").addEventListener(\n        \"click\",\n        (event) => {\n          closeOverlay();\n          event.preventDefault();\n        },\n        false\n      );\n    }\n  }\n\n  /**\n   * Closes any currently open overlay.\n   */\n  function closeOverlay() {\n    if (dom.overlay) {\n      dom.overlay.parentNode.removeChild(dom.overlay);\n      dom.overlay = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Applies JavaScript-controlled layout rules to the\n   * presentation.\n   */\n  function layout() {\n    if (dom.wrapper && !print.isPrintingPDF()) {\n      if (!config.disableLayout) {\n        // On some mobile devices '100vh' is taller than the visible\n        // viewport which leads to part of the presentation being\n        // cut off. To work around this we define our own '--vh' custom\n        // property where 100x adds up to the correct height.\n        //\n        // https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n        if (Device.isMobile && !config.embedded) {\n          document.documentElement.style.setProperty(\n            \"--vh\",\n            window.innerHeight * 0.01 + \"px\"\n          );\n        }\n\n        const size = getComputedSlideSize();\n\n        const oldScale = scale;\n\n        // Layout the contents of the slides\n        layoutSlideContents(config.width, config.height);\n\n        dom.slides.style.width = size.width + \"px\";\n        dom.slides.style.height = size.height + \"px\";\n\n        // Determine scale of content to fit within available space\n        scale = Math.min(\n          size.presentationWidth / size.width,\n          size.presentationHeight / size.height\n        );\n\n        // Respect max/min scale settings\n        scale = Math.max(scale, config.minScale);\n        scale = Math.min(scale, config.maxScale);\n\n        // Don't apply any scaling styles if scale is 1\n        if (scale === 1) {\n          dom.slides.style.zoom = \"\";\n          dom.slides.style.left = \"\";\n          dom.slides.style.top = \"\";\n          dom.slides.style.bottom = \"\";\n          dom.slides.style.right = \"\";\n          transformSlides({ layout: \"\" });\n        } else {\n          dom.slides.style.zoom = \"\";\n          dom.slides.style.left = \"50%\";\n          dom.slides.style.top = \"50%\";\n          dom.slides.style.bottom = \"auto\";\n          dom.slides.style.right = \"auto\";\n          transformSlides({\n            layout: \"translate(-50%, -50%) scale(\" + scale + \")\",\n          });\n        }\n\n        // Select all slides, vertical and horizontal\n        const slides = Array.from(\n          dom.wrapper.querySelectorAll(SLIDES_SELECTOR)\n        );\n\n        for (let i = 0, len = slides.length; i < len; i++) {\n          const slide = slides[i];\n\n          // Don't bother updating invisible slides\n          if (slide.style.display === \"none\") {\n            continue;\n          }\n\n          if (config.center || slide.classList.contains(\"center\")) {\n            // Vertical stacks are not centred since their section\n            // children will be\n            if (slide.classList.contains(\"stack\")) {\n              slide.style.top = 0;\n            } else {\n              slide.style.top =\n                Math.max((size.height - slide.scrollHeight) / 2, 0) + \"px\";\n            }\n          } else {\n            slide.style.top = \"\";\n          }\n        }\n\n        if (oldScale !== scale) {\n          dispatchEvent({\n            type: \"resize\",\n            data: {\n              oldScale,\n              scale,\n              size,\n            },\n          });\n        }\n      }\n\n      dom.viewport.style.setProperty(\"--slide-scale\", scale);\n\n      progress.update();\n      backgrounds.updateParallax();\n\n      if (overview.isActive()) {\n        overview.update();\n      }\n    }\n  }\n\n  /**\n   * Applies layout logic to the contents of all slides in\n   * the presentation.\n   *\n   * @param {string|number} width\n   * @param {string|number} height\n   */\n  function layoutSlideContents(width, height) {\n    // Handle sizing of elements with the 'r-stretch' class\n    Util.queryAll(\n      dom.slides,\n      \"section > .stretch, section > .r-stretch\"\n    ).forEach((element) => {\n      // Determine how much vertical space we can use\n      let remainingHeight = Util.getRemainingHeight(element, height);\n\n      // Consider the aspect ratio of media elements\n      if (/(img|video)/gi.test(element.nodeName)) {\n        const nw = element.naturalWidth || element.videoWidth,\n          nh = element.naturalHeight || element.videoHeight;\n\n        const es = Math.min(width / nw, remainingHeight / nh);\n\n        element.style.width = nw * es + \"px\";\n        element.style.height = nh * es + \"px\";\n      } else {\n        element.style.width = width + \"px\";\n        element.style.height = remainingHeight + \"px\";\n      }\n    });\n  }\n\n  /**\n   * Calculates the computed pixel size of our slides. These\n   * values are based on the width and height configuration\n   * options.\n   *\n   * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n   * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n   */\n  function getComputedSlideSize(presentationWidth, presentationHeight) {\n    const size = {\n      // Slide size\n      width: config.width,\n      height: config.height,\n\n      // Presentation size\n      presentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n      presentationHeight: presentationHeight || dom.wrapper.offsetHeight,\n    };\n\n    // Reduce available space by margin\n    size.presentationWidth -= size.presentationWidth * config.margin;\n    size.presentationHeight -= size.presentationHeight * config.margin;\n\n    // Slide width may be a percentage of available width\n    if (typeof size.width === \"string\" && /%$/.test(size.width)) {\n      size.width = (parseInt(size.width, 10) / 100) * size.presentationWidth;\n    }\n\n    // Slide height may be a percentage of available height\n    if (typeof size.height === \"string\" && /%$/.test(size.height)) {\n      size.height = (parseInt(size.height, 10) / 100) * size.presentationHeight;\n    }\n\n    return size;\n  }\n\n  /**\n   * Stores the vertical index of a stack so that the same\n   * vertical slide can be selected when navigating to and\n   * from the stack.\n   *\n   * @param {HTMLElement} stack The vertical stack element\n   * @param {string|number} [v=0] Index to memorize\n   */\n  function setPreviousVerticalIndex(stack, v) {\n    if (typeof stack === \"object\" && typeof stack.setAttribute === \"function\") {\n      stack.setAttribute(\"data-previous-indexv\", v || 0);\n    }\n  }\n\n  /**\n   * Retrieves the vertical index which was stored using\n   * #setPreviousVerticalIndex() or 0 if no previous index\n   * exists.\n   *\n   * @param {HTMLElement} stack The vertical stack element\n   */\n  function getPreviousVerticalIndex(stack) {\n    if (\n      typeof stack === \"object\" &&\n      typeof stack.setAttribute === \"function\" &&\n      stack.classList.contains(\"stack\")\n    ) {\n      // Prefer manually defined start-indexv\n      const attributeName = stack.hasAttribute(\"data-start-indexv\")\n        ? \"data-start-indexv\"\n        : \"data-previous-indexv\";\n\n      return parseInt(stack.getAttribute(attributeName) || 0, 10);\n    }\n\n    return 0;\n  }\n\n  /**\n   * Checks if the current or specified slide is vertical\n   * (nested within another slide).\n   *\n   * @param {HTMLElement} [slide=currentSlide] The slide to check\n   * orientation of\n   * @return {Boolean}\n   */\n  function isVerticalSlide(slide = currentSlide) {\n    return (\n      slide && slide.parentNode && !!slide.parentNode.nodeName.match(/section/i)\n    );\n  }\n\n  /**\n   * Returns true if we're on the last slide in the current\n   * vertical stack.\n   */\n  function isLastVerticalSlide() {\n    if (currentSlide && isVerticalSlide(currentSlide)) {\n      // Does this slide have a next sibling?\n      if (currentSlide.nextElementSibling) return false;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Returns true if we're currently on the first slide in\n   * the presentation.\n   */\n  function isFirstSlide() {\n    return indexh === 0 && indexv === 0;\n  }\n\n  /**\n   * Returns true if we're currently on the last slide in\n   * the presenation. If the last slide is a stack, we only\n   * consider this the last slide if it's at the end of the\n   * stack.\n   */\n  function isLastSlide() {\n    if (currentSlide) {\n      // Does this slide have a next sibling?\n      if (currentSlide.nextElementSibling) return false;\n\n      // If it's vertical, does its parent have a next sibling?\n      if (\n        isVerticalSlide(currentSlide) &&\n        currentSlide.parentNode.nextElementSibling\n      )\n        return false;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Enters the paused mode which fades everything on screen to\n   * black.\n   */\n  function pause() {\n    if (config.pause) {\n      const wasPaused = dom.wrapper.classList.contains(\"paused\");\n\n      cancelAutoSlide();\n      dom.wrapper.classList.add(\"paused\");\n\n      if (wasPaused === false) {\n        dispatchEvent({ type: \"paused\" });\n      }\n    }\n  }\n\n  /**\n   * Exits from the paused mode.\n   */\n  function resume() {\n    const wasPaused = dom.wrapper.classList.contains(\"paused\");\n    dom.wrapper.classList.remove(\"paused\");\n\n    cueAutoSlide();\n\n    if (wasPaused) {\n      dispatchEvent({ type: \"resumed\" });\n    }\n  }\n\n  /**\n   * Toggles the paused mode on and off.\n   */\n  function togglePause(override) {\n    if (typeof override === \"boolean\") {\n      override ? pause() : resume();\n    } else {\n      isPaused() ? resume() : pause();\n    }\n  }\n\n  /**\n   * Checks if we are currently in the paused mode.\n   *\n   * @return {Boolean}\n   */\n  function isPaused() {\n    return dom.wrapper.classList.contains(\"paused\");\n  }\n\n  /**\n   * Toggles the auto slide mode on and off.\n   *\n   * @param {Boolean} [override] Flag which sets the desired state.\n   * True means autoplay starts, false means it stops.\n   */\n\n  function toggleAutoSlide(override) {\n    if (typeof override === \"boolean\") {\n      override ? resumeAutoSlide() : pauseAutoSlide();\n    } else {\n      autoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n    }\n  }\n\n  /**\n   * Checks if the auto slide mode is currently on.\n   *\n   * @return {Boolean}\n   */\n  function isAutoSliding() {\n    return !!(autoSlide && !autoSlidePaused);\n  }\n\n  /**\n   * Steps from the current point in the presentation to the\n   * slide which matches the specified horizontal and vertical\n   * indices.\n   *\n   * @param {number} [h=indexh] Horizontal index of the target slide\n   * @param {number} [v=indexv] Vertical index of the target slide\n   * @param {number} [f] Index of a fragment within the\n   * target slide to activate\n   * @param {number} [origin] Origin for use in multimaster environments\n   */\n  function slide(h, v, f, origin) {\n    // Dispatch an event before hte slide\n    const slidechange = dispatchEvent({\n      type: \"beforeslidechange\",\n      data: {\n        indexh: h === undefined ? indexh : h,\n        indexv: v === undefined ? indexv : v,\n        origin,\n      },\n    });\n\n    // Abort if this slide change was prevented by an event listener\n    if (slidechange.defaultPrevented) return;\n\n    // Remember where we were at before\n    previousSlide = currentSlide;\n\n    // Query all horizontal slides in the deck\n    const horizontalSlides = dom.wrapper.querySelectorAll(\n      HORIZONTAL_SLIDES_SELECTOR\n    );\n\n    // Abort if there are no slides\n    if (horizontalSlides.length === 0) return;\n\n    // If no vertical index is specified and the upcoming slide is a\n    // stack, resume at its previous vertical index\n    if (v === undefined && !overview.isActive()) {\n      v = getPreviousVerticalIndex(horizontalSlides[h]);\n    }\n\n    // If we were on a vertical stack, remember what vertical index\n    // it was on so we can resume at the same position when returning\n    if (\n      previousSlide &&\n      previousSlide.parentNode &&\n      previousSlide.parentNode.classList.contains(\"stack\")\n    ) {\n      setPreviousVerticalIndex(previousSlide.parentNode, indexv);\n    }\n\n    // Remember the state before this slide\n    const stateBefore = state.concat();\n\n    // Reset the state array\n    state.length = 0;\n\n    let indexhBefore = indexh || 0,\n      indexvBefore = indexv || 0;\n\n    // Activate and transition to the new slide\n    indexh = updateSlides(\n      HORIZONTAL_SLIDES_SELECTOR,\n      h === undefined ? indexh : h\n    );\n    indexv = updateSlides(\n      VERTICAL_SLIDES_SELECTOR,\n      v === undefined ? indexv : v\n    );\n\n    // Dispatch an event if the slide changed\n    let slideChanged = indexh !== indexhBefore || indexv !== indexvBefore;\n\n    // Ensure that the previous slide is never the same as the current\n    if (!slideChanged) previousSlide = null;\n\n    // Find the current horizontal slide and any possible vertical slides\n    // within it\n    let currentHorizontalSlide = horizontalSlides[indexh],\n      currentVerticalSlides =\n        currentHorizontalSlide.querySelectorAll(\"section\");\n\n    // Store references to the previous and current slides\n    currentSlide = currentVerticalSlides[indexv] || currentHorizontalSlide;\n\n    let autoAnimateTransition = false;\n\n    // Detect if we're moving between two auto-animated slides\n    if (slideChanged && previousSlide && currentSlide && !overview.isActive()) {\n      // If this is an auto-animated transition, we disable the\n      // regular slide transition\n      //\n      // Note 20-03-2020:\n      // This needs to happen before we update slide visibility,\n      // otherwise transitions will still run in Safari.\n      if (\n        previousSlide.hasAttribute(\"data-auto-animate\") &&\n        currentSlide.hasAttribute(\"data-auto-animate\") &&\n        previousSlide.getAttribute(\"data-auto-animate-id\") ===\n          currentSlide.getAttribute(\"data-auto-animate-id\") &&\n        !(\n          indexh > indexhBefore || indexv > indexvBefore\n            ? currentSlide\n            : previousSlide\n        ).hasAttribute(\"data-auto-animate-restart\")\n      ) {\n        autoAnimateTransition = true;\n        dom.slides.classList.add(\"disable-slide-transitions\");\n      }\n\n      transition = \"running\";\n    }\n\n    // Update the visibility of slides now that the indices have changed\n    updateSlidesVisibility();\n\n    layout();\n\n    // Update the overview if it's currently active\n    if (overview.isActive()) {\n      overview.update();\n    }\n\n    // Show fragment, if specified\n    if (typeof f !== \"undefined\") {\n      fragments.goto(f);\n    }\n\n    // Solves an edge case where the previous slide maintains the\n    // 'present' class when navigating between adjacent vertical\n    // stacks\n    if (previousSlide && previousSlide !== currentSlide) {\n      previousSlide.classList.remove(\"present\");\n      previousSlide.setAttribute(\"aria-hidden\", \"true\");\n\n      // Reset all slides upon navigate to home\n      if (isFirstSlide()) {\n        // Launch async task\n        setTimeout(() => {\n          getVerticalStacks().forEach((slide) => {\n            setPreviousVerticalIndex(slide, 0);\n          });\n        }, 0);\n      }\n    }\n\n    // Apply the new state\n    stateLoop: for (let i = 0, len = state.length; i < len; i++) {\n      // Check if this state existed on the previous slide. If it\n      // did, we will avoid adding it repeatedly\n      for (let j = 0; j < stateBefore.length; j++) {\n        if (stateBefore[j] === state[i]) {\n          stateBefore.splice(j, 1);\n          continue stateLoop;\n        }\n      }\n\n      dom.viewport.classList.add(state[i]);\n\n      // Dispatch custom event matching the state's name\n      dispatchEvent({ type: state[i] });\n    }\n\n    // Clean up the remains of the previous state\n    while (stateBefore.length) {\n      dom.viewport.classList.remove(stateBefore.pop());\n    }\n\n    if (slideChanged) {\n      dispatchEvent({\n        type: \"slidechanged\",\n        data: {\n          indexh,\n          indexv,\n          previousSlide,\n          currentSlide,\n          origin,\n        },\n      });\n    }\n\n    // Handle embedded content\n    if (slideChanged || !previousSlide) {\n      slideContent.stopEmbeddedContent(previousSlide);\n      slideContent.startEmbeddedContent(currentSlide);\n    }\n\n    // Announce the current slide contents to screen readers\n    // Use animation frame to prevent getComputedStyle in getStatusText\n    // from triggering layout mid-frame\n    requestAnimationFrame(() => {\n      announceStatus(getStatusText(currentSlide));\n    });\n\n    progress.update();\n    controls.update();\n    notes.update();\n    backgrounds.update();\n    backgrounds.updateParallax();\n    slideNumber.update();\n    fragments.update();\n\n    // Update the URL hash\n    location.writeURL();\n\n    cueAutoSlide();\n\n    // Auto-animation\n    if (autoAnimateTransition) {\n      setTimeout(() => {\n        dom.slides.classList.remove(\"disable-slide-transitions\");\n      }, 0);\n\n      if (config.autoAnimate) {\n        // Run the auto-animation between our slides\n        autoAnimate.run(previousSlide, currentSlide);\n      }\n    }\n  }\n\n  /**\n   * Syncs the presentation with the current DOM. Useful\n   * when new slides or control elements are added or when\n   * the configuration has changed.\n   */\n  function sync() {\n    // Subscribe to input\n    removeEventListeners();\n    addEventListeners();\n\n    // Force a layout to make sure the current config is accounted for\n    layout();\n\n    // Reflect the current autoSlide value\n    autoSlide = config.autoSlide;\n\n    // Start auto-sliding if it's enabled\n    cueAutoSlide();\n\n    // Re-create all slide backgrounds\n    backgrounds.create();\n\n    // Write the current hash to the URL\n    location.writeURL();\n\n    fragments.sortAll();\n\n    controls.update();\n    progress.update();\n\n    updateSlidesVisibility();\n\n    notes.update();\n    notes.updateVisibility();\n    backgrounds.update(true);\n    slideNumber.update();\n    slideContent.formatEmbeddedContent();\n\n    // Start or stop embedded content depending on global config\n    if (config.autoPlayMedia === false) {\n      slideContent.stopEmbeddedContent(currentSlide, { unloadIframes: false });\n    } else {\n      slideContent.startEmbeddedContent(currentSlide);\n    }\n\n    if (overview.isActive()) {\n      overview.layout();\n    }\n  }\n\n  /**\n   * Updates reveal.js to keep in sync with new slide attributes. For\n   * example, if you add a new `data-background-image` you can call\n   * this to have reveal.js render the new background image.\n   *\n   * Similar to #sync() but more efficient when you only need to\n   * refresh a specific slide.\n   *\n   * @param {HTMLElement} slide\n   */\n  function syncSlide(slide = currentSlide) {\n    backgrounds.sync(slide);\n    fragments.sync(slide);\n\n    slideContent.load(slide);\n\n    backgrounds.update();\n    notes.update();\n  }\n\n  /**\n   * Resets all vertical slides so that only the first\n   * is visible.\n   */\n  function resetVerticalSlides() {\n    getHorizontalSlides().forEach((horizontalSlide) => {\n      Util.queryAll(horizontalSlide, \"section\").forEach((verticalSlide, y) => {\n        if (y > 0) {\n          verticalSlide.classList.remove(\"present\");\n          verticalSlide.classList.remove(\"past\");\n          verticalSlide.classList.add(\"future\");\n          verticalSlide.setAttribute(\"aria-hidden\", \"true\");\n        }\n      });\n    });\n  }\n\n  /**\n   * Randomly shuffles all slides in the deck.\n   */\n  function shuffle(slides = getHorizontalSlides()) {\n    slides.forEach((slide, i) => {\n      // Insert the slide next to a randomly picked sibling slide\n      // slide. This may cause the slide to insert before itself,\n      // but that's not an issue.\n      let beforeSlide = slides[Math.floor(Math.random() * slides.length)];\n      if (beforeSlide.parentNode === slide.parentNode) {\n        slide.parentNode.insertBefore(slide, beforeSlide);\n      }\n\n      // Randomize the order of vertical slides (if there are any)\n      let verticalSlides = slide.querySelectorAll(\"section\");\n      if (verticalSlides.length) {\n        shuffle(verticalSlides);\n      }\n    });\n  }\n\n  /**\n   * Updates one dimension of slides by showing the slide\n   * with the specified index.\n   *\n   * @param {string} selector A CSS selector that will fetch\n   * the group of slides we are working with\n   * @param {number} index The index of the slide that should be\n   * shown\n   *\n   * @return {number} The index of the slide that is now shown,\n   * might differ from the passed in index if it was out of\n   * bounds.\n   */\n  function updateSlides(selector, index) {\n    // Select all slides and convert the NodeList result to\n    // an array\n    let slides = Util.queryAll(dom.wrapper, selector),\n      slidesLength = slides.length;\n\n    let printMode = print.isPrintingPDF();\n    let loopedForwards = false;\n    let loopedBackwards = false;\n\n    if (slidesLength) {\n      // Should the index loop?\n      if (config.loop) {\n        if (index >= slidesLength) loopedForwards = true;\n\n        index %= slidesLength;\n\n        if (index < 0) {\n          index = slidesLength + index;\n          loopedBackwards = true;\n        }\n      }\n\n      // Enforce max and minimum index bounds\n      index = Math.max(Math.min(index, slidesLength - 1), 0);\n\n      for (let i = 0; i < slidesLength; i++) {\n        let element = slides[i];\n\n        let reverse = config.rtl && !isVerticalSlide(element);\n\n        // Avoid .remove() with multiple args for IE11 support\n        element.classList.remove(\"past\");\n        element.classList.remove(\"present\");\n        element.classList.remove(\"future\");\n\n        // http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n        element.setAttribute(\"hidden\", \"\");\n        element.setAttribute(\"aria-hidden\", \"true\");\n\n        // If this element contains vertical slides\n        if (element.querySelector(\"section\")) {\n          element.classList.add(\"stack\");\n        }\n\n        // If we're printing static slides, all slides are \"present\"\n        if (printMode) {\n          element.classList.add(\"present\");\n          continue;\n        }\n\n        if (i < index) {\n          // Any element previous to index is given the 'past' class\n          element.classList.add(reverse ? \"future\" : \"past\");\n\n          if (config.fragments) {\n            // Show all fragments in prior slides\n            showFragmentsIn(element);\n          }\n        } else if (i > index) {\n          // Any element subsequent to index is given the 'future' class\n          element.classList.add(reverse ? \"past\" : \"future\");\n\n          if (config.fragments) {\n            // Hide all fragments in future slides\n            hideFragmentsIn(element);\n          }\n        }\n        // Update the visibility of fragments when a presentation loops\n        // in either direction\n        else if (i === index && config.fragments) {\n          if (loopedForwards) {\n            hideFragmentsIn(element);\n          } else if (loopedBackwards) {\n            showFragmentsIn(element);\n          }\n        }\n      }\n\n      let slide = slides[index];\n      let wasPresent = slide.classList.contains(\"present\");\n\n      // Mark the current slide as present\n      slide.classList.add(\"present\");\n      slide.removeAttribute(\"hidden\");\n      slide.removeAttribute(\"aria-hidden\");\n\n      if (!wasPresent) {\n        // Dispatch an event indicating the slide is now visible\n        dispatchEvent({\n          target: slide,\n          type: \"visible\",\n          bubbles: false,\n        });\n      }\n\n      // If this slide has a state associated with it, add it\n      // onto the current state of the deck\n      let slideState = slide.getAttribute(\"data-state\");\n      if (slideState) {\n        state = state.concat(slideState.split(\" \"));\n      }\n    } else {\n      // Since there are no slides we can't be anywhere beyond the\n      // zeroth index\n      index = 0;\n    }\n\n    return index;\n  }\n\n  /**\n   * Shows all fragment elements within the given contaienr.\n   */\n  function showFragmentsIn(container) {\n    Util.queryAll(container, \".fragment\").forEach((fragment) => {\n      fragment.classList.add(\"visible\");\n      fragment.classList.remove(\"current-fragment\");\n    });\n  }\n\n  /**\n   * Hides all fragment elements within the given contaienr.\n   */\n  function hideFragmentsIn(container) {\n    Util.queryAll(container, \".fragment.visible\").forEach((fragment) => {\n      fragment.classList.remove(\"visible\", \"current-fragment\");\n    });\n  }\n\n  /**\n   * Optimization method; hide all slides that are far away\n   * from the present slide.\n   */\n  function updateSlidesVisibility() {\n    // Select all slides and convert the NodeList result to\n    // an array\n    let horizontalSlides = getHorizontalSlides(),\n      horizontalSlidesLength = horizontalSlides.length,\n      distanceX,\n      distanceY;\n\n    if (horizontalSlidesLength && typeof indexh !== \"undefined\") {\n      // The number of steps away from the present slide that will\n      // be visible\n      let viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n      // Shorten the view distance on devices that typically have\n      // less resources\n      if (Device.isMobile) {\n        viewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n      }\n\n      // All slides need to be visible when exporting to PDF\n      if (print.isPrintingPDF()) {\n        viewDistance = Number.MAX_VALUE;\n      }\n\n      for (let x = 0; x < horizontalSlidesLength; x++) {\n        let horizontalSlide = horizontalSlides[x];\n\n        let verticalSlides = Util.queryAll(horizontalSlide, \"section\"),\n          verticalSlidesLength = verticalSlides.length;\n\n        // Determine how far away this slide is from the present\n        distanceX = Math.abs((indexh || 0) - x) || 0;\n\n        // If the presentation is looped, distance should measure\n        // 1 between the first and last slides\n        if (config.loop) {\n          distanceX =\n            Math.abs(\n              ((indexh || 0) - x) % (horizontalSlidesLength - viewDistance)\n            ) || 0;\n        }\n\n        // Show the horizontal slide if it's within the view distance\n        if (distanceX < viewDistance) {\n          slideContent.load(horizontalSlide);\n        } else {\n          slideContent.unload(horizontalSlide);\n        }\n\n        if (verticalSlidesLength) {\n          let oy = getPreviousVerticalIndex(horizontalSlide);\n\n          for (let y = 0; y < verticalSlidesLength; y++) {\n            let verticalSlide = verticalSlides[y];\n\n            distanceY =\n              x === (indexh || 0)\n                ? Math.abs((indexv || 0) - y)\n                : Math.abs(y - oy);\n\n            if (distanceX + distanceY < viewDistance) {\n              slideContent.load(verticalSlide);\n            } else {\n              slideContent.unload(verticalSlide);\n            }\n          }\n        }\n      }\n\n      // Flag if there are ANY vertical slides, anywhere in the deck\n      if (hasVerticalSlides()) {\n        dom.wrapper.classList.add(\"has-vertical-slides\");\n      } else {\n        dom.wrapper.classList.remove(\"has-vertical-slides\");\n      }\n\n      // Flag if there are ANY horizontal slides, anywhere in the deck\n      if (hasHorizontalSlides()) {\n        dom.wrapper.classList.add(\"has-horizontal-slides\");\n      } else {\n        dom.wrapper.classList.remove(\"has-horizontal-slides\");\n      }\n    }\n  }\n\n  /**\n   * Determine what available routes there are for navigation.\n   *\n   * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n   */\n  function availableRoutes({ includeFragments = false } = {}) {\n    let horizontalSlides = dom.wrapper.querySelectorAll(\n        HORIZONTAL_SLIDES_SELECTOR\n      ),\n      verticalSlides = dom.wrapper.querySelectorAll(VERTICAL_SLIDES_SELECTOR);\n\n    let routes = {\n      left: indexh > 0,\n      right: indexh < horizontalSlides.length - 1,\n      up: indexv > 0,\n      down: indexv < verticalSlides.length - 1,\n    };\n\n    // Looped presentations can always be navigated as long as\n    // there are slides available\n    if (config.loop) {\n      if (horizontalSlides.length > 1) {\n        routes.left = true;\n        routes.right = true;\n      }\n\n      if (verticalSlides.length > 1) {\n        routes.up = true;\n        routes.down = true;\n      }\n    }\n\n    if (horizontalSlides.length > 1 && config.navigationMode === \"linear\") {\n      routes.right = routes.right || routes.down;\n      routes.left = routes.left || routes.up;\n    }\n\n    // If includeFragments is set, a route will be considered\n    // availalbe if either a slid OR fragment is available in\n    // the given direction\n    if (includeFragments === true) {\n      let fragmentRoutes = fragments.availableRoutes();\n      routes.left = routes.left || fragmentRoutes.prev;\n      routes.up = routes.up || fragmentRoutes.prev;\n      routes.down = routes.down || fragmentRoutes.next;\n      routes.right = routes.right || fragmentRoutes.next;\n    }\n\n    // Reverse horizontal controls for rtl\n    if (config.rtl) {\n      let left = routes.left;\n      routes.left = routes.right;\n      routes.right = left;\n    }\n\n    return routes;\n  }\n\n  /**\n   * Returns the number of past slides. This can be used as a global\n   * flattened index for slides.\n   *\n   * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n   *\n   * @return {number} Past slide count\n   */\n  function getSlidePastCount(slide = currentSlide) {\n    let horizontalSlides = getHorizontalSlides();\n\n    // The number of past slides\n    let pastCount = 0;\n\n    // Step through all slides and count the past ones\n    mainLoop: for (let i = 0; i < horizontalSlides.length; i++) {\n      let horizontalSlide = horizontalSlides[i];\n      let verticalSlides = horizontalSlide.querySelectorAll(\"section\");\n\n      for (let j = 0; j < verticalSlides.length; j++) {\n        // Stop as soon as we arrive at the present\n        if (verticalSlides[j] === slide) {\n          break mainLoop;\n        }\n\n        // Don't count slides with the \"uncounted\" class\n        if (verticalSlides[j].dataset.visibility !== \"uncounted\") {\n          pastCount++;\n        }\n      }\n\n      // Stop as soon as we arrive at the present\n      if (horizontalSlide === slide) {\n        break;\n      }\n\n      // Don't count the wrapping section for vertical slides and\n      // slides marked as uncounted\n      if (\n        horizontalSlide.classList.contains(\"stack\") === false &&\n        horizontalSlide.dataset.visibility !== \"uncounted\"\n      ) {\n        pastCount++;\n      }\n    }\n\n    return pastCount;\n  }\n\n  /**\n   * Returns a value ranging from 0-1 that represents\n   * how far into the presentation we have navigated.\n   *\n   * @return {number}\n   */\n  function getProgress() {\n    // The number of past and total slides\n    let totalCount = getTotalSlides();\n    let pastCount = getSlidePastCount();\n\n    if (currentSlide) {\n      let allFragments = currentSlide.querySelectorAll(\".fragment\");\n\n      // If there are fragments in the current slide those should be\n      // accounted for in the progress.\n      if (allFragments.length > 0) {\n        let visibleFragments =\n          currentSlide.querySelectorAll(\".fragment.visible\");\n\n        // This value represents how big a portion of the slide progress\n        // that is made up by its fragments (0-1)\n        let fragmentWeight = 0.9;\n\n        // Add fragment progress to the past slide count\n        pastCount +=\n          (visibleFragments.length / allFragments.length) * fragmentWeight;\n      }\n    }\n\n    return Math.min(pastCount / (totalCount - 1), 1);\n  }\n\n  /**\n   * Retrieves the h/v location and fragment of the current,\n   * or specified, slide.\n   *\n   * @param {HTMLElement} [slide] If specified, the returned\n   * index will be for this slide rather than the currently\n   * active one\n   *\n   * @return {{h: number, v: number, f: number}}\n   */\n  function getIndices(slide) {\n    // By default, return the current indices\n    let h = indexh,\n      v = indexv,\n      f;\n\n    // If a slide is specified, return the indices of that slide\n    if (slide) {\n      let isVertical = isVerticalSlide(slide);\n      let slideh = isVertical ? slide.parentNode : slide;\n\n      // Select all horizontal slides\n      let horizontalSlides = getHorizontalSlides();\n\n      // Now that we know which the horizontal slide is, get its index\n      h = Math.max(horizontalSlides.indexOf(slideh), 0);\n\n      // Assume we're not vertical\n      v = undefined;\n\n      // If this is a vertical slide, grab the vertical index\n      if (isVertical) {\n        v = Math.max(\n          Util.queryAll(slide.parentNode, \"section\").indexOf(slide),\n          0\n        );\n      }\n    }\n\n    if (!slide && currentSlide) {\n      let hasFragments = currentSlide.querySelectorAll(\".fragment\").length > 0;\n      if (hasFragments) {\n        let currentFragment = currentSlide.querySelector(\".current-fragment\");\n        if (\n          currentFragment &&\n          currentFragment.hasAttribute(\"data-fragment-index\")\n        ) {\n          f = parseInt(currentFragment.getAttribute(\"data-fragment-index\"), 10);\n        } else {\n          f = currentSlide.querySelectorAll(\".fragment.visible\").length - 1;\n        }\n      }\n    }\n\n    return { h, v, f };\n  }\n\n  /**\n   * Retrieves all slides in this presentation.\n   */\n  function getSlides() {\n    return Util.queryAll(\n      dom.wrapper,\n      SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])'\n    );\n  }\n\n  /**\n   * Returns a list of all horizontal slides in the deck. Each\n   * vertical stack is included as one horizontal slide in the\n   * resulting array.\n   */\n  function getHorizontalSlides() {\n    return Util.queryAll(dom.wrapper, HORIZONTAL_SLIDES_SELECTOR);\n  }\n\n  /**\n   * Returns all vertical slides that exist within this deck.\n   */\n  function getVerticalSlides() {\n    return Util.queryAll(dom.wrapper, \".slides>section>section\");\n  }\n\n  /**\n   * Returns all vertical stacks (each stack can contain multiple slides).\n   */\n  function getVerticalStacks() {\n    return Util.queryAll(dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + \".stack\");\n  }\n\n  /**\n   * Returns true if there are at least two horizontal slides.\n   */\n  function hasHorizontalSlides() {\n    return getHorizontalSlides().length > 1;\n  }\n\n  /**\n   * Returns true if there are at least two vertical slides.\n   */\n  function hasVerticalSlides() {\n    return getVerticalSlides().length > 1;\n  }\n\n  /**\n   * Returns an array of objects where each object represents the\n   * attributes on its respective slide.\n   */\n  function getSlidesAttributes() {\n    return getSlides().map((slide) => {\n      let attributes = {};\n      for (let i = 0; i < slide.attributes.length; i++) {\n        let attribute = slide.attributes[i];\n        attributes[attribute.name] = attribute.value;\n      }\n      return attributes;\n    });\n  }\n\n  /**\n   * Retrieves the total number of slides in this presentation.\n   *\n   * @return {number}\n   */\n  function getTotalSlides() {\n    return getSlides().length;\n  }\n\n  /**\n   * Returns the slide element matching the specified index.\n   *\n   * @return {HTMLElement}\n   */\n  function getSlide(x, y) {\n    let horizontalSlide = getHorizontalSlides()[x];\n    let verticalSlides =\n      horizontalSlide && horizontalSlide.querySelectorAll(\"section\");\n\n    if (verticalSlides && verticalSlides.length && typeof y === \"number\") {\n      return verticalSlides ? verticalSlides[y] : undefined;\n    }\n\n    return horizontalSlide;\n  }\n\n  /**\n   * Returns the background element for the given slide.\n   * All slides, even the ones with no background properties\n   * defined, have a background element so as long as the\n   * index is valid an element will be returned.\n   *\n   * @param {mixed} x Horizontal background index OR a slide\n   * HTML element\n   * @param {number} y Vertical background index\n   * @return {(HTMLElement[]|*)}\n   */\n  function getSlideBackground(x, y) {\n    let slide = typeof x === \"number\" ? getSlide(x, y) : x;\n    if (slide) {\n      return slide.slideBackgroundElement;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Retrieves the current state of the presentation as\n   * an object. This state can then be restored at any\n   * time.\n   *\n   * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n   */\n  function getState() {\n    let indices = getIndices();\n\n    return {\n      indexh: indices.h,\n      indexv: indices.v,\n      indexf: indices.f,\n      paused: isPaused(),\n      overview: overview.isActive(),\n    };\n  }\n\n  /**\n   * Restores the presentation to the given state.\n   *\n   * @param {object} state As generated by getState()\n   * @see {@link getState} generates the parameter `state`\n   */\n  function setState(state) {\n    if (typeof state === \"object\") {\n      slide(\n        Util.deserialize(state.indexh),\n        Util.deserialize(state.indexv),\n        Util.deserialize(state.indexf)\n      );\n\n      let pausedFlag = Util.deserialize(state.paused),\n        overviewFlag = Util.deserialize(state.overview);\n\n      if (typeof pausedFlag === \"boolean\" && pausedFlag !== isPaused()) {\n        togglePause(pausedFlag);\n      }\n\n      if (\n        typeof overviewFlag === \"boolean\" &&\n        overviewFlag !== overview.isActive()\n      ) {\n        overview.toggle(overviewFlag);\n      }\n    }\n  }\n\n  /**\n   * Cues a new automated slide if enabled in the config.\n   */\n  function cueAutoSlide() {\n    cancelAutoSlide();\n\n    if (currentSlide && config.autoSlide !== false) {\n      let fragment = currentSlide.querySelector(\".current-fragment\");\n\n      // When the slide first appears there is no \"current\" fragment so\n      // we look for a data-autoslide timing on the first fragment\n      if (!fragment) fragment = currentSlide.querySelector(\".fragment\");\n\n      let fragmentAutoSlide = fragment\n        ? fragment.getAttribute(\"data-autoslide\")\n        : null;\n      let parentAutoSlide = currentSlide.parentNode\n        ? currentSlide.parentNode.getAttribute(\"data-autoslide\")\n        : null;\n      let slideAutoSlide = currentSlide.getAttribute(\"data-autoslide\");\n\n      // Pick value in the following priority order:\n      // 1. Current fragment's data-autoslide\n      // 2. Current slide's data-autoslide\n      // 3. Parent slide's data-autoslide\n      // 4. Global autoSlide setting\n      if (fragmentAutoSlide) {\n        autoSlide = parseInt(fragmentAutoSlide, 10);\n      } else if (slideAutoSlide) {\n        autoSlide = parseInt(slideAutoSlide, 10);\n      } else if (parentAutoSlide) {\n        autoSlide = parseInt(parentAutoSlide, 10);\n      } else {\n        autoSlide = config.autoSlide;\n\n        // If there are media elements with data-autoplay,\n        // automatically set the autoSlide duration to the\n        // length of that media. Not applicable if the slide\n        // is divided up into fragments.\n        // playbackRate is accounted for in the duration.\n        if (currentSlide.querySelectorAll(\".fragment\").length === 0) {\n          Util.queryAll(currentSlide, \"video, audio\").forEach((el) => {\n            if (el.hasAttribute(\"data-autoplay\")) {\n              if (\n                autoSlide &&\n                (el.duration * 1000) / el.playbackRate > autoSlide\n              ) {\n                autoSlide = (el.duration * 1000) / el.playbackRate + 1000;\n              }\n            }\n          });\n        }\n      }\n\n      // Cue the next auto-slide if:\n      // - There is an autoSlide value\n      // - Auto-sliding isn't paused by the user\n      // - The presentation isn't paused\n      // - The overview isn't active\n      // - The presentation isn't over\n      if (\n        autoSlide &&\n        !autoSlidePaused &&\n        !isPaused() &&\n        !overview.isActive() &&\n        (!isLastSlide() ||\n          fragments.availableRoutes().next ||\n          config.loop === true)\n      ) {\n        autoSlideTimeout = setTimeout(() => {\n          if (typeof config.autoSlideMethod === \"function\") {\n            config.autoSlideMethod();\n          } else {\n            navigateNext();\n          }\n          cueAutoSlide();\n        }, autoSlide);\n        autoSlideStartTime = Date.now();\n      }\n\n      if (autoSlidePlayer) {\n        autoSlidePlayer.setPlaying(autoSlideTimeout !== -1);\n      }\n    }\n  }\n\n  /**\n   * Cancels any ongoing request to auto-slide.\n   */\n  function cancelAutoSlide() {\n    clearTimeout(autoSlideTimeout);\n    autoSlideTimeout = -1;\n  }\n\n  function pauseAutoSlide() {\n    if (autoSlide && !autoSlidePaused) {\n      autoSlidePaused = true;\n      dispatchEvent({ type: \"autoslidepaused\" });\n      clearTimeout(autoSlideTimeout);\n\n      if (autoSlidePlayer) {\n        autoSlidePlayer.setPlaying(false);\n      }\n    }\n  }\n\n  function resumeAutoSlide() {\n    if (autoSlide && autoSlidePaused) {\n      autoSlidePaused = false;\n      dispatchEvent({ type: \"autoslideresumed\" });\n      cueAutoSlide();\n    }\n  }\n\n  function navigateLeft({ skipFragments = false } = {}) {\n    navigationHistory.hasNavigatedHorizontally = true;\n\n    // Reverse for RTL\n    if (config.rtl) {\n      if (\n        (overview.isActive() || skipFragments || fragments.next() === false) &&\n        availableRoutes().left\n      ) {\n        slide(\n          indexh + 1,\n          config.navigationMode === \"grid\" ? indexv : undefined\n        );\n      }\n    }\n    // Normal navigation\n    else if (\n      (overview.isActive() || skipFragments || fragments.prev() === false) &&\n      availableRoutes().left\n    ) {\n      slide(indexh - 1, config.navigationMode === \"grid\" ? indexv : undefined);\n    }\n  }\n\n  function navigateRight({ skipFragments = false } = {}) {\n    navigationHistory.hasNavigatedHorizontally = true;\n\n    // Reverse for RTL\n    if (config.rtl) {\n      if (\n        (overview.isActive() || skipFragments || fragments.prev() === false) &&\n        availableRoutes().right\n      ) {\n        slide(\n          indexh - 1,\n          config.navigationMode === \"grid\" ? indexv : undefined\n        );\n      }\n    }\n    // Normal navigation\n    else if (\n      (overview.isActive() || skipFragments || fragments.next() === false) &&\n      availableRoutes().right\n    ) {\n      slide(indexh + 1, config.navigationMode === \"grid\" ? indexv : undefined);\n    }\n  }\n\n  function navigateUp({ skipFragments = false } = {}) {\n    // Prioritize hiding fragments\n    if (\n      (overview.isActive() || skipFragments || fragments.prev() === false) &&\n      availableRoutes().up\n    ) {\n      slide(indexh, indexv - 1);\n    }\n  }\n\n  function navigateDown({ skipFragments = false } = {}) {\n    navigationHistory.hasNavigatedVertically = true;\n\n    // Prioritize revealing fragments\n    if (\n      (overview.isActive() || skipFragments || fragments.next() === false) &&\n      availableRoutes().down\n    ) {\n      slide(indexh, indexv + 1);\n    }\n  }\n\n  /**\n   * Navigates backwards, prioritized in the following order:\n   * 1) Previous fragment\n   * 2) Previous vertical slide\n   * 3) Previous horizontal slide\n   */\n  function navigatePrev({ skipFragments = false } = {}) {\n    // Prioritize revealing fragments\n    if (skipFragments || fragments.prev() === false) {\n      if (availableRoutes().up) {\n        navigateUp({ skipFragments });\n      } else {\n        // Fetch the previous horizontal slide, if there is one\n        let previousSlide;\n\n        if (config.rtl) {\n          previousSlide = Util.queryAll(\n            dom.wrapper,\n            HORIZONTAL_SLIDES_SELECTOR + \".future\"\n          ).pop();\n        } else {\n          previousSlide = Util.queryAll(\n            dom.wrapper,\n            HORIZONTAL_SLIDES_SELECTOR + \".past\"\n          ).pop();\n        }\n\n        // When going backwards and arriving on a stack we start\n        // at the bottom of the stack\n        if (previousSlide && previousSlide.classList.contains(\"stack\")) {\n          let v =\n            previousSlide.querySelectorAll(\"section\").length - 1 || undefined;\n          let h = indexh - 1;\n          slide(h, v);\n        } else {\n          navigateLeft({ skipFragments });\n        }\n      }\n    }\n  }\n\n  /**\n   * The reverse of #navigatePrev().\n   */\n  function navigateNext({ skipFragments = false } = {}) {\n    navigationHistory.hasNavigatedHorizontally = true;\n    navigationHistory.hasNavigatedVertically = true;\n\n    // Prioritize revealing fragments\n    if (skipFragments || fragments.next() === false) {\n      let routes = availableRoutes();\n\n      // When looping is enabled `routes.down` is always available\n      // so we need a separate check for when we've reached the\n      // end of a stack and should move horizontally\n      if (routes.down && routes.right && config.loop && isLastVerticalSlide()) {\n        routes.down = false;\n      }\n\n      if (routes.down) {\n        navigateDown({ skipFragments });\n      } else if (config.rtl) {\n        navigateLeft({ skipFragments });\n      } else {\n        navigateRight({ skipFragments });\n      }\n    }\n  }\n\n  // --------------------------------------------------------------------//\n  // ----------------------------- EVENTS -------------------------------//\n  // --------------------------------------------------------------------//\n\n  /**\n   * Called by all event handlers that are based on user\n   * input.\n   *\n   * @param {object} [event]\n   */\n  function onUserInput(event) {\n    if (config.autoSlideStoppable) {\n      pauseAutoSlide();\n    }\n  }\n\n  /**\n   * Listener for post message events posted to this window.\n   */\n  function onPostMessage(event) {\n    let data = event.data;\n\n    // Make sure we're dealing with JSON\n    if (\n      typeof data === \"string\" &&\n      data.charAt(0) === \"{\" &&\n      data.charAt(data.length - 1) === \"}\"\n    ) {\n      data = JSON.parse(data);\n\n      // Check if the requested method can be found\n      if (data.method && typeof Reveal[data.method] === \"function\") {\n        if (POST_MESSAGE_METHOD_BLACKLIST.test(data.method) === false) {\n          const result = Reveal[data.method].apply(Reveal, data.args);\n\n          // Dispatch a postMessage event with the returned value from\n          // our method invocation for getter functions\n          dispatchPostMessage(\"callback\", {\n            method: data.method,\n            result: result,\n          });\n        } else {\n          console.warn(\n            'reveal.js: \"' +\n              data.method +\n              '\" is is blacklisted from the postMessage API'\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Event listener for transition end on the current slide.\n   *\n   * @param {object} [event]\n   */\n  function onTransitionEnd(event) {\n    if (transition === \"running\" && /section/gi.test(event.target.nodeName)) {\n      transition = \"idle\";\n      dispatchEvent({\n        type: \"slidetransitionend\",\n        data: { indexh, indexv, previousSlide, currentSlide },\n      });\n    }\n  }\n\n  /**\n   * A global listener for all click events inside of the\n   * .slides container.\n   *\n   * @param {object} [event]\n   */\n  function onSlidesClicked(event) {\n    const anchor = Util.closest(event.target, 'a[href^=\"#\"]');\n\n    // If a hash link is clicked, we find the target slide\n    // and navigate to it. We previously relied on 'hashchange'\n    // for links like these but that prevented media with\n    // audio tracks from playing in mobile browsers since it\n    // wasn't considered a direct interaction with the document.\n    if (anchor) {\n      const hash = anchor.getAttribute(\"href\");\n      const indices = location.getIndicesFromHash(hash);\n\n      if (indices) {\n        Reveal.slide(indices.h, indices.v, indices.f);\n        event.preventDefault();\n      }\n    }\n  }\n\n  /**\n   * Handler for the window level 'resize' event.\n   *\n   * @param {object} [event]\n   */\n  function onWindowResize(event) {\n    layout();\n  }\n\n  /**\n   * Handle for the window level 'visibilitychange' event.\n   *\n   * @param {object} [event]\n   */\n  function onPageVisibilityChange(event) {\n    // If, after clicking a link or similar and we're coming back,\n    // focus the document.body to ensure we can use keyboard shortcuts\n    if (document.hidden === false && document.activeElement !== document.body) {\n      // Not all elements support .blur() - SVGs among them.\n      if (typeof document.activeElement.blur === \"function\") {\n        document.activeElement.blur();\n      }\n      document.body.focus();\n    }\n  }\n\n  /**\n   * Handler for the document level 'fullscreenchange' event.\n   *\n   * @param {object} [event]\n   */\n  function onFullscreenChange(event) {\n    let element =\n      document.fullscreenElement || document.webkitFullscreenElement;\n    if (element === dom.wrapper) {\n      event.stopImmediatePropagation();\n\n      // Timeout to avoid layout shift in Safari\n      setTimeout(() => {\n        Reveal.layout();\n        Reveal.focus.focus(); // focus.focus :'(\n      }, 1);\n    }\n  }\n\n  /**\n   * Handles clicks on links that are set to preview in the\n   * iframe overlay.\n   *\n   * @param {object} event\n   */\n  function onPreviewLinkClicked(event) {\n    if (event.currentTarget && event.currentTarget.hasAttribute(\"href\")) {\n      let url = event.currentTarget.getAttribute(\"href\");\n      if (url) {\n        showPreview(url);\n        event.preventDefault();\n      }\n    }\n  }\n\n  /**\n   * Handles click on the auto-sliding controls element.\n   *\n   * @param {object} [event]\n   */\n  function onAutoSlidePlayerClick(event) {\n    // Replay\n    if (isLastSlide() && config.loop === false) {\n      slide(0, 0);\n      resumeAutoSlide();\n    }\n    // Resume\n    else if (autoSlidePaused) {\n      resumeAutoSlide();\n    }\n    // Pause\n    else {\n      pauseAutoSlide();\n    }\n  }\n\n  // --------------------------------------------------------------------//\n  // ------------------------------- API --------------------------------//\n  // --------------------------------------------------------------------//\n\n  // The public reveal.js API\n  const API = {\n    VERSION,\n\n    initialize,\n    configure,\n    destroy,\n\n    sync,\n    syncSlide,\n    syncFragments: fragments.sync.bind(fragments),\n\n    // Navigation methods\n    slide,\n    left: navigateLeft,\n    right: navigateRight,\n    up: navigateUp,\n    down: navigateDown,\n    prev: navigatePrev,\n    next: navigateNext,\n\n    // Navigation aliases\n    navigateLeft,\n    navigateRight,\n    navigateUp,\n    navigateDown,\n    navigatePrev,\n    navigateNext,\n\n    // Fragment methods\n    navigateFragment: fragments.goto.bind(fragments),\n    prevFragment: fragments.prev.bind(fragments),\n    nextFragment: fragments.next.bind(fragments),\n\n    // Event binding\n    on,\n    off,\n\n    // Legacy event binding methods left in for backwards compatibility\n    addEventListener: on,\n    removeEventListener: off,\n\n    // Forces an update in slide layout\n    layout,\n\n    // Randomizes the order of slides\n    shuffle,\n\n    // Returns an object with the available routes as booleans (left/right/top/bottom)\n    availableRoutes,\n\n    // Returns an object with the available fragments as booleans (prev/next)\n    availableFragments: fragments.availableRoutes.bind(fragments),\n\n    // Toggles a help overlay with keyboard shortcuts\n    toggleHelp,\n\n    // Toggles the overview mode on/off\n    toggleOverview: overview.toggle.bind(overview),\n\n    // Toggles the \"black screen\" mode on/off\n    togglePause,\n\n    // Toggles the auto slide mode on/off\n    toggleAutoSlide,\n\n    // Slide navigation checks\n    isFirstSlide,\n    isLastSlide,\n    isLastVerticalSlide,\n    isVerticalSlide,\n\n    // State checks\n    isPaused,\n    isAutoSliding,\n    isSpeakerNotes: notes.isSpeakerNotesWindow.bind(notes),\n    isOverview: overview.isActive.bind(overview),\n    isFocused: focus.isFocused.bind(focus),\n    isPrintingPDF: print.isPrintingPDF.bind(print),\n\n    // Checks if reveal.js has been loaded and is ready for use\n    isReady: () => ready,\n\n    // Slide preloading\n    loadSlide: slideContent.load.bind(slideContent),\n    unloadSlide: slideContent.unload.bind(slideContent),\n\n    // Preview management\n    showPreview,\n    hidePreview: closeOverlay,\n\n    // Adds or removes all internal event listeners\n    addEventListeners,\n    removeEventListeners,\n    dispatchEvent,\n\n    // Facility for persisting and restoring the presentation state\n    getState,\n    setState,\n\n    // Presentation progress on range of 0-1\n    getProgress,\n\n    // Returns the indices of the current, or specified, slide\n    getIndices,\n\n    // Returns an Array of key:value maps of the attributes of each\n    // slide in the deck\n    getSlidesAttributes,\n\n    // Returns the number of slides that we have passed\n    getSlidePastCount,\n\n    // Returns the total number of slides\n    getTotalSlides,\n\n    // Returns the slide element at the specified index\n    getSlide,\n\n    // Returns the previous slide element, may be null\n    getPreviousSlide: () => previousSlide,\n\n    // Returns the current slide element\n    getCurrentSlide: () => currentSlide,\n\n    // Returns the slide background element at the specified index\n    getSlideBackground,\n\n    // Returns the speaker notes string for a slide, or null\n    getSlideNotes: notes.getSlideNotes.bind(notes),\n\n    // Returns an Array of all slides\n    getSlides,\n\n    // Returns an array with all horizontal/vertical slides in the deck\n    getHorizontalSlides,\n    getVerticalSlides,\n\n    // Checks if the presentation contains two or more horizontal\n    // and vertical slides\n    hasHorizontalSlides,\n    hasVerticalSlides,\n\n    // Checks if the deck has navigated on either axis at least once\n    hasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n    hasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n    // Adds/removes a custom key binding\n    addKeyBinding: keyboard.addKeyBinding.bind(keyboard),\n    removeKeyBinding: keyboard.removeKeyBinding.bind(keyboard),\n\n    // Programmatically triggers a keyboard event\n    triggerKey: keyboard.triggerKey.bind(keyboard),\n\n    // Registers a new shortcut to include in the help overlay\n    registerKeyboardShortcut: keyboard.registerKeyboardShortcut.bind(keyboard),\n\n    getComputedSlideSize,\n\n    // Returns the current scale of the presentation content\n    getScale: () => scale,\n\n    // Returns the current configuration object\n    getConfig: () => config,\n\n    // Helper method, retrieves query string as a key:value map\n    getQueryHash: Util.getQueryHash,\n\n    // Returns the path to the current slide as represented in the URL\n    getSlidePath: location.getHash.bind(location),\n\n    // Returns reveal.js DOM elements\n    getRevealElement: () => revealElement,\n    getSlidesElement: () => dom.slides,\n    getViewportElement: () => dom.viewport,\n    getBackgroundsElement: () => backgrounds.element,\n\n    // API for registering and retrieving plugins\n    registerPlugin: plugins.registerPlugin.bind(plugins),\n    hasPlugin: plugins.hasPlugin.bind(plugins),\n    getPlugin: plugins.getPlugin.bind(plugins),\n    getPlugins: plugins.getRegisteredPlugins.bind(plugins),\n  };\n\n  // Our internal API which controllers have access to\n  Util.extend(Reveal, {\n    ...API,\n\n    // Methods for announcing content to screen readers\n    announceStatus,\n    getStatusText,\n\n    // Controllers\n    print,\n    focus,\n    progress,\n    controls,\n    location,\n    overview,\n    fragments,\n    slideContent,\n    slideNumber,\n\n    onUserInput,\n    closeOverlay,\n    updateSlidesVisibility,\n    layoutSlideContents,\n    transformSlides,\n    cueAutoSlide,\n    cancelAutoSlide,\n  });\n\n  return API;\n}\n","import Deck, { VERSION } from \"./reveal.js\";\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = (options) => {\n  // Create our singleton reveal.js instance\n  Object.assign(Reveal, new Deck(document.querySelector(\".reveal\"), options));\n\n  // Invoke any enqueued API calls\n  enqueuedAPICalls.map((method) => method(Reveal));\n\n  return Reveal.initialize();\n};\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[\n  \"configure\",\n  \"on\",\n  \"off\",\n  \"addEventListener\",\n  \"removeEventListener\",\n  \"registerPlugin\",\n].forEach((method) => {\n  Reveal[method] = (...args) => {\n    enqueuedAPICalls.push((deck) => deck[method].call(null, ...args));\n  };\n});\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;\n"],"names":["extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","createSingletonNode","container","tagname","classname","innerHTML","nodes","length","testNode","node","document","createElement","appendChild","createStyleSheet","tag","type","styleSheet","cssText","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","getRemainingHeight","height","newHeight","oldHeight","offsetHeight","removeProperty","fileExtensionToMimeMap","mp4","m4a","ogv","mpeg","webm","UA","navigator","userAgent","isMobile","test","platform","maxTouchPoints","isAndroid","e","t","slice","o","l","u","cancelAnimationFrame","requestAnimationFrame","s","filter","dirty","active","c","forEach","styleComputed","m","y","v","p","d","f","S","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","n","getComputedStyle","getPropertyValue","display","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","h","w","observeMutations","observer","disconnect","originalStyle","z","F","MutationObserver","observe","g","subtree","childList","characterData","W","E","clearTimeout","setTimeout","x","observeWindowDelay","M","Object","defineProperty","set","concat","observeWindow","fitAll","C","assign","map","newbie","push","fit","unfreeze","freeze","unsubscribe","arguments","window","SlideContent","constructor","Reveal","this","startEmbeddedIframe","bind","shouldPreload","preload","getConfig","preloadIframes","hasAttribute","load","slide","options","tagName","setAttribute","getAttribute","removeAttribute","media","sources","source","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","trim","encodeURI","join","isSpeakerNotes","video","muted","getMimeTypeFromFile","excludeIframes","iframe","width","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","scopeElement","fitty","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","addEventListener","removeEventListener","event","isAttachedToDOM","isVisible","currentTime","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintingPDF","showSlideNumber","update","getSlideNumber","undefined","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","sep","isVerticalSlide","url","getHash","formatNumber","delimiter","isNaN","destroy","colorToRgb","color","hex3","r","parseInt","charAt","hex6","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","contentElement","sync","data","backgroundColor","backgroundGradient","backgroundTransition","backgroundOpacity","dataPreload","opacity","contrastColor","computedBackgroundStyle","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","previousBackground","slideContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","classToBubble","contains","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","verticalSlideCount","parallaxBackgroundVertical","POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","getSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","fromSlideIsHidden","css","getAutoAnimatableElements","elements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","delay","autoAnimateTarget","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","nodeName","innerText","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","key","fromElement","pimaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","Fragments","fragments","disable","enable","availableRoutes","hiddenFragments","prev","next","sort","grouped","ordered","unordered","sorted","fragment","group","sortAll","horizontalSlide","verticalSlide","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","progress","fragmentInURL","writeURL","Overview","onSlideClicked","activate","overview","isActive","cancelAutoSlide","getBackgroundsElement","margin","slideSize","getComputedSlideSize","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","indexh","indexv","hslide","vslide","hbackground","vbackground","vmin","innerWidth","innerHeight","transformSlides","deactivate","cueAutoSlide","toggle","override","preventDefault","Keyboard","shortcuts","bindings","onDocumentKeyDown","onDocumentKeyPress","navigationMode","unbind","addKeyBinding","binding","callback","keyCode","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","shiftKey","charCode","toggleHelp","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","skipFragments","left","right","up","Number","MAX_VALUE","down","togglePause","requestMethod","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","enterFullscreen","embedded","getViewportElement","autoSlideStoppable","toggleAutoSlide","closeOverlay","Location","MAX_REPLACE_STATE_FREQUENCY","writeURLTimeout","replaceStateTimestamp","onWindowHashChange","getIndicesFromHash","name","hash","bits","hashIndexBase","hashOneBasedIndex","getElementById","decodeURIComponent","error","readURL","currentIndices","newIndices","history","debouncedReplaceState","pathname","replaceState","Date","now","replaceStateTimeout","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slides","slidesTotal","slideIndex","floor","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","insertBefore","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","Promise","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","init","hasPlugin","getPlugin","getRegisteredPlugins","Print","[object Object]","injectPageNumbers","pageWidth","pageHeight","body","viewportElement","presentationBackground","viewportStyles","layoutSlideContents","slideScrollHeights","scrollHeight","pages","pageContainer","top","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","page","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","fragmentGroups","previousFragmentStep","clonedPage","cloneNode","fragmentNumber","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","clientY","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","Focus","onRevealPointerDown","onDocumentPointerDown","blur","focus","Notes","print","updateVisibility","hasNotes","isSpeakerNotesWindow","notesElements","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","defaultConfig","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","POSITIVE_INFINITY","viewDistance","mobileViewDistance","Deck","previousSlide","autoSlidePlayer","ready","navigationHistory","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","backgrounds","pointer","initialize","initOptions","wrapper","Util","setViewport","start","viewport","removeHiddenSlides","setupDOM","setupPostMessage","setupScrollPrevention","setupFullscreen","resetVerticalSlides","removeEventListeners","setupPDF","Device","pauseOverlay","statusElement","createStatusElement","position","overflow","clip","text","nodeType","isAriaHidden","isDisplayHidden","child","setInterval","scrollTop","scrollLeft","onFullscreenChange","onPostMessage","isReady","numberOfSlides","setProperty","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onSlidesClicked","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","_ref","createEvent","initEvent","dispatchPostMessage","parent","self","message","namespace","getState","JSON","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","size","oldScale","presentationWidth","presentationHeight","zoom","len","remainingHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","stack","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","resumeAutoSlide","pauseAutoSlide","origin","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","getVerticalStacks","stateLoop","j","splice","syncSlide","beforeSlide","random","slidesLength","printMode","loopedForwards","loopedBackwards","reverse","showFragmentsIn","hideFragmentsIn","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","totalCount","allFragments","fragmentWeight","isVertical","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","getSlidesAttributes","attributes","attribute","getSlide","indexf","paused","setState","pausedFlag","overviewFlag","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","parse","method","args","anchor","fullscreenElement","webkitFullscreenElement","stopImmediatePropagation","currentTarget","API","VERSION","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","isOverview","loadSlide","unloadSlide","hidePreview","getPreviousSlide","getSlidePath","getPlugins","enqueuedAPICalls","_len","_key","deck"],"mappings":"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"}